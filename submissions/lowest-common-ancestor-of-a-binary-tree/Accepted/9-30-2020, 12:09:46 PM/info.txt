{"id":402794540,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1601492986,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/402794540/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"14.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if (!root || root == p || root == q) {\n            return root;\n        }\n        TreeNode* left = lowestCommonAncestor(root->left, p, q);\n        TreeNode* right = lowestCommonAncestor(root->right, p, q);\n        if (left && right) {\n            return root;\n        }\n        if (left && not right) {\n            return left;\n        } else {\n            return right;\n        }\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}