{"id":390999840,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1599241179,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/390999840/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"14.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if (!root) return nullptr;\n        if (root == p or root == q) return root;\n        \n        TreeNode* left = lowestCommonAncestor(root->left, p, q);\n        TreeNode* right = lowestCommonAncestor(root->right, p, q);\n        if (left && right) return root;\n        return left ? left : right; \n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}