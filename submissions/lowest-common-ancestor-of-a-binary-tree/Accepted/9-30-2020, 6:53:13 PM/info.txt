{"id":402910166,"lang":"python","lang_name":"Python","time":"2 years, 11 months","timestamp":1601517193,"status":10,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/402910166/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"25.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution(object):\n    def lowestCommonAncestor(self, root, p, q):\n        \"\"\"\n        :type root: TreeNode\n        :type p: TreeNode\n        :type q: TreeNode\n        :rtype: TreeNode\n        \"\"\"\n        if not root or root == p or root == q:\n            return root\n        l = self.lowestCommonAncestor(root.left, p, q)\n        r = self.lowestCommonAncestor(root.right, p, q)\n        if l and r:\n            return root\n        return l if l else r","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}