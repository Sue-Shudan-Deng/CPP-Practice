{"id":402910024,"lang":"python","lang_name":"Python","time":"2 years, 11 months","timestamp":1601517165,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/402910024/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution(object):\n    def lowestCommonAncestor(self, root, p, q):\n        \"\"\"\n        :type root: TreeNode\n        :type p: TreeNode\n        :type q: TreeNode\n        :rtype: TreeNode\n        \"\"\"\n        if not root or root == p or root == q:\n            return root\n        l = self.lowestCommonAncestor(root.left, p, q)\n        r = l = self.lowestCommonAncestor(root.right, p, q)\n        if l == r:\n            return root\n        return l if l else r","compare_result":"1011111111110100101110011000000","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}