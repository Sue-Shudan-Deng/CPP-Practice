{"id":395901701,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600141998,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/395901701/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n\n        def search(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n            if !root or root == p or root == q:\n                return root\n            left = self.search(root, p, q)\n            right = self.serach(root, p, q)\n            if left and right:\n                return root\n            return left if left else right\n        \n        return self.search(root, p, q)","compare_result":"0000000000000000000000000000000","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}