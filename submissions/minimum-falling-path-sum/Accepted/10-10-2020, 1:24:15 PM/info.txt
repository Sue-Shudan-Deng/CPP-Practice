{"id":407047700,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602361455,"status":10,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/407047700/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"14.8 MB","code":"class Solution:\n    def minFallingPathSum(self, A: List[List[int]]) -> int:\n        row, col = len(A), len(A[0]) \n        dp = [[float(\"inf\") for _ in range(col + 2)] for _ in range(row + 2)]\n        dp[-1] = [0 for _ in range(col + 2)]\n        for r in range(row, 0, -1):\n            for c in range(col, 0, -1):\n                dp[r][c] = A[r-1][c-1] + min(dp[r+1][c+1], dp[r+1][c], dp[r+1][c-1])\n        return min(dp[1])","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"minimum-falling-path-sum","has_notes":false,"flag_type":1}