{"id":395906269,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600142644,"status":10,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/395906269/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"17.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n        if not root:\n            return root\n        if p.val < root.val and q.val < root.val:\n            return self.lowestCommonAncestor(root.left, p, q)\n        elif p.val > root.val and q.val > root.val:\n            return self.lowestCommonAncestor(root.right, p, q)\n        else:\n            return root","compare_result":"111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false,"flag_type":1}