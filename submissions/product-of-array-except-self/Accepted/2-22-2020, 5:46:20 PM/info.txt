{"id":305915187,"lang":"python3","lang_name":"Python3","time":"3 years, 6 months","timestamp":1582422380,"status":10,"status_display":"Accepted","runtime":"120 ms","url":"/submissions/detail/305915187/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"19.4 MB","code":"# O(n)\nclass Solution:\n    def productExceptSelf(self, nums: List[int]) -> List[int]:\n        # left and right array\n        L, R = [1] * len(nums), [1] * len(nums)\n        ans = [0] * len(nums)\n        for k in range(1, len(nums)):\n            L[k] = L[k-1] * nums[k-1]\n        for k in range(len(nums) - 2, -1, -1):\n            R[k] = R[k+1] * nums[k+1]\n        for k in range(len(nums)):\n            ans[k] = L[k] * R[k]\n        return ans\n    \n# O(1)\nclass Solution:\n    def productExceptSelf(self, nums: List[int]) -> List[int]:\n        # left and right array\n        # 首先, left直接就是ans的一部分\n        # 其次，R没必要写成list形式\n        ans = [1] * len(nums)\n        for k in range(1, len(nums)):\n            ans[k] = ans[k-1] * nums[k-1]\n        R = 1\n        for k in range(len(nums) - 1, -1, -1):\n            ans[k] *= R\n            R *= nums[k]\n        return ans","compare_result":"11111111111111111","title_slug":"product-of-array-except-self","has_notes":false,"flag_type":1}