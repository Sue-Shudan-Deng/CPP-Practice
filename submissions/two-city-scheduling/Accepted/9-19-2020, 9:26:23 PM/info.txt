{"id":398162116,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600575983,"status":10,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/398162116/","is_pending":"Not Pending","title":"Two City Scheduling","memory":"14 MB","code":"class Solution:\n    def twoCitySchedCost(self, costs: List[List[int]]) -> int:\n        # min(A[0:i]-B[0:i]) + min(B[i+1:n]-A[i+1:n])\n        # = min(A[0:i]-B[0:i]) + max(A[i+1:n]-A[i+1:n])\n        costs.sort(key = lambda x: x[0]-x[1])\n        total = 0\n        n = len(costs) // 2\n        for i in range(n):\n            total += costs[i][0] + costs[i + n][1]\n        return total","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"two-city-scheduling","has_notes":false,"flag_type":1}