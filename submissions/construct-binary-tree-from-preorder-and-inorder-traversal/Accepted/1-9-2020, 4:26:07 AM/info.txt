{"id":292653599,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1578572767,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/292653599/","is_pending":"Not Pending","title":"Construct Binary Tree from Preorder and Inorder Traversal","memory":"17 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nfrom collections import deque\nclass Solution:\n    def buildTree(self, preorder: List[int], inorder: List[int]) -> TreeNode:\n        def helper(left_idx, right_idx):\n            if left_idx > right_idx:\n                return None\n            root_val = preorder.popleft()\n            root = TreeNode(root_val)\n            root_idx = mapping[root_val]\n            root.left = helper(left_idx, root_idx-1)\n            root.right = helper(root_idx+1, right_idx)\n            return root\n            \n        mapping = {v:k for k,v in enumerate(inorder)}\n        preorder = deque(preorder)\n        return helper(0, len(preorder)-1)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-tree-from-preorder-and-inorder-traversal","has_notes":false,"flag_type":1}