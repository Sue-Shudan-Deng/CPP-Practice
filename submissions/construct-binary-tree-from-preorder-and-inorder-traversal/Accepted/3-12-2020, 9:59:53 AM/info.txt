{"id":311840705,"lang":"python","lang_name":"Python","time":"3 years, 5 months","timestamp":1584032393,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/311840705/","is_pending":"Not Pending","title":"Construct Binary Tree from Preorder and Inorder Traversal","memory":"16.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution(object):\n    def buildTree(self, preorder, inorder):\n        \"\"\"\n        :type preorder: List[int]\n        :type inorder: List[int]\n        :rtype: TreeNode\n        \"\"\"\n        def helper(left_idx, right_idx):\n            if left_idx > right_idx:\n                return None\n            root_val = preorder.pop(0)\n            root = TreeNode(root_val)\n            root_idx = mapping[root_val]\n            root.left = helper(left_idx, root_idx - 1)\n            root.right = helper(root_idx + 1, right_idx)\n            return root\n            \n        mapping = {v:k for k, v in enumerate(inorder)}\n        return helper(0, len(inorder) - 1)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-tree-from-preorder-and-inorder-traversal","has_notes":false,"flag_type":1}