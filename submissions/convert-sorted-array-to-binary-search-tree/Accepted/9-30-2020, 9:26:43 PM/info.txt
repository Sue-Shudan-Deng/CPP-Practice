{"id":402961618,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1601526403,"status":10,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/402961618/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"16.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def sortedArrayToBST(self, nums: List[int]) -> TreeNode:        \n        def helper(l, r):\n            if l > r:\n                return None\n\n            # always choose left middle node as a root\n            m = l + (r - l) // 2\n\n            # preorder traversal: node -> left -> right\n            root = TreeNode(nums[m])\n            root.left = helper(l, m - 1)\n            root.right = helper(m + 1, r)\n            return root\n        \n        return helper(0, len(nums) - 1)","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}