{"id":398545188,"lang":"python3","lang_name":"Python3","time":"2Â years, 11Â months","timestamp":1600653228,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/398545188/","is_pending":"Not Pending","title":"Decode Ways","memory":"N/A","code":"class Solution:\n    def numDecodings(self, s: str) -> int:\n        \n        def valid(s: str):\n            return 1 <= int(s) and int(s) <= 26\n        \n        n = len(s)\n        if n == 1:\n            return valid(s)\n        if n == 2:\n            return (valid(s[0]) and valid(s[1])) + valid(s)\n        \n        dp = [0 for _ in range(n)]\n        dp[0] = valid(s[0])\n        dp[1] = (valid(s[0]) and valid(s[1])) + valid(s[-2:])\n        for i in range(2, n):\n            if valid(s[i]):\n                dp[i] += dp[i-1]\n            if valid(s[-2:]):\n                dp[i] += dp[i-2]\n        print(dp)\n        return dp[-1]","compare_result":"110000111111001011101001011000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111011110101111101010110001011011111111110011111101010011010100100100010110100000011010010001001001101100010000101010000000000100000001001100001","title_slug":"decode-ways","has_notes":false,"flag_type":1}