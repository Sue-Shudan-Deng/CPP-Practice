{"id":417836540,"lang":"cpp","lang_name":"C++","time":"2 years, 10 months","timestamp":1604783382,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/417836540/","is_pending":"Not Pending","title":"Similar String Groups","memory":"N/A","code":"class Solution {\n    \nprivate:\n    map<string, string> parent;\n    map<string, int> size;\n    int cnt;\n    string find(string x) {\n        if (x != parent[x]) {\n            parent[x] = find(parent[x]);\n        }\n        return parent[x];\n    }\n    \n    void Union(string u, string v) {\n        string pu = find(u);\n        string pv = find(v);\n        if (pu == pv) {\n            // 当且仅当 union操作成功的时候,cnt才会-1\n            return;\n        }\n        if (size[pu] < size[pv]) {\n            swap(pu, pv);\n        }\n        parent[pv] = pu;\n        size[pu] += size[pv];\n        --cnt;\n    }\n    \n    bool isSimilar(string s1, string s2) {\n        int n = s1.size(), diff = 0;\n        set<int> c1, c2;\n        for (auto i = 0; i < n; ++i) {\n            if (s1[i] != s2[i]) {\n                ++diff;\n            }\n            c1.insert(s1[i]);\n            c2.insert(s2[i]);\n            if (diff > 2) {\n                return false;\n            }\n        }\n        return c1 == c2 ? true : false;\n    }\n    \npublic:\n    int numSimilarGroups(vector<string>& A) {\n        for (auto s : A) {\n            parent[s] = s;\n            size[s] = 1;\n        }\n        cnt = A.size();\n        int n = A.size();\n        for (int i = 0; i < n; ++i) {\n            for (int j = i + 1; j < n; ++j) {\n                if (isSimilar(A[i], A[j])) {\n                    Union(A[i], A[j]);\n                }\n            }\n        }\n        return cnt;\n    }\n};","compare_result":"111111011111111111111111111100000000000000000000000000000000000","title_slug":"similar-string-groups","has_notes":false,"flag_type":1}