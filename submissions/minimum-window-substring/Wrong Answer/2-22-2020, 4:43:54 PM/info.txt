{"id":305897769,"lang":"python3","lang_name":"Python3","time":"3 years, 6 months","timestamp":1582418634,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/305897769/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"N/A","code":"class Solution:\n    def minWindow(self, s: str, t: str) -> str:\n        s_dict = dict()\n        for i, ch in enumerate(s):\n            if ch in t:\n                s_dict[i] = ch\n        idxs = list(s_dict.keys())\n        dict_t = collections.Counter(t)\n        cur = dict()\n        required = len(dict_t)\n        l, r, formed = 0, 0, 0\n        ans = (float(\"inf\"), None, None)\n        \n        while r < len(idxs):\n            ch = s_dict[idxs[r]]\n            if not cur.get(ch):\n                cur[ch] = 0\n            cur[ch] += 1\n            if cur[ch] == dict_t[ch]:\n                formed += 1\n            while l <= r and formed == required:\n                start = idxs[l]\n                end = idxs[r]\n                if end - start + 1 < ans[0]:\n                    ans = (end - start - 1, start, end)\n                formed -= 1\n                l += 1\n            r += 1\n        return s[start:end + 1] if ans[0] != float(\"inf\") else \"\" ","compare_result":"0111111111111111111100000000000000011011000000110011111111111110111111011110111001111111111110111111110100001101111010110111111111111111111111111111111111111111111111111110000111001001000000110110100000000110000010000001100000000000000000000000000000000000001100000000","title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}