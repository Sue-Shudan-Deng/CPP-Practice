{"id":311961508,"lang":"python","lang_name":"Python","time":"3 years, 5 months","timestamp":1584068109,"status":10,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/311961508/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"12.6 MB","code":"class Solution(object):\n    def minWindow(self, s, t):\n        \"\"\"\n        :type s: str\n        :type t: str\n        :rtype: str\n        \"\"\"\n        t_dict = collections.Counter(t)\n        l, r, formed, curr = 0, 0, 0, dict()\n        ans = (float(\"inf\"), l, r)\n        while r < len(s):\n            char = s[r]\n            if not curr.get(char):\n                curr[char] = 0\n            curr[char] += 1\n            if curr[char] == t_dict[char]:\n                formed += 1\n            while l <= r and formed == len(t_dict):\n                if r - l + 1 < ans[0]:\n                    ans = (r - l + 1, l, r)\n                curr[s[l]] -= 1\n                if curr[s[l]] < t_dict[s[l]]:\n                    formed -= 1\n                l += 1\n            r += 1\n        return s[ans[1]:ans[2] + 1] if ans[0] != float(\"inf\") else \"\"\n                    ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}