{"id":311959527,"lang":"python3","lang_name":"Python3","time":"3 years, 5 months","timestamp":1584067574,"status":10,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/311959527/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"13.4 MB","code":"class Solution:\n    def minWindow(self, s: str, t: str) -> str:\n        t_dict = collections.Counter(t)\n        l, r, formed, cur = 0, 0, 0, dict()\n        ans = (float(\"inf\"), l, r)\n        while r < len(s):\n            c = s[r]\n            if not cur.get(c):\n                cur[c] = 0\n            cur[c] += 1\n            if cur[c] == t_dict[c]:\n                formed += 1\n            while l <= r and formed == len(t_dict):\n                if r - l + 1 < ans[0]:\n                    ans = (r - l + 1, l, r)\n                c = s[l]\n                cur[c] -= 1\n                if cur[c] < t_dict[c]:\n                    formed -= 1\n                l += 1\n            r += 1\n        return s[ans[1]:ans[2] + 1] if ans[0] != float(\"inf\") else \"\"","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}