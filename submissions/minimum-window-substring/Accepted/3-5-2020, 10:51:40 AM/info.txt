{"id":309647662,"lang":"python3","lang_name":"Python3","time":"3 years, 6 months","timestamp":1583434300,"status":10,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/309647662/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"16.9 MB","code":"class Solution:\n    def minWindow(self, s: str, t: str) -> str:\n        idxs = list(range(len(s)))\n        dict_t = collections.Counter(t)\n        cur = dict()\n        required = len(dict_t)\n        l, r, formed = 0, 0, 0\n        ans = (float(\"inf\"), None, None)\n        \n        while r < len(idxs):\n            ch = s[r]\n            if not cur.get(ch):\n                cur[ch] = 0\n            cur[ch] += 1\n            if cur[ch] == dict_t[ch]:\n                formed += 1\n            # print(\"out\", l, r, ch, formed)\n            while l <= r and formed == required:\n                if r - l + 1 < ans[0]:\n                    ans = (r - l + 1, l, r)\n                ch = s[l]\n                cur[ch] -= 1\n                if cur[ch] < dict_t[ch]:\n                    formed -= 1\n                l += 1\n            r += 1\n        return s[ans[1]:ans[2] + 1] if ans[0] != float(\"inf\") else \"\" ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}