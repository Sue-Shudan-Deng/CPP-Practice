{"id":309650809,"lang":"python","lang_name":"Python","time":"3 years, 6 months","timestamp":1583435166,"status":10,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/309650809/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"15.9 MB","code":"class Solution(object):\n    def minWindow(self, s, t):\n        \"\"\"\n        :type s: str\n        :type t: str\n        :rtype: str\n        \"\"\"\n        idxs = list(range(len(s)))\n        t_dict = collections.Counter(t)\n        length = len(s)\n        required = len(t_dict)\n        cur = dict()\n        l, r, formed = 0, 0, 0\n        ans = (float(\"inf\"), l, r)\n        while r < length:\n            c = s[r]\n            if not cur.get(c):\n                cur[c] = 0\n            cur[c] += 1\n            if cur[c] == t_dict[c]:\n                formed += 1\n            while l <= r and formed == required:\n                if r - l + 1 < ans[0]:\n                    ans = (r - l + 1, l, r)\n                c = s[l]\n                cur[c] -= 1\n                if cur[c] < t_dict[c]:\n                    formed -= 1\n                l += 1\n            r += 1\n        return s[ans[1]:ans[2] + 1] if ans[0] != float(\"inf\") else \"\"","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}