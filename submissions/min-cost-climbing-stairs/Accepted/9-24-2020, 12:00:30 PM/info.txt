{"id":400237241,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600974030,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/400237241/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"13.9 MB","code":"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        cost = cost + [0]\n        n = len(cost)\n        dp = [0 for _ in range(n)]\n        dp[0] = cost[0]\n        dp[1] = cost[1]\n        for i in range(2, n):\n            dp[i] = min(dp[i-1], dp[i-2]) + cost[i]\n        return dp[-1]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}