{"id":419034188,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605064647,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/419034188/","is_pending":"Not Pending","title":"Remove Invalid Parentheses","memory":"14.1 MB","code":"class Solution:\n    def removeInvalidParentheses(self, s: str) -> List[str]:\n        def isValid(s):\n            cnt = 0\n            for i in s:\n                if i == \"(\":\n                    cnt += 1\n                elif i == \")\":\n                    cnt -= 1\n                if cnt < 0:\n                    return False\n            return cnt == 0\n        \n        ans = []\n        def dfs(s, start, l, r):\n            n = len(s)\n            if l == 0 and r == 0 and isValid(s):\n                ans.append(s)\n                \n            for i in range(start, n):\n                ch = s[i]\n                if not (ch == \"(\" or ch == \")\"):\n                    continue\n                    \n                if i != start and s[i] == s[i-1]:\n                    continue\n                \n                # 因为这里 l == 0 and r == 0 不满足，所以必然会删除一个                \n                new_s = s[:i] + s[i+1:]\n                # step 1: remove \")\" before \"(\"\n                if s[i] == \")\" and r > 0:\n                    dfs(new_s, i, l, r - 1)\n                    \n                if s[i] == \"(\" and l > 0:\n                    dfs(new_s, i, l - 1, r)\n                    \n        l, r = 0, 0\n        for c in s:\n            l += (c == \"(\")\n            if l == 0:\n                r += (c == \")\")\n            else:\n                l -= (c == \")\")\n        \n        dfs(s, 0, l ,r)\n        return ans if ans else [\"\"]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-invalid-parentheses","has_notes":false,"flag_type":1}