{"id":419032947,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605064396,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/419032947/","is_pending":"Not Pending","title":"Remove Invalid Parentheses","memory":"N/A","code":"class Solution:\n    def removeInvalidParentheses(self, s: str) -> List[str]:\n        def isValid(s):\n            cnt = 0\n            for i in s:\n                if i == \"(\":\n                    cnt += 1\n                elif i == \")\":\n                    cnt -= 1\n                if cnt < 0:\n                    return False\n            return cnt == 0\n        \n        ans = set()\n        def dfs(s, l, r):\n            n = len(s)\n            if l == 0 and r == 0 and isValid(s):\n                ans.add(s)\n                \n            for i in range(n):\n                ch = s[i]\n                if not (ch == \"(\" or ch == \")\"):\n                    continue\n                    \n                if s[i] == s[i-1]:\n                    continue\n                \n                # 因为这里 l == 0 and r == 0 不满足，所以必然会删除一个                \n                new_s = s[:i] + s[i+1:]\n                # step 1: remove \")\" before \"(\"\n                if s[i] == \")\" and r > 0:\n                    dfs(new_s, l, r - 1)\n                    \n                if s[i] == \"(\" and l > 0:\n                    dfs(new_s, l - 1, r)\n                    \n        l, r = 0, 0\n        for c in s:\n            l += (c == \"(\")\n            if l == 0:\n                r += (c == \")\")\n            else:\n                l -= (c == \")\")\n        \n        dfs(s, l ,r)\n        return list(ans) if ans else [\"\"]","compare_result":"111111111111111111111111111111111111111110110111111111110101111111111101111111111111110001100111111111000000000000000000000000","title_slug":"remove-invalid-parentheses","has_notes":false,"flag_type":1}