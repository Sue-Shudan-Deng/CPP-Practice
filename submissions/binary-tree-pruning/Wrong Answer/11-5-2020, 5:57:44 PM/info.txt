{"id":417252114,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604627864,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/417252114/","is_pending":"Not Pending","title":"Binary Tree Pruning","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def pruneTree(self, root: TreeNode) -> TreeNode:\n        def containsOne(root):\n            if not root:\n                return False\n            l = containsOne(root.left)\n            r = containsOne(root.right)\n            if not l:\n                root.left = None\n            if not r:\n                root.right = None\n            return root.val or l or r\n        containsOne(root)\n        return root","compare_result":"11111101111111111111111111111","title_slug":"binary-tree-pruning","has_notes":false,"flag_type":1}