{"id":396901876,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600321068,"status":10,"status_display":"Accepted","runtime":"1024 ms","url":"/submissions/detail/396901876/","is_pending":"Not Pending","title":"Fruit Into Baskets","memory":"19.2 MB","code":"class Solution:\n    def totalFruit(self, tree: List[int]) -> int:\n        flag, ans, j = 2, 0, 0\n        s = []\n        for i in range(len(tree)):\n            if not tree[i] in s:\n                if len(s) <= 2:\n                    s.append(tree[i])\n                if len(s) > 2:\n                    ans = max(ans, i-j)\n                    j = i-1\n                    while tree[j] == tree[i-1]:\n                        j -= 1\n                    j += 1\n                    s = [tree[i], tree[j]]\n        ans = max(ans, len(tree)-j)\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"fruit-into-baskets","has_notes":false,"flag_type":1}