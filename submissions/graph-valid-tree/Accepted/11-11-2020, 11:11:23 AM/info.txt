{"id":419272671,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605121883,"status":10,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/419272671/","is_pending":"Not Pending","title":"Graph Valid Tree","memory":"16.2 MB","code":"class Solution:\n    def validTree(self, n: int, edges: List[List[int]]) -> bool:\n        \"\"\"\n        684. Redundant Connection\n        \"\"\"\n        parent = [i for i in range(n)]\n        cnt = n\n        def find(x):\n            if x != parent[x]:\n                parent[x] = find(parent[x])\n            return parent[x]\n        \n        def Union(x, y):\n            nonlocal cnt\n            px, py = find(x), find(y)\n            if px == py:\n                return False\n            parent[px] = py\n            cnt -= 1\n            return True\n            \n        for u, v in edges:\n            if not Union(u, v):\n                return False\n            \n        return cnt == 1\n        \n        ","compare_result":"11111111111111111111111111111111111111111111","title_slug":"graph-valid-tree","has_notes":false,"flag_type":1}