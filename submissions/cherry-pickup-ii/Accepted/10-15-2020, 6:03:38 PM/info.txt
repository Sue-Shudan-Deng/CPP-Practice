{"id":409252431,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602810218,"status":10,"status_display":"Accepted","runtime":"1880 ms","url":"/submissions/detail/409252431/","is_pending":"Not Pending","title":"Cherry Pickup II","memory":"22.1 MB","code":"class Solution:\n    def cherryPickup(self, grid: List[List[int]]) -> int:\n        row, col = len(grid), len(grid[0])\n        dp = [[[0 for _ in range(col)] for _ in range(col)] for _ in range(row)] \n        \n        for r in range(row - 1, -1, -1):\n            for c1 in range(col):\n                for c2 in range(col):\n                    tmp = grid[r][c1]\n                    if c1 != c2:\n                        tmp += grid[r][c2]\n                    if r != row - 1:\n                        tmp += max(dp[r+1][new_c1][new_c2] for new_c1 in                         [c1-1, c1, c1+1] for new_c2 in [c2-1, c2, c2+1] if 0 <=                           new_c1 < col and 0 <= new_c2 < col)\n                    dp[r][c1][c2] = tmp\n                    \n        return dp[0][0][-1]","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"cherry-pickup-ii","has_notes":false,"flag_type":1}