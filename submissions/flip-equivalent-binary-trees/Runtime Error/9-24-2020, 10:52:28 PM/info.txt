{"id":400440262,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1601013148,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/400440262/","is_pending":"Not Pending","title":"Flip Equivalent Binary Trees","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def flipEquiv(self, root1: TreeNode, root2: TreeNode) -> bool:\n        if root1 == root2:  # 包含了 not root1 and not root2\n            return True\n        if not root1 or not root2 or root1.val != root2.val:\n            return False\n        \n                return (self.flipEquiv(root1.left, root2.left) and self.flipEquiv(root1.right, root2.right)) or (self.flipEquiv(root1.left, root2.right) and self.flipEquiv(root1.right, root2.left))\n        \n            ","compare_result":"00000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"flip-equivalent-binary-trees","has_notes":false,"flag_type":1}