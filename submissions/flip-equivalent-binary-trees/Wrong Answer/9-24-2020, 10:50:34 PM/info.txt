{"id":400439605,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1601013034,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/400439605/","is_pending":"Not Pending","title":"Flip Equivalent Binary Trees","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def flipEquiv(self, root1: TreeNode, root2: TreeNode) -> bool:\n        if root1 == root2:  # 包含了 not root1 and not root2\n            return True\n        if not root1 or not root2:\n            return False\n        \n        l1 = self.flipEquiv(root1.left, root2.left)\n        l2 = self.flipEquiv(root1.left, root2.right)\n        r1 = self.flipEquiv(root1.right, root2.left)\n        r2 = self.flipEquiv(root1.right, root2.right)\n        \n        return root1.val == root2.val and (l1 and r2) or (l2 and r1)\n        \n            ","compare_result":"11111110111011111011111101111111111111111111111111111111111111111111111111111","title_slug":"flip-equivalent-binary-trees","has_notes":false,"flag_type":1}