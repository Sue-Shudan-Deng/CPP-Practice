{"id":417873440,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604792627,"status":10,"status_display":"Accepted","runtime":"532 ms","url":"/submissions/detail/417873440/","is_pending":"Not Pending","title":"Number of Operations to Make Network Connected","memory":"34.1 MB","code":"class Solution:\n    def makeConnected(self, n: int, connections: List[List[int]]) -> int:\n        parent = [i for i in range(n)]\n        size = [1 for _ in range(n)]\n        cnt = 0\n        if len(connections) < n - 1:\n            return -1\n        \n        def find(x):\n            if x != parent[x]:\n                parent[x] = find(parent[x])\n            return parent[x]\n        \n        def union(x, y):\n            nonlocal cnt\n            px, py = find(x), find(y)\n            if px == py:\n                return\n            if size[px] > size[py]:\n                px, py = py, px\n            parent[px] = py\n            size[py] += size[px]\n            cnt += 1\n            \n        cluster = set()\n        for u, v in connections:\n            union(u, v)\n            \n        for i in range(n):\n            cluster.add(find(i))\n            \n        print(cluster)\n        print(cnt)\n        if len(cluster) == n - cnt:\n            return n - cnt - 1\n        else:\n            return -1\n            \n        \n            \n        \n        \n            ","compare_result":"111111111111111111111111111111111111","title_slug":"number-of-operations-to-make-network-connected","has_notes":false,"flag_type":1}