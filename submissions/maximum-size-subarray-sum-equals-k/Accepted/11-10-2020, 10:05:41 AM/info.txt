{"id":418890685,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605031541,"status":10,"status_display":"Accepted","runtime":"308 ms","url":"/submissions/detail/418890685/","is_pending":"Not Pending","title":"Maximum Size Subarray Sum Equals k","memory":"17.8 MB","code":"class Solution:\n    def maxSubArrayLen(self, nums: List[int], k: int) -> int:\n        if not nums:\n            return 0\n        n = len(nums)\n        prefix = [0 for _ in range(n + 1)]\n        prefix[1] = nums[0]\n        for i in range(2, n + 1):\n            prefix[i] = prefix[i-1] + nums[i-1]\n            \n        cur, ans = [[0, 0]], 0\n        for j in range(1, n + 1):\n            bisect.insort(cur, [prefix[j], j])\n            p = bisect.bisect_left(cur, [prefix[j] - k])\n            if p < len(cur) and prefix[j] - cur[p][0] == k:\n                ans = max(ans, j - cur[p][1])\n            \n        return ans","compare_result":"11111111111111111111111111111111111","title_slug":"maximum-size-subarray-sum-equals-k","has_notes":false,"flag_type":1}