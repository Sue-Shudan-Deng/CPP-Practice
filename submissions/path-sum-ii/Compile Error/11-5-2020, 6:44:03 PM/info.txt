{"id":417263630,"lang":"cpp","lang_name":"C++","time":"2 years, 10 months","timestamp":1604630643,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/417263630/","is_pending":"Not Pending","title":"Path Sum II","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    \nprivate:\n    void dfs(TreeNode* root, int cursum, deque<int> cur, vector<vector<int>>& ans) {\n        if (!root) {\n            return;\n        }\n        if (!root->left && !root->right && root->val == cursum) {\n            cur.push_back(root->val);\n            ans.push_back(vector<int>{tmp(cur.begin(), cur.end())});\n            return;\n        }\n        cur.push_back(root->val);\n        dfs(root->left, cursum - root->val, cur, ans);\n        dfs(root->right, cursum - root->val, cur, ans);\n        cur.pop_front();\n    }\n    \npublic:\n    vector<vector<int>> pathSum(TreeNode* root, int sum) {\n        vector<vector<int>> ans;\n        deque<int> cur;\n        dfs(root, sum, cur, ans);\n        return ans;\n    }\n};","compare_result":null,"title_slug":"path-sum-ii","has_notes":false,"flag_type":1}