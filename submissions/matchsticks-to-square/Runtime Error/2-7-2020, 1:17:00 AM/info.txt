{"id":301033303,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1581067020,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/301033303/","is_pending":"Not Pending","title":"Matchsticks to Square","memory":"N/A","code":"class Solution:\n    def makesquare(self, nums: List[int]) -> bool:\n        nums = sorted(nums)\n        summ = sum(nums)\n        avg = summ // 4\n        if summ != avg * 4:\n            return False\n        visited = [False for _ in range(len(nums))] \n        dfs(0, group, 0, visited)\n        \n        def dfs(idx, groupid, tmpsum, visited):\n            \"\"\"\n            Assume we can only search in this group \n            \"\"\"\n            if groupid == 4:\n                return True\n            if tmpsum == avg:\n                # switch to the next group\n                return dfs(idx, groupid + 1, 0, visited)\n            for i in range(idx, len(nums)):\n                # If nums[i] has been visited before (same value), \n                # there is no reason to visit it twice\n                if nums[i] == nums[i-1] and not visited[i-1]:\n                    return False\n                visited[i] = True\n                if dfs(idx + 1, groupid, tmpsum + nums[i], visited):\n                    return True\n                visited[i] = False\n            return False\n            ","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"matchsticks-to-square","has_notes":false,"flag_type":1}