{"id":394924250,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1599970543,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/394924250/","is_pending":"Not Pending","title":"Matchsticks to Square","memory":"N/A","code":"class Solution:\n    def makesquare(self, nums: List[int]) -> bool:\n        if nums == []:\n            return False\n        avg = sum(nums) / 4\n        def dfs(nums: List[int], ans: List[List[int]], idx: int, ready: int) -> bool:\n            if idx == len(nums):\n                return ready == 4\n            for i in range(4):\n                # set\n                if sum(ans[i]) + nums[idx] > avg:\n                    continue\n                elif sum(ans[i]) + nums[idx] == avg:\n                    ready += 1\n                ans[i].append(nums[idx])\n                # backtrack\n                if dfs(nums, ans, idx+1, ready):\n                    return True\n                # clear\n                ans[i].pop();\n            return False\n        \n        ans = [[] for _ in range(4)]\n        return dfs(nums, ans, 0, 0)","compare_result":"111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"matchsticks-to-square","has_notes":false,"flag_type":1}