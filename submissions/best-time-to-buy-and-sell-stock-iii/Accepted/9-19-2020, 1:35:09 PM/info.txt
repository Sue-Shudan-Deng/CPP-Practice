{"id":397993424,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600547709,"status":10,"status_display":"Accepted","runtime":"1596 ms","url":"/submissions/detail/397993424/","is_pending":"Not Pending","title":"Best Time to Buy and Sell Stock III","memory":"28 MB","code":"class Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        \"\"\"\n        思路参见buy-and-sell-stock-i and dicussion\n        \"\"\"\n        # K-dim DP\n        # dp[k][i] = max(dp[k][i-1], max(dp[k-1][j]+prices[i]-prices[j] for j in range(i-1)))\n        #          = max(dp[k][i-1], prices[i] + max(dp[k-1][j]-prices[j]))\n        n, K = len(prices), 2\n        dp = [[0 for _ in range(n+1)] for _ in range(K+1)]\n        for k in range(1, K+1):\n            tmp = float(\"-inf\")\n            for i in range(1, n+1):\n                dp[k][i] = max(dp[k][i-1], prices[i-1] + tmp)\n                tmp = max(tmp, dp[k-1][i] - prices[i-1])\n        return dp[K][-1]","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"best-time-to-buy-and-sell-stock-iii","has_notes":false,"flag_type":1}