{"id":392446170,"lang":"cpp","lang_name":"C++","time":"2 years, 12 months","timestamp":1599508102,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/392446170/","is_pending":"Not Pending","title":"Same Tree","memory":"10 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    \npublic:\n    bool isSameTree(TreeNode* p, TreeNode* q) {\n        stack<pair<TreeNode*, TreeNode*>> s;\n        s.emplace(p, q);\n        \n        while(!s.empty()) {\n            auto [p, q] = s.top();\n            s.pop();            \n            if (!p && !q) continue;\n            if (!p || !q) return false;\n            if (p->val != q->val) return false;\n            s.emplace(p->right, q->right);\n            s.emplace(p->left, q->left);\n        }\n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"same-tree","has_notes":false,"flag_type":1}