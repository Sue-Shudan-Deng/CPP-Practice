{"id":293508411,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1578831014,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/293508411/","is_pending":"Not Pending","title":"Same Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isSameTree(self, p: TreeNode, q: TreeNode) -> bool:\n        \"\"\"\n        Stack + DFS\n        \"\"\"\n        def check(p, q):\n            # if both are None\n            if not p and not q:\n                return True\n            # one of p and q is None\n            if not q or not p:\n                return False\n            if p.val != q.val:\n                return False\n            return True\n        \n        stack = [(p, q)]\n        while stack:\n            a, b = stack.pop()\n            if not check(p, q):\n                return False\n            if a and b:\n                stack.append((a.right, b.right))\n                stack.append((a.left, b.left))\n        return True","compare_result":"100111110001110001010000001000000000000101100000000000101","title_slug":"same-tree","has_notes":false,"flag_type":1}