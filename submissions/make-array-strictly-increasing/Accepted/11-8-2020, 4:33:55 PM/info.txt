{"id":418263538,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604882035,"status":10,"status_display":"Accepted","runtime":"6164 ms","url":"/submissions/detail/418263538/","is_pending":"Not Pending","title":"Make Array Strictly Increasing","memory":"173.4 MB","code":"class Solution:\n    def makeArrayIncreasing(self, arr1: List[int], arr2: List[int]) -> int:\n        arr2 = sorted(list(set(arr2)))\n        n1, n2 = len(arr1), len(arr2)\n        keep = [float(\"inf\") for _ in range(n1)]\n        swap = [[float(\"inf\") for _ in range(n2)] for _ in range(n1)]\n        a, b = arr1, arr2\n        \n        keep[0] = 0\n        swap[0] = [1 for _ in range(n2)]\n        \n        for i in range(1, n1):\n            min_keep, min_swap = float(\"inf\"), float(\"inf\") \n            for j in range(n2):\n                # case 1: a[i] > a[i-1]\n                if a[i] > a[i-1]:\n                    keep[i] = keep[i-1]\n                # case 2: b[j] > a[i-1]\n                if b[j] > a[i-1]:\n                    swap[i][j] = keep[i-1] + 1\n                # case 3: a[i] > b[j]\n                if a[i] > b[j]:\n                    # keep[i] = min([swap[i-1][k] for k in range(j)])\n                    min_keep = min(min_keep, swap[i-1][j])\n                keep[i] = min(keep[i], min_keep)\n                # case 4: b[j] > b[k]\n                if j > 0:\n                    # swap[i][j] = min(swap[i-1][k] for k in range(j-1))\n                    min_swap = min(min_swap, swap[i-1][j-1] + 1)\n                swap[i][j] = min(swap[i][j], min_swap)\n                    \n        ans = min(min(swap[-1]), keep[-1])\n        return ans if ans != float(\"inf\") else -1\n                \n                        \n                    \n        ","compare_result":"111111111111111111111","title_slug":"make-array-strictly-increasing","has_notes":false,"flag_type":1}