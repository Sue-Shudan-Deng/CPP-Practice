{"id":403206115,"lang":"python","lang_name":"Python","time":"2 years, 11 months","timestamp":1601578256,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/403206115/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"13.9 MB","code":"class Solution(object):\n    def generateParenthesis(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: List[str]\n        \"\"\"\n        ans = set()\n        def backtrack(S = \"\", left = 0, right = 0):\n            if left == n and right == n:\n                ans.add(S)\n            if left < n:\n                backtrack(S + \"(\", left + 1, right)\n            if right < left:\n                backtrack(S + \")\", left, right + 1)\n        backtrack()\n        return list(ans)","compare_result":"11111111","title_slug":"generate-parentheses","has_notes":false,"flag_type":1}