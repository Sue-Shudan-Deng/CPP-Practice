{"id":311901253,"lang":"python","lang_name":"Python","time":"3Â years, 5Â months","timestamp":1584049950,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/311901253/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"12.2 MB","code":"class Solution(object):\n    def generateParenthesis(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: List[str]\n        \"\"\"\n        ans  = []\n        def helper(curr, left, right):\n            if left > n or right > n:\n                return\n            if left == n and right == n:\n                ans.append(curr)\n            if left < n:\n                helper(curr + \"(\", left + 1, right)\n            if right < left:\n                helper(curr + \")\", left, right + 1)\n        \n        helper(\"\", 0, 0)\n        return ans","compare_result":"11111111","title_slug":"generate-parentheses","has_notes":false,"flag_type":1}