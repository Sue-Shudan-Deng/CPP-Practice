{"id":417610260,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604722146,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/417610260/","is_pending":"Not Pending","title":"Subsets II","memory":"14.7 MB","code":"class Solution:\n    def subsetsWithDup(self, nums: List[int]) -> List[List[int]]:\n        n, ans = len(nums), []\n        def bt(start, length, cur):\n            if start == length:\n                ans.append(cur[:])\n                return\n            for idx in range(start, n):\n                bt(idx + 1, length, cur + [nums[idx]])\n        \n        for k in range(n + 1):\n            bt(0, k, [])\n        return list(set(map(tuple, [sorted(i) for i in sorted(map(tuple, ans))])))","compare_result":"1111111111111111111","title_slug":"subsets-ii","has_notes":false,"flag_type":1}