{"id":392455449,"lang":"cpp","lang_name":"C++","time":"2 years, 12 months","timestamp":1599509395,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/392455449/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int> ret;\n        if (!root) return ret;\n        \n        stack<TreeNode*> s;\n        while (root || !s.empty()) {\n            while (root) {\n                s.push(root);\n                root = root->left;               \n            }\n            root = s.top();\n            s.pop();\n            ret.push_back(root->val);\n            root = root->right;\n        }\n        return ret;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}