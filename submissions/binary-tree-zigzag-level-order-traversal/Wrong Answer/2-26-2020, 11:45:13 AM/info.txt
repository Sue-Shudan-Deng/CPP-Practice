{"id":307157680,"lang":"python3","lang_name":"Python3","time":"3 years, 6 months","timestamp":1582746313,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/307157680/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def zigzagLevelOrder(self, root: TreeNode) -> List[List[int]]:\n        res = []\n        def helper(root, level = 0):\n            if root:\n                if len(res) < level + 1:\n                    res.append([])\n                res[level].append(root.val)\n                if (level + 1) % 2 == 0:\n                    helper(root.left, level + 1)\n                    helper(root.right, level + 1)\n                else:\n                    helper(root.right, level + 1)\n                    helper(root.left, level + 1)\n            return res\n        return helper(root)","compare_result":"111111101101101000001000000100000","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}