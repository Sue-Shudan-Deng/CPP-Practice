{"id":311854862,"lang":"python","lang_name":"Python","time":"3 years, 5 months","timestamp":1584036533,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/311854862/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"12.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution(object):\n    def zigzagLevelOrder(self, root):\n        \"\"\"\n        :type root: TreeNode\n        :rtype: List[List[int]]\n        \"\"\"\n        if not root:\n            return []\n        lvl, res, queue = 0, [], collections.deque([root])\n        while queue:\n            if len(res) < lvl + 1:\n                res.append([])\n            for _ in range(len(queue)):\n                root = queue.popleft()\n                res[lvl].append(root.val)\n                if root.left:\n                    queue.append(root.left)\n                if root.right:\n                    queue.append(root.right)\n            if lvl % 2 == 1:\n                res[lvl] = res[lvl][::-1]\n            lvl += 1\n        return res","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}