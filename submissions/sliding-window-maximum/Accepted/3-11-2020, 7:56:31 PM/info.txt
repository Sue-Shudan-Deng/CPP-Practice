{"id":311683119,"lang":"python3","lang_name":"Python3","time":"3 years, 5 months","timestamp":1583981791,"status":10,"status_display":"Accepted","runtime":"164 ms","url":"/submissions/detail/311683119/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"19.5 MB","code":"class Solution:\n    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:\n        \"\"\"\n        用deque\n        \"\"\"\n        if not nums:\n            return []\n        \n        def clean_deque(i):\n            if queue and queue[0] == i - k:\n                queue.popleft()\n            while queue and nums[i] > nums[queue[-1]]:\n                queue.pop()\n            \n        # initialize\n        queue = collections.deque()\n        max_idx = 0\n        output = []\n        \n        for i in range(k):\n            clean_deque(i)\n            queue.append(i)\n            if nums[i] > nums[max_idx]:\n                max_idx = i\n        output.append(nums[max_idx])\n        \n        for i in range(k, len(nums)):\n            clean_deque(i)\n            queue.append(i)\n            output.append(nums[queue[0]])\n        \n        return output","compare_result":"111111111111111111","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}