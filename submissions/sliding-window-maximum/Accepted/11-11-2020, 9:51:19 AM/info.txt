{"id":419249761,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605117079,"status":10,"status_display":"Accepted","runtime":"1592 ms","url":"/submissions/detail/419249761/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"31.4 MB","code":"class Solution:\n    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:\n        n = len(nums)\n        if n * k == 0:\n            return []\n        if k == 1:\n            return nums\n        \n        left = [0] * n\n        left[0] = nums[0]\n        right = [0] * n\n        right[n - 1] = nums[n - 1]\n        for i in range(1, n):\n            # from left to right\n            if i % k == 0:\n                # block start\n                left[i] = nums[i]\n            else:\n                left[i] = max(left[i - 1], nums[i])\n            # from right to left\n            j = n - i - 1\n            if (j + 1) % k == 0:\n                # block end\n                right[j] = nums[j]\n            else:\n                right[j] = max(right[j + 1], nums[j])\n        \n        output = []\n        for i in range(n - k + 1):\n            output.append(max(left[i + k - 1], right[i]))\n            \n        return output","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}