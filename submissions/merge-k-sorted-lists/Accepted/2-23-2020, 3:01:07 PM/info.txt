{"id":306230978,"lang":"python3","lang_name":"Python3","time":"3 years, 6 months","timestamp":1582498867,"status":10,"status_display":"Accepted","runtime":"204 ms","url":"/submissions/detail/306230978/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"16.9 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nfrom queue import PriorityQueue\n\nclass Node:\n    def __init__(self, val, node):\n        self.val = val\n        self.node = node\n    def __lt__(self, other):\n        return self.val < other.val\n\nclass Solution(object):\n    def mergeKLists(self, lists):\n        \"\"\"\n        :type lists: List[ListNode]\n        :rtype: ListNode\n        \"\"\"\n        head = point = ListNode(0)\n        q = PriorityQueue()\n        for l in lists:\n            if l:\n                q.put(Node(l.val, l))\n        while not q.empty():\n            node = q.get()\n            node = node.node\n            point.next = ListNode(node.val)\n            point = point.next\n            node = node.next\n            if node:\n                q.put(Node(node.val, node))\n        return head.next","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists","has_notes":false,"flag_type":1}