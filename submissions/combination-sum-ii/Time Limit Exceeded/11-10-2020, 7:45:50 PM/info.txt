{"id":419042767,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605066350,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/419042767/","is_pending":"Not Pending","title":"Combination Sum II","memory":"N/A","code":"class Solution:\n    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:\n        \"\"\"\n        method 1: naive\n        \"\"\"\n        dp = [[] for _ in range(target + 1)]\n        for can in candidates:\n            for i in range(target, can - 1, -1):\n                if i == can:\n                    dp[i].append([i])\n                else:\n                    for comb in dp[i - can]:\n                        dp[i].append(comb + [can])\n                        \n        \"\"\"\n        https://www.geeksforgeeks.org/python-remove-all-duplicates-and-permutations-in-nested-list/ : Python | Remove all duplicates and permutations in nested list\n        \"\"\"\n        return list(map(list, set(tuple(sorted(i)) for i in dp[target])))","compare_result":"111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"combination-sum-ii","has_notes":false,"flag_type":1}