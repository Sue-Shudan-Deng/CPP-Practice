{"id":293672879,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1578877622,"status":10,"status_display":"Accepted","runtime":"192 ms","url":"/submissions/detail/293672879/","is_pending":"Not Pending","title":"Diagonal Traverse","memory":"15.4 MB","code":"class Solution:\n    def findDiagonalOrder(self, matrix: List[List[int]]) -> List[int]:\n        if not matrix:\n            return matrix\n        row, col = len(matrix), len(matrix[0])\n        r, c = 0, 0\n        upward = True\n        end_r, end_c = row - 1, col - 1\n        res = [matrix[r][c]]\n        while True:\n            while upward:\n                if r == 0 and c != end_c:\n                    upward = False\n                    c += 1\n                elif c == end_c and r != end_r:\n                    upward = False\n                    r += 1\n                elif c == end_c and r == end_r:\n                    return res\n                else:\n                    r, c = r - 1, c + 1\n                res.append(matrix[r][c])\n                    \n            while not upward:\n                if c == 0 and r != end_r:\n                    upward = True\n                    r += 1\n                elif r == end_r and c != end_c:\n                    upward = True\n                    c += 1\n                elif r == end_r and c == end_c:\n                    return res\n                else:\n                    r, c = r + 1, c - 1\n                res.append(matrix[r][c])","compare_result":"11111111111111111111111111111111","title_slug":"diagonal-traverse","has_notes":false,"flag_type":1}