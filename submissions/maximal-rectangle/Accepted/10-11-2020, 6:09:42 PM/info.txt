{"id":407569306,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602464982,"status":10,"status_display":"Accepted","runtime":"200 ms","url":"/submissions/detail/407569306/","is_pending":"Not Pending","title":"Maximal Rectangle","memory":"15.4 MB","code":"class Solution:\n    def maximalRectangle(self, matrix: List[List[str]]) -> int:\n        \"\"\"\n        build histgram + max rectangle in histgram (84)\n        \"\"\"\n        def build_hist(row):\n            res = []\n            for c in range(col):\n                if row == 0:\n                    res.append(int(matrix[0][c] == \"1\"))\n                else:\n                    if matrix[row][c] == \"0\":\n                        res.append(0)\n                    else:\n                        res.append(grid[row - 1][c] + 1)\n            return res\n        \n        def maxrect(grid):\n            stack, res = [-1], 0\n            for c in range(col):\n                while stack[-1] != -1 and grid[stack[-1]] >= grid[c]:\n                    h = grid[stack.pop()]\n                    area = h * (c - stack[-1] - 1)\n                    res = max(res, area)\n                stack.append(c)\n                \n            while stack[-1] != -1:\n                h = grid[stack.pop()]\n                area = h * (col - stack[-1] - 1)\n                res = max(res, area)\n            return res\n        \n        if not matrix or len(matrix) == 0:\n            return 0\n        row, col = len(matrix), len(matrix[0])\n        ans = 0\n        grid = []\n        for r in range(row):\n            grid.append(build_hist(r))\n            ans = max(ans, maxrect(grid[r]))\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-rectangle","has_notes":false,"flag_type":1}