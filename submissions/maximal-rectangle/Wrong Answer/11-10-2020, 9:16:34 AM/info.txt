{"id":418877612,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605028594,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/418877612/","is_pending":"Not Pending","title":"Maximal Rectangle","memory":"N/A","code":"class Solution:\n    def maximalRectangle(self, matrix: List[List[str]]) -> int:\n        \"\"\"\n        build histgram + max rectangle in histgram (84)\n        \"\"\"\n        def build_hist(r, dp):\n            for c in range(col):\n                if matrix[r-1][c] == \"0\":\n                    dp[r][c] = 0\n                else:\n                    dp[r][c] = dp[r-1][c] + 1\n        \n        def maxRectInHist(hist):\n            n, ans = len(hist), 0\n            stack = [-1]\n            \n            for i in range(n):\n                while stack[-1] != -1 and hist[i] < hist[stack[-1]]:\n                    index = stack.pop()\n                    ans = max(ans, hist[index] * (i - stack[-1] - 1))\n                stack.append(i)\n            \n            while stack[-1] != -1:\n                index = stack.pop()\n                ans = max(ans, hist[index] * (n - stack[-1] - 1))\n            \n            return ans\n        \n        if not matrix or len(matrix) == 0:\n            return 0\n        row, col, ans = len(matrix), len(matrix[0]), 0\n        dp = [[0 for _ in range(col)] for _ in range(row + 1)]\n        for r in range(row):\n            build_hist(r, dp)\n            ans = max(ans, maxRectInHist(dp[r]))\n            \n        return ans","compare_result":"11111111111111101011110111011111111111111111101101111111010111111111111","title_slug":"maximal-rectangle","has_notes":false,"flag_type":1}