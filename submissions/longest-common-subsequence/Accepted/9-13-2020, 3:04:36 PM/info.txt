{"id":395278391,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600034676,"status":10,"status_display":"Accepted","runtime":"816 ms","url":"/submissions/detail/395278391/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"22.6 MB","code":"class Solution:\n    def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n        set1, set2 = set(text1), set(text2)\n        if not set1.intersection(set2):\n            return 0\n        \n        dp = [[0 for _ in range(len(text2)+1)] for _ in range(len(text1)+1)]\n        for i in range(1, len(text1)+1):\n            for j in range(1, len(text2)+1):\n                tmp = 0\n                if text1[i-1] == text2[j-1]:\n                    tmp = 1\n                # print(i, j)\n                dp[i][j] = max([dp[i-1][j], dp[i][j-1], dp[i-1][j-1]+tmp])\n                \n        return dp[-1][-1]","compare_result":"1111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false,"flag_type":1}