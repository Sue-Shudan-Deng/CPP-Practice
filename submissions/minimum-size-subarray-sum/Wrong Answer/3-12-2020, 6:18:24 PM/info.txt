{"id":311940466,"lang":"python","lang_name":"Python","time":"3Â years, 5Â months","timestamp":1584062304,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/311940466/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"N/A","code":"class Solution(object):\n    def minSubArrayLen(self, s, nums):\n        \"\"\"\n        :type s: int\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        summ, i, ans = 0, 0, float(\"inf\")\n        for j, n in enumerate(nums):\n            summ += n\n            while summ >= s:\n                ans = min(ans, j - i + 1)\n                summ -= nums[i]\n                i += 1\n        return ans","compare_result":"101111111111011","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}