{"id":311940770,"lang":"python","lang_name":"Python","time":"3Â years, 5Â months","timestamp":1584062388,"status":10,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/311940770/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"14 MB","code":"class Solution(object):\n    def minSubArrayLen(self, s, nums):\n        \"\"\"\n        :type s: int\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        summ, i, ans = 0, 0, float(\"inf\")\n        for j, n in enumerate(nums):\n            summ += n\n            while summ >= s:\n                ans = min(ans, j - i + 1)\n                summ -= nums[i]\n                i += 1\n        return ans if nums != [] and ans != float(\"inf\") else 0","compare_result":"111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}