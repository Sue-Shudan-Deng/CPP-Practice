{"id":293765945,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1578899129,"status":10,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/293765945/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"15.2 MB","code":"class Solution:\n    def minSubArrayLen(self, s: int, nums: List[int]) -> int:\n        \"\"\"\n        先考虑双指针\n        \"\"\"\n        i = 0\n        ans = sys.maxsize\n        summ = 0\n        for j in range(len(nums)):\n            summ += nums[j]\n            while (summ >= s):\n                ans = min(ans, j - i + 1)\n                summ -= nums[i] # 只减去左边那个元素\n                i += 1\n                \n        return ans if nums != [] and ans != sys.maxsize else 0","compare_result":"111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}