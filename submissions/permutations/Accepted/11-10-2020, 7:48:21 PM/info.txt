{"id":419043543,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605066501,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/419043543/","is_pending":"Not Pending","title":"Permutations","memory":"14.4 MB","code":"class Solution:\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        ans, visited = [], set()\n        def backtrack(cur):\n            if len(cur) == len(nums):\n                ans.append(cur[:])\n                return\n            for idx in range(len(nums)):\n                if not idx in visited:\n                    visited.add(idx)\n                    backtrack(cur + [nums[idx]])\n                    visited.remove(idx)\n                \n        backtrack([])\n        return ans","compare_result":"1111111111111111111111111","title_slug":"permutations","has_notes":false,"flag_type":1}