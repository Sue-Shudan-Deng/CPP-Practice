{"id":293538112,"lang":"python3","lang_name":"Python3","time":"3Â years, 7Â months","timestamp":1578843546,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/293538112/","is_pending":"Not Pending","title":"Permutations","memory":"N/A","code":"class Solution:\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        ans = []\n        def helper(res = [], n = 0):\n            if n > len(nums):\n                return\n            if n == 3:\n                ans.append(res)\n                return \n            curr = list(filter(lambda x: not x in res, nums))\n            for i in curr:\n                helper(res + [i], n + 1)\n                \n        helper()\n        return ans","compare_result":"1000100100000000000101000","title_slug":"permutations","has_notes":false,"flag_type":1}