{"id":295295535,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1579369302,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/295295535/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"13.2 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None):\n        self.val = int(x)\n        self.next = next\n        self.random = random\n\"\"\"\nclass Solution:\n    def __init__(self):\n        # Dictionary which holds old nodes as keys and new nodes as its values.\n        self.visited = {}\n        \n    def copyRandomList(self, head: 'Node') -> 'Node':\n        \"\"\"\n        Recursion\n        \"\"\"\n        if not head:\n            return head\n        if self.visited.get(head):\n            return self.visited[head]\n        node = Node(head.val, None, None)\n        self.visited[head] = node # 注意: 这里需要先hash，再next和random，否则后面递归的时候也可能访问该结点\n        node.next = self.copyRandomList(head.next)\n        node.random = self.copyRandomList(head.random)\n        return node\n    \nclass Solution:\n    def copyRandomList(self, head: 'Node') -> 'Node':\n        \"\"\"\n        Iteration\n        \"\"\"\n        if not head:\n            return head\n        self.visited = {}\n        old_node = head\n        \n        def getnode(node):\n            if not node:\n                return node\n            if not node in self.visited:\n                new_node = Node(node.val, None, None)\n                self.visited[node] = new_node\n            return self.visited[node]\n        \n        new_node = getnode(old_node)\n        while old_node:\n            new_node.next = getnode(old_node.next)\n            new_node.random = getnode(old_node.random)\n            old_node = old_node.next\n            new_node = new_node.next\n        \n        return self.visited[head]","compare_result":"111111111111111111","title_slug":"copy-list-with-random-pointer","has_notes":false,"flag_type":1}