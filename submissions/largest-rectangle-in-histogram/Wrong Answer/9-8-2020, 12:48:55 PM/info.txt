{"id":392942992,"lang":"cpp","lang_name":"C++","time":"2 years, 12 months","timestamp":1599594535,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/392942992/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"N/A","code":"class Solution {\npublic:\n    int largestRectangleArea(vector<int>& heights) {\n        stack<int> s; // -1 serve as a guard since no element (height) can be negative\n        s.push(-1);\n        int n = heights.size();\n        int ret = 0;\n        for (int i = 0; i < n; ++i) {\n            // if s is not empty and the element which is currently\n            // visited is smaller than the stack top\n            while (s.top() != -1 && heights[i] < heights[s.top()]) {\n                // pop the stack top\n                int cur = s.top();\n                s.pop();\n                int r = i;\n                int l = cur; \n                ret = max(ret, heights[cur] * (r - l));\n            }\n            s.push(i);\n        }\n        \n        // at the end, usually 1 or 2 elements left\n        while (s.top() != -1) {\n            int cur = s.top();\n            s.pop();\n            int r = n; // at the end\n            int l = cur; \n            ret = max(ret, heights[cur] * (r - l));\n        }\n        return ret;\n    }\n};","compare_result":"111111111111111010110111101100010100111100001111111110011000100010100100001110000000100010100011","title_slug":"largest-rectangle-in-histogram","has_notes":false,"flag_type":1}