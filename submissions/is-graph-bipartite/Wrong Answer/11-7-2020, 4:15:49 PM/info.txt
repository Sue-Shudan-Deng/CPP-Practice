{"id":417880844,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604794549,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/417880844/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"N/A","code":"class Solution:\n    def isBipartite(self, graph: List[List[int]]) -> bool:\n        queue = collections.deque()\n        n = len(graph)\n        neighs = collections.defaultdict(list)\n        colors = collections.defaultdict(int)\n        for i in range(n):\n            for j in graph[i]:\n                neighs[i].append(j)\n        \n        for i in range(n):\n            if not i in neighs:\n                return False\n        \n        queue.append((0, 0))\n        while queue:\n            node, color = queue.popleft()\n            if node in colors:\n                if colors[node] != color:\n                    return False\n                continue\n            colors[node] = color\n            for nei in neighs[node]:\n                queue.append((nei, abs(color - 1)))\n                \n        return True","compare_result":"111111111101011111111010011111111111111111111111111111111100010110111011011111","title_slug":"is-graph-bipartite","has_notes":false,"flag_type":1}