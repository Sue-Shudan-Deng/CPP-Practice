{"id":417881151,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604794644,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/417881151/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"N/A","code":"class Solution:\n    def isBipartite(self, graph: List[List[int]]) -> bool:\n        queue = collections.deque()\n        n = len(graph)\n        neighs = collections.defaultdict(list)\n        colors = collections.defaultdict(int)\n        for i in range(n):\n            for j in graph[i]:\n                neighs[i].append(j)\n        \n        start = list(neighs.keys())[0]\n        queue.append((start, 0))\n        while queue:\n            node, color = queue.popleft()\n            if node in colors:\n                if colors[node] != color:\n                    return False\n                continue\n            colors[node] = color\n            for nei in neighs[node]:\n                queue.append((nei, abs(color - 1)))\n                \n        return True","compare_result":"111111111111111111111111111111111111111111111111111111111100000000000000000000","title_slug":"is-graph-bipartite","has_notes":false,"flag_type":1}