{"id":309633555,"lang":"python","lang_name":"Python","time":"3 years, 6 months","timestamp":1583430267,"status":10,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/309633555/","is_pending":"Not Pending","title":"Group Anagrams","memory":"17.8 MB","code":"class Solution(object):\n    def groupAnagrams(self, strs):\n        \"\"\"\n        :type strs: List[str]\n        :rtype: List[List[str]]\n        \"\"\"\n        res = dict()  \n        for s in strs:\n            counter = [0] * 26\n            for c in s:\n                counter[ord(c) - ord('a')] += 1\n            if not res.get(tuple(counter)):\n                res[tuple(counter)] = []\n            res[tuple(counter)].append(s)\n        return list(res.values())","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}