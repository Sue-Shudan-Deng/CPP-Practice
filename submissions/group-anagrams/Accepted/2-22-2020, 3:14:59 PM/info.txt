{"id":305872409,"lang":"python3","lang_name":"Python3","time":"3 years, 6 months","timestamp":1582413299,"status":10,"status_display":"Accepted","runtime":"120 ms","url":"/submissions/detail/305872409/","is_pending":"Not Pending","title":"Group Anagrams","memory":"17.5 MB","code":"class Solution:\n    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:\n        # 想法是把string转换成counter，如果counter match则成功\n        res = dict()\n        for s in strs:\n            counter = [0] * 26\n            for c in s:\n                counter[ord(c) - ord('a')] += 1\n            if not res.get(tuple(counter)):\n                res[tuple(counter)] = []\n            res[tuple(counter)].append(s)\n        return list(res.values())","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}