{"id":396375168,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600224813,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/396375168/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"N/A","code":"class Solution:\n    # returns leftmost (or rightmost) index at which `target` should be inserted in sorted\n    # array `nums` via binary search.\n    def extreme_insertion_index(self, nums, target, left):\n        lo = 0\n        hi = len(nums) - 1\n\n        while lo < hi:\n            mid = (lo + hi) // 2\n            if left:\n                if nums[mid] >= target:\n                    hi = mid\n                else:\n                    lo = mid + 1\n            else:\n                if nums[mid] > target:\n                    hi = mid\n                else:\n                    lo = mid + 1\n        return lo\n\n\n    def searchRange(self, nums, target):\n        left_idx = self.extreme_insertion_index(nums, target, True)\n\n        # assert that `left_idx` is within the array bounds and that `target`\n        # is actually in `nums`.\n        if left_idx == len(nums) or nums[left_idx] != target:\n            return [-1, -1]\n\n        return [left_idx, self.extreme_insertion_index(nums, target, False) - 1]","compare_result":"1111011010111010100111111010111111011111110110111100111110111111111110111111101110001011","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"flag_type":1}