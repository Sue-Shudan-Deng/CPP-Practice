{"id":399898458,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600910689,"status":10,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/399898458/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"15.2 MB","code":"class Solution:\n    # returns leftmost (or rightmost) index at which `target` should be inserted in sorted\n    # array `nums` via binary search.\n    def extreme_insertion_index(self, nums, target, left):\n        l, r = 0, len(nums) \n        \"\"\"\n        这里因为后面r要减1，所以r的初始值取len(nums)也是很重要的，否则一定取不到nums[-1]\n        \"\"\"\n        while l < r:\n            m = l + (r - l) // 2\n            # 其实无非就是相等的时候左移还是右移\n            if left:\n                if nums[m] >= target:  # lower bound\n                    r = m\n                else:\n                    l = m + 1\n            else:\n                if nums[m] > target:   # upper bound\n                    r = m\n                else:\n                    l = m + 1\n        return l\n    \n    \"\"\"\n    本质：https://www.youtube.com/watch?v=v57lNF2mb_s&list=PLLuMmzMTgVK5Hy1qcWYZcd7wVQQ1v0AjX&index=15\n    lower bound 和 upper bound\n    \"\"\"\n\n    def searchRange(self, nums, target):\n        left_idx = self.extreme_insertion_index(nums, target, True)\n        \"\"\"\n        这里的edge case的判断非常巧妙\n        \"\"\"\n        if left_idx == len(nums) or nums[left_idx] != target:\n            return [-1, -1]\n        right_idx = self.extreme_insertion_index(nums, target, False) - 1\n        return [left_idx, right_idx]","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"flag_type":1}