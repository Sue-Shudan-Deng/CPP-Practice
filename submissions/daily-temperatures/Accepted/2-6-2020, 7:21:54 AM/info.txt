{"id":300792440,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1581002514,"status":10,"status_display":"Accepted","runtime":"508 ms","url":"/submissions/detail/300792440/","is_pending":"Not Pending","title":"Daily Temperatures","memory":"16.5 MB","code":"class Solution:\n    # 注：这里的思路是，逆序，并且对于每个T用栈只保留递次增加的t\n    # 难题！！！务必反复看解析\n    # 这道题相当于说，stack栈底的元素存储较远的更大值(更大)，栈顶的元素\n    # 存储较近的更大值(稍大)，这样每次pop出来就能检索到离得最近的更大值\n    def dailyTemperatures(self, T: List[int]) -> List[int]:\n        res = [0] * len(T)\n        stack = []\n        for i in range(len(T)-1, -1, -1):\n            while stack and T[i] >= T[stack[-1]]:\n                stack.pop()\n            if stack:\n                res[i] = stack[-1] - i\n            stack.append(i)\n        return res","compare_result":"1111111111111111111111111111111111111","title_slug":"daily-temperatures","has_notes":false,"flag_type":1}