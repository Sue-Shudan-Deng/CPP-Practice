{"id":417892254,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604797564,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/417892254/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"14 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def rightSideView(self, root: TreeNode) -> List[int]:\n        if not root:\n            return root\n        res = []\n        def dfs(root, depth):\n            # from right subtree\n            if not root:\n                return\n            if len(res) == depth:\n                res.append(root.val)\n            dfs(root.right, depth + 1)\n            dfs(root.left, depth + 1)\n        \n        dfs(root, 0)\n        return res","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}