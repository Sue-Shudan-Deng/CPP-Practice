{"id":297982332,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1580169986,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/297982332/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"13.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\n# Bottom-up RECURSION:\n# class Solution:\n#     def maxDepth(self, root: TreeNode) -> int:\n#         if not root:\n#             return 0\n#         else:\n#             return max(self.maxDepth(root.left), self.maxDepth(root.right)) + 1\n        \n# Top-down ITERATION (pre-order):\nclass Solution:\n    def maxDepth(self, root: TreeNode) -> int:\n        if not root:\n            return 0\n        else:\n            answer = 0\n            stack = [(root, 1)]\n            while stack:\n                curr, depth = stack.pop()\n                answer = max(answer, depth)\n                if curr.right:\n                    stack.append((curr.right, depth + 1))\n                if curr.left:\n                    stack.append((curr.left, depth + 1))\n            return answer","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}