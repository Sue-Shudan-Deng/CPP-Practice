{"id":311828471,"lang":"python","lang_name":"Python","time":"3 years, 5 months","timestamp":1584028745,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/311828471/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution(object):\n    def maxDepth(self, root):\n        \"\"\"\n        :type root: TreeNode\n        :rtype: int\n        Top to Down 的先序遍历\n        \"\"\"\n        if not root:\n            return 0\n        stack, ans = [(root, 0)], 0\n        while stack:\n            root, depth = stack.pop()\n            ans = max(ans, depth)\n            if root.right:\n                stack.append((root.right, depth + 1))\n            if root.left:\n                stack.append((root.left, depth + 1))\n        return ans","compare_result":"010000000000000000000000000000000000000","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}