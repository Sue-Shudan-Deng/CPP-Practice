{"id":392852538,"lang":"cpp","lang_name":"C++","time":"2 years, 12 months","timestamp":1599579605,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/392852538/","is_pending":"Not Pending","title":"Convert Binary Search Tree to Sorted Doubly Linked List","memory":"N/A","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* left;\n    Node* right;\n\n    Node() {}\n\n    Node(int _val) {\n        val = _val;\n        left = NULL;\n        right = NULL;\n    }\n\n    Node(int _val, Node* _left, Node* _right) {\n        val = _val;\n        left = _left;\n        right = _right;\n    }\n};\n*/\n\n// BST遍历首选中序遍历\nclass Solution {\npublic:\n    Node* treeToDoublyList(Node* root) {\n        Node* first;\n        Node* last;\n        stack<Node*> s;\n        int count = 0;\n        while (root || !s.empty()) {\n            while (root) {\n                s.push(root);\n                root = root->left;\n            }\n            root = s.top();\n            s.pop();\n            if (count == 0) {\n                first = root;\n                ++count;\n            } else {\n                last->right = root;\n                root->left = last;\n            }\n            last = root;\n            root = root->right; \n        }\n        first->left = last;\n        last->right = first;\n        return first;\n    }\n};","compare_result":"11000000000000000000000000000000000000000000000000","title_slug":"convert-binary-search-tree-to-sorted-doubly-linked-list","has_notes":false,"flag_type":1}