{"id":293521882,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1578837387,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/293521882/","is_pending":"Not Pending","title":"Convert Binary Search Tree to Sorted Doubly Linked List","memory":"N/A","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\"\"\"\nclass Solution:\n    def treeToDoublyList(self, root: 'Node') -> 'Node':\n        if not root:\n            return root\n        \n        def helper(node: 'Node'):\n            nonlocal first, last\n            if not node:\n                return\n            helper(node.left)\n            if last:\n                node.right = last\n                last.left = node\n            else:\n                # 最开始，把first赋值为最左边值\n                first = node\n            last = node\n            helper(node.right)\n            \n        first, last = None, None\n        helper(root)\n        first.left = last\n        last.right = first\n        return first","compare_result":"00000000000000000000000000000000000000000000000000","title_slug":"convert-binary-search-tree-to-sorted-doubly-linked-list","has_notes":false,"flag_type":1}