{"id":402959603,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1601526076,"status":10,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/402959603/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"17.9 MB","code":"class KthLargest:\n    \"\"\"\n    注意同样是minheap, c++和python的区别\n    c++的min在q[-1], python的min在q[0]\n    \"\"\"\n    def __init__(self, k: int, nums: List[int]):\n        self.q = []\n        self.k = k\n        for num in nums:\n            heapq.heappush(self.q, num)\n            if len(self.q) > k:\n                heapq.heappop(self.q)\n\n    def add(self, val: int) -> int:\n        heapq.heappush(self.q, val)\n        if len(self.q) > self.k:\n            heapq.heappop(self.q)\n        return self.q[0]\n\n# Your KthLargest object will be instantiated and called as such:\n# obj = KthLargest(k, nums)\n# param_1 = obj.add(val)","compare_result":"1111111111","title_slug":"kth-largest-element-in-a-stream","has_notes":false,"flag_type":1}