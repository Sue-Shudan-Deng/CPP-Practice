{"id":395858581,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1600135665,"status":10,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/395858581/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"20 MB","code":"class KthLargest {\n\nprivate:\n    priority_queue<int, vector<int>, greater<int>> q;\n    int size;\npublic:\n    KthLargest(int k, vector<int>& nums) {\n        size = k;\n        for (auto n : nums) {\n            q.push(n);\n            if (q.size() > size) {\n                q.pop();\n            }\n        }\n    }\n    int add(int val) {\n        q.push(val);\n        if (q.size() > size) {\n            q.pop();\n        }\n        return q.top();\n    }\n};\n\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest* obj = new KthLargest(k, nums);\n * int param_1 = obj->add(val);\n */","compare_result":"1111111111","title_slug":"kth-largest-element-in-a-stream","has_notes":false,"flag_type":1}