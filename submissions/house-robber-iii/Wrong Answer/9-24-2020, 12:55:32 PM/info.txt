{"id":400256329,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600977332,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/400256329/","is_pending":"Not Pending","title":"House Robber III","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def rob(self, root: TreeNode) -> int:\n        \"\"\"\n        https://leetcode.com/problems/house-robber-iii/discuss/376297/Python3-Dynamic-Programming-%2B-Depth-First-Search\n        [i, j]: i表示这个节点要用，j表示这个节点不用\n        \"\"\"\n        def dfs(root: TreeNode) -> List[int]:\n            if not root:\n                return [0, 0]\n            left = dfs(root.left)\n            right = dfs(root.right)\n            \n            return [root.val + left[1] + right[1], left[0] + right[0]]\n        \n        return max(dfs(root))","compare_result":"1111111111110110111011110111111110111011111111101111111011011111111100101000000000000000000000000000000000000000000000000000","title_slug":"house-robber-iii","has_notes":false,"flag_type":1}