{"id":307147679,"lang":"python","lang_name":"Python","time":"3 years, 6 months","timestamp":1582743812,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/307147679/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution(object):\n    def isSymmetric(self, root):\n        \"\"\"\n        :type root: TreeNode\n        :rtype: bool\n        \"\"\"\n        return self.isMirror(root, root)\n    def isMirror(self, t1, t2):\n        if not t1 and not t2:\n            return False\n        elif not t1 or not t2:\n            return True\n        else:\n            return t1.val == t2.val and self.isMirror(t1.left, t2.right) and self.isMirror(t2.left, t1.right)\n        \n        ","compare_result":"000000001010001111100100010101100011001101011110111110100101101111001000110100000001111101001011010110010110110111101101000110001001100010111101000001100100100100011000100111110011110011001101111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}