{"id":292544329,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1578541047,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/292544329/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"12.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\n# Recursive:\nclass Solution:\n    def isSymmetric(self, root: TreeNode) -> bool:\n        return self.isMirror(root, root)\n    def isMirror(self, t1: TreeNode, t2: TreeNode) -> bool:\n        if not t1 and not t2:\n            return True\n        elif not t1 or not t2:\n            return False\n        return t1.val == t2.val and self.isMirror(t1.left, t2.right) and self.isMirror(t2.left, t1.right)","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}