{"id":402806355,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1601495087,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/402806355/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    \nbool isSymmetric2(TreeNode* root1, TreeNode* root2) {\n    if (!root1 && !root2) {\n        return true;\n    }\n    if (!root1 || !root2 || root1->val != root2->val) {\n        return false;\n    }\n    bool left = isSymmetric2(root1->left, root2->right);\n    bool right = isSymmetric2(root1->right, root2->left);\n    return left && right;\n}\n    \n    \npublic:\n    bool isSymmetric(TreeNode* root) {\n        return isSymmetric2(root, root);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}