{"id":307147868,"lang":"python","lang_name":"Python","time":"3 years, 6 months","timestamp":1582743859,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/307147868/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"12.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution(object):\n    def isSymmetric(self, root):\n        \"\"\"\n        :type root: TreeNode\n        :rtype: bool\n        \"\"\"\n        return self.isMirror(root, root)\n    def isMirror(self, t1, t2):\n        if not t1 and not t2:\n            return True\n        elif not t1 or not t2:\n            return False\n        else:\n            return t1.val == t2.val and self.isMirror(t1.left, t2.right) and self.isMirror(t1.right, t2.left)\n    \n\n        \n        \n        \n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}