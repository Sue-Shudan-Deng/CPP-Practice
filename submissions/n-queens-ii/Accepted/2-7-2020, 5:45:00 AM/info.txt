{"id":301065433,"lang":"python","lang_name":"Python","time":"3 years, 7 months","timestamp":1581083100,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/301065433/","is_pending":"Not Pending","title":"N-Queens II","memory":"11.8 MB","code":"class Solution(object):\n    def totalNQueens(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        col = [False for _ in range(n)] \n        diag1 = [False for _ in range(2 * n - 1)]\n        diag2 = [False for _ in range(2 * n - 1)]\n        \n        def is_under_attack(x, y):\n            return col[y] or diag1[x + y] or diag2[x - y + n - 1]\n        \n        def update(x, y, isTrue):\n            col[y] = isTrue\n            diag1[x + y] = isTrue\n            diag2[x - y + n - 1] = isTrue\n            \n        def bt(r = 0, cnt = 0):\n            for c in range(n):\n                if not is_under_attack(r, c):\n                    update(r, c, isTrue=True)\n                    if r + 1 == n:\n                        cnt += 1\n                    else:\n                        cnt = bt(r + 1, cnt)\n                    update(r, c, isTrue=False)\n            return cnt\n        return bt(0)","compare_result":"111111111","title_slug":"n-queens-ii","has_notes":false,"flag_type":1}