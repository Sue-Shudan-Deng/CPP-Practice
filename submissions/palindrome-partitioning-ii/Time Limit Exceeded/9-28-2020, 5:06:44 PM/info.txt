{"id":402009994,"lang":"python3","lang_name":"Python3","time":"2Â years, 11Â months","timestamp":1601338004,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/402009994/","is_pending":"Not Pending","title":"Palindrome Partitioning II","memory":"N/A","code":"class Solution:\n    def minCut(self, s: str) -> int:\n        n = len(s)\n        dp_pal = [[0 for _ in range(n)] for _ in range(n)]\n        dp_cut = [float(\"inf\") for _ in range(n + 1)]\n        dp_cut[n] = -1\n        def dfs(start: int, ans: int) -> int:\n            if start == n:\n                return dp_cut[n]\n            tmp = float(\"inf\")\n            for end in range(start, n):\n                if s[start] == s[end] and (end - start <= 2 or dp_pal[start+1][end-1]):\n                    dp_pal[start][end] = True\n                    if dp_cut[end + 1] == float(\"inf\"):\n                        tmp = min(tmp, dfs(end + 1, ans + 1) + 1)\n                    else:\n                        tmp = min(tmp, dp_cut[end + 1] + 1)\n            return tmp\n                        \n        return dfs(0, 0)    ","compare_result":"11111111111111111111111100000","title_slug":"palindrome-partitioning-ii","has_notes":false,"flag_type":1}