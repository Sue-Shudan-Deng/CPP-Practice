{"id":311340686,"lang":"python3","lang_name":"Python3","time":"3Â years, 5Â months","timestamp":1583885518,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/311340686/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"N/A","code":"class Solution:\n    def orangesRotting(self, grid: List[List[int]]) -> int:\n        row = len(grid)\n        col = len(grid[0])\n        if grid[0][0] != 2:\n            return -1\n        queue = collections.deque()\n        queue.append((0, 0, 0))\n        dirs = [(0, 1), (1, 0), (0, -1), (-1, 0)]\n        lvl = 0\n        \n        while queue:\n            r, c, lvl = queue.popleft()\n            grid[r][c] = 2\n            for d_r, d_c in dirs:\n                new_r = d_r + r\n                new_c = d_c + c\n                if new_r >= 0 and new_r < row and new_c >= 0 and new_c < col and grid[new_r][new_c] == 1:\n                    queue.append((new_r, new_c, lvl + 1))\n                    \n        for r in range(row):\n            for c in range(col):\n                if grid[r][c] == 1:\n                    return -1\n                \n        return lvl","compare_result":"110011100110111001001110011101010001101011111010100000001011000010000000110100000111000000010001010001011001000001100000000110000010001010000000000001010110000001000001110000001110101010000001000110010010000000000110000000100110100000001000100011001000101000111001001001100000000100100101000101000010101","title_slug":"rotting-oranges","has_notes":false,"flag_type":1}