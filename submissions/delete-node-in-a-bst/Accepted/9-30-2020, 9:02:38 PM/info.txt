{"id":402952868,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1601524958,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/402952868/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"18.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def deleteNode(self, root: TreeNode, key: int) -> TreeNode:\n        def successor(root: TreeNode) -> TreeNode:\n            root = root.right\n            while root.left:\n                root = root.left\n            return root\n        \n        # case 1\n        if not root:\n            return None\n        \n        if root.val == key:\n            # case 2\n            if not root.left:\n                return root.right\n            if not root.right:\n                return root.left\n            # case 3\n            succ = successor(root)\n            root.val = succ.val\n            root.right = self.deleteNode(root.right, succ.val)\n            return root\n        \n        if key < root.val:\n            root.left = self.deleteNode(root.left, key)\n        else:\n            root.right = self.deleteNode(root.right, key)\n        return root","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-node-in-a-bst","has_notes":false,"flag_type":1}