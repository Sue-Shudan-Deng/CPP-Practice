{"id":417225082,"lang":"python","lang_name":"Python","time":"2 years, 10 months","timestamp":1604620731,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/417225082/","is_pending":"Not Pending","title":"Count Univalue Subtrees","memory":"13.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution(object):\n    def countUnivalSubtrees(self, root):\n        self.count = 0\n        def isUnival(root):\n            if not root:\n                return True\n            flag = True\n            if root.left:\n                flag &= (isUnival(root.left) and root.left.val == root.val)\n            if root.right:\n                flag &= (isUnival(root.right) and root.right.val == root.val)\n            if flag:\n                self.count += 1\n            return flag\n        isUnival(root)\n        return self.count","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-univalue-subtrees","has_notes":false,"flag_type":1}