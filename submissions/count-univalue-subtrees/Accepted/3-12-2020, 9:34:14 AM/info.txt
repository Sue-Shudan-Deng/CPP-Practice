{"id":311835480,"lang":"python","lang_name":"Python","time":"3 years, 5 months","timestamp":1584030854,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/311835480/","is_pending":"Not Pending","title":"Count Univalue Subtrees","memory":"12.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution(object):\n    def countUnivalSubtrees(self, root):\n        \"\"\"\n        :type root: TreeNode\n        :rtype: int\n        Recursion\n        \"\"\"\n        self.cnt = 0\n        self.isUnival(root)\n        return self.cnt\n    \n    def isUnival(self, root):\n        if not root:\n            return False\n        # 如果叶结点，自动成为univalue\n        if not root.left and not root.right:\n            self.cnt += 1\n            return True\n        flag = True\n        if root.left:\n            flag &= (self.isUnival(root.left) and root.left.val == root.val)\n        if root.right:\n            flag &= (self.isUnival(root.right) and root.right.val == root.val)\n        if flag:\n            self.cnt += 1\n        return flag","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-univalue-subtrees","has_notes":false,"flag_type":1}