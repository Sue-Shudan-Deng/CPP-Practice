{"id":407987330,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602545517,"status":10,"status_display":"Accepted","runtime":"916 ms","url":"/submissions/detail/407987330/","is_pending":"Not Pending","title":"Number of Ways to Stay in the Same Place After Some Steps","memory":"19.6 MB","code":"class Solution:\n    def numWays(self, steps: int, arrLen: int) -> int:\n        arrLen = min(arrLen, steps)\n        dp = [[0 for _ in range(arrLen)] for _ in range(steps + 1)]\n        dp[0][0], mod = 1, 10**9 + 7\n        dirs = [-1, 0, 1]\n        for s in range(1, steps + 1):\n            for i in range(arrLen):\n                for d in dirs:\n                    new_i = i + d\n                    if 0 <= new_i < arrLen:\n                        dp[s][new_i] = (dp[s][new_i] + dp[s-1][i]) % mod\n        return dp[s][0]","compare_result":"1111111111111111111111111111111","title_slug":"number-of-ways-to-stay-in-the-same-place-after-some-steps","has_notes":false,"flag_type":1}