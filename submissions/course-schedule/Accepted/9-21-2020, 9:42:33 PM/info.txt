{"id":399039561,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600749753,"status":10,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/399039561/","is_pending":"Not Pending","title":"Course Schedule","memory":"16.7 MB","code":"class Solution:\n    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:\n        \n        graph = collections.defaultdict(list)\n        status = [\"unk\" for _ in range(numCourses)]\n        for p, q in prerequisites:\n            graph[q].append(p)\n            \n        def dfs(node):\n            \"\"\"\n            whether or not can form a circle if we start from this node\n            \"\"\"\n            if status[node] == \"visited\":\n                return True  # True means OK\n            if status[node] == \"visiting\":\n                return False # False means CYCLE\n            # 所以某种意义上跟backtrack也没任何区别\n            # set\n            status[node] = \"visiting\"\n            for nei in graph[node]:\n                if not dfs(nei):\n                    return False\n            # clear\n            status[node] = \"visited\"\n            return True\n            \n        for node in range(numCourses):\n            if not dfs(node):\n                return False\n        return True\n        ","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"course-schedule","has_notes":false,"flag_type":1}