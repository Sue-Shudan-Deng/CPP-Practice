{"id":419008437,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605059058,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/419008437/","is_pending":"Not Pending","title":"Cut Off Trees for Golf Event","memory":"N/A","code":"class Solution(object):\n    def cutOffTree(self, f):\n        row, col = len(f), len(f[0])\n        s = [(i,j) for i in range(row) for j in range(col) if f[i][j]]             \n        s.sort(key = lambda x: f[x[0]][x[1]])\n        s = [(0,0)] + s\n        cnt = 0\n        \n        def bfs(source, target):\n            queue = collections.deque([(source,0)])\n            visited = set()\n            while queue:\n                u, steps = queue.popleft()\n                if u in visited:\n                    continue\n                visited.add(u)\n                if u == target:\n                    return steps\n                r, c = u[0], u[1]\n                for nr, nc in ((r - 1, c), (r + 1, c), (r, c - 1), (r, c + 1)):\n                    if 0 <= nr < row and 0 <= nc < col and f[nr][nc]:\n                        queue.append((v, steps + 1))\n            return float('inf')\n        \n        for u, v in zip(s, s[1:]): \n            cnt += bfs(u, v)\n            if cnt == float('inf'): \n                return -1\n        return cnt\n    \n","compare_result":"10110101011110000000000000000000000000000001011110111","title_slug":"cut-off-trees-for-golf-event","has_notes":false,"flag_type":1}