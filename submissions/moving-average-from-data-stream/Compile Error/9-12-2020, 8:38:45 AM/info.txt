{"id":394641218,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1599925125,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/394641218/","is_pending":"Not Pending","title":"Moving Average from Data Stream","memory":"N/A","code":"class MovingAverage {\n    \nprivate:\n    queue<int> data;\n    int s_;\npublic:\n    /** Initialize your data structure here. */\n    MovingAverage(int size) {\n        s_ = size;\n    }\n    double next(int val) {\n        if (s_ == data.size()) {\n            data.pop();\n            data.push(val);\n        }\n        double sum = static_cast<double>std::accumulate(data.begin(), data.end(), 0);\n        return sum / data.size();\n    }\n};\n\n/**\n * Your MovingAverage object will be instantiated and called as such:\n * MovingAverage* obj = new MovingAverage(size);\n * double param_1 = obj->next(val);\n */","compare_result":null,"title_slug":"moving-average-from-data-stream","has_notes":false,"flag_type":1}