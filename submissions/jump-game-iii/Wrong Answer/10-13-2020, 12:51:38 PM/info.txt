{"id":408347019,"lang":"python3","lang_name":"Python3","time":"2Â years, 10Â months","timestamp":1602618698,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/408347019/","is_pending":"Not Pending","title":"Jump Game III","memory":"N/A","code":"class Solution:\n    def canReach(self, arr: List[int], start: int) -> bool:\n        n = len(arr)\n        visited = set()\n        \n        def dfs(start):\n            if arr[start]:\n                return True\n            tmp = False\n            # add\n            if start + arr[start] < n and not start + arr[start] in visited:\n                visited.add(start + arr[start])\n                tmp = tmp or dfs(start + arr[start])\n            # minus\n            if start - arr[start] >= 0 and not start - arr[start] in visited:\n                visited.add(start - arr[start])\n                tmp = tmp or dfs(start - arr[start])\n            return tmp\n        \n        return dfs(start)","compare_result":"110110000111010000001001000011010101110100100100110000","title_slug":"jump-game-iii","has_notes":false,"flag_type":1}