{"id":399388876,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600813259,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/399388876/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"15.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def __init__(self):\n        self.res = float(\"-inf\")\n    def diameterOfBinaryTree(self, root: TreeNode) -> int:\n        if not root:\n            return 0\n        def count(root):\n            if not root:\n                return 0\n            left = count(root.left)\n            right = count(root.right)\n            self.res = max(self.res, 1 + left + right)\n            return 1 + max(left, right)\n        count(root)\n        return self.res - 1","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}