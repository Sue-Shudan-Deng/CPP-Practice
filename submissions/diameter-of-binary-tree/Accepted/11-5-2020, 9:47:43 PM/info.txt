{"id":417317266,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604641663,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/417317266/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"16.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def __init__(self):\n        self.res = float(\"-inf\")\n    def diameterOfBinaryTree(self, root: TreeNode) -> int:\n        if not root:\n            return 0\n        res = 0\n        def count(root):\n            nonlocal res\n            if not root:\n                return 0\n            l = count(root.left)\n            r = count(root.right)\n            res = max(res, 1 + l + r)\n            return 1 + max(l, r)\n        count(root)\n        return res - 1","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}