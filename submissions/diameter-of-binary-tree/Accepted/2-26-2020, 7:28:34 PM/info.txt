{"id":307267621,"lang":"python3","lang_name":"Python3","time":"3 years, 6 months","timestamp":1582774114,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/307267621/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"14.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def diameterOfBinaryTree(self, root: TreeNode) -> int:\n        def maxdepth(node):\n            nonlocal res\n            if not node:\n                return 0\n            left = maxdepth(node.left)\n            right = maxdepth(node.right)\n            \n            res = max(res, left + right)\n            \n            return max(left, right) + 1\n        res = 0\n        maxdepth(root)\n        return res","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}