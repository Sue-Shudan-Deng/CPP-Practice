{"id":399822174,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600894768,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/399822174/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"N/A","code":"class Solution:\n    def maxProduct(self, nums: List[int]) -> int:\n        n = len(nums)\n        dp = [0 for _ in range(n + 1)]\n        dp[0] = 1\n        for i in range(1, n + 1):\n            dp[i] = max(nums[i - 1], nums[i - 1] * dp[i - 1])\n        return max(dp[1:])","compare_result":"1111111111111010110100000011111011111011010111111001110101101111111101101111111111101010101111010101011010001001001111001010100111100001101100010010100011001110010110001101000100000000000","title_slug":"maximum-product-subarray","has_notes":false,"flag_type":1}