{"id":399855334,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600901495,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/399855334/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"13.9 MB","code":"class Solution:\n    def maxProduct(self, nums: List[int]) -> int:\n        n = len(nums)\n        if n == 0:\n            return 0\n\n        max_so_far = nums[0]\n        min_so_far = nums[0]\n        result = max_so_far\n\n        for i in range(1, n):\n            curr = nums[i]\n            temp_max = max(curr, max_so_far * curr, min_so_far * curr)\n            min_so_far = min(curr, max_so_far * curr, min_so_far * curr)\n\n            max_so_far = temp_max\n            result = max(max_so_far, result)\n\n        return result","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray","has_notes":false,"flag_type":1}