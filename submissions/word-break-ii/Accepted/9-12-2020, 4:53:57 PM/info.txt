{"id":394818080,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1599954837,"status":10,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/394818080/","is_pending":"Not Pending","title":"Word Break II","memory":"10.2 MB","code":"class Solution {\npublic:\n    vector<string> wordBreak(string s, vector<string>& wordDict) {\n        \n        // step1: check if the word is breakable. If not, don't waste time on that\n        vector<bool> DP(s.size() + 1, false);\n        DP[0] = true;\n        for (int i = 1; i <= s.size(); ++i) {\n            for (auto w : wordDict) {\n                auto size = w.size();\n                if (i >= size) {\n                    DP[i] = DP[i] || (DP[i-size] && w == s.substr(i-size, size));\n                }\n            }\n        }\n        if (!DP.back()) {\n            return vector<string>();\n        }\n        \n        vector<vector<string>> DP_(s.size() + 1, vector<string>());\n        for (int i = 1; i <= s.size(); ++i) {\n            for (auto w : wordDict) {\n                auto size = w.size();\n                if (i >= size && w == s.substr(i-size, size)) {\n                    if (i == size) {\n                        DP_[i].push_back(w);\n                    } else {\n                        for (auto dp : DP_[i-size]) {\n                            DP_[i].push_back(dp + \" \" + w);\n                        }\n                    }\n                }\n            }\n        }\n        return DP_.back();\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"word-break-ii","has_notes":false,"flag_type":1}