{"id":417255452,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604628698,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/417255452/","is_pending":"Not Pending","title":"Trim a Binary Search Tree","memory":"17.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def trimBST(self, root: TreeNode, low: int, high: int) -> TreeNode:\n        def trim(node):\n            if not node:\n                return None\n            elif node.val > high:\n                return trim(node.left)\n            elif node.val < low:\n                return trim(node.right)\n            else:\n                node.left = trim(node.left)\n                node.right = trim(node.right)\n                return node\n        return trim(root)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trim-a-binary-search-tree","has_notes":false,"flag_type":1}