{"id":394896489,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1599967301,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/394896489/","is_pending":"Not Pending","title":"Unique Paths II","memory":"N/A","code":"class Solution:\n    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:\n        if obstacleGrid == []:\n            return 1\n        row = len(obstacleGrid)\n        col = len(obstacleGrid[0])\n        dp = [[0 for _ in range(col+1)] for _ in range(row+1)]\n        \n        dp[1][1] = 1\n        for i in range(1, row+1):\n            for j in range(1, col+1):\n                if not (i == 1 and j == 1) and obstacleGrid[i-1][j-1] == 0:\n                    dp[i][j] = dp[i-1][j] + dp[i][j-1]\n        return dp[-1][-1]","compare_result":"11011011101111110111111111011111111111111","title_slug":"unique-paths-ii","has_notes":false,"flag_type":1}