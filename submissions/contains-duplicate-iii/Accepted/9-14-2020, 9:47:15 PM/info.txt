{"id":395924954,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1600145235,"status":10,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/395924954/","is_pending":"Not Pending","title":"Contains Duplicate III","memory":"15.1 MB","code":"class Solution {\npublic:\n    bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) {\n        if (k==0) {\n            return false;\n        }\n        set<long long> s;\n        for(int i=0; i<nums.size(); ++i){\n            long long val = nums[i];\n            if(!s.empty()){\n                if (s.size()==k+1) {\n                    s.erase(nums[i-k-1]);\n                }\n                auto higher = s.lower_bound(val);\n                //higher points to smallest element bigger or equal to val\n                if (higher!=s.end() && (*higher-val<=t)) {\n                    return true;\n                }\n                if (higher!=s.begin()) { \n                    higher--;\n                    //now higher should point to biggest element smaller than val\n                    auto low = higher;\n                    if (low!=s.end() && ((val-*low)<=t))\t{\n                        return true;\n                    }\n                }\n            }\n            s.insert(val);\n        }\n        return false;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"contains-duplicate-iii","has_notes":false,"flag_type":1}