{"id":418633348,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1604970001,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/418633348/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"N/A","code":"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        if not matrix:\n            return False\n        row, col = len(matrix), len(matrix[0])\n        last_column = [matrix[i][-1] for i in range(row)]\n        r = bisect.bisect_right(last_column, target)\n        if r >= row:\n            return False\n        \n        search_range = matrix[r]\n        p = bisect.bisect_right(search_range, target)\n        if p >= col:\n            return False\n        \n        return matrix[r][p-1] == target","compare_result":"111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-a-2d-matrix","has_notes":false,"flag_type":1}