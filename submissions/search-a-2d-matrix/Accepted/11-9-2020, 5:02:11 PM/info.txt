{"id":418633900,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1604970131,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/418633900/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"14.3 MB","code":"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        if not matrix or not matrix[0]:\n            return False\n        row, col = len(matrix), len(matrix[0])\n        last_column = [matrix[i][-1] for i in range(row)]\n        r = bisect.bisect_left(last_column, target)\n        if r >= row:\n            return False\n        \n        search_range = matrix[r]\n        p = bisect.bisect_left(search_range, target)\n        if p >= col:\n            return False\n        \n        return matrix[r][p] == target","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix","has_notes":false,"flag_type":1}