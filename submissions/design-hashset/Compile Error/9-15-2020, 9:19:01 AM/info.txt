{"id":396156508,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1600186741,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/396156508/","is_pending":"Not Pending","title":"Design HashSet","memory":"N/A","code":"#define MAX_LEN 100000\nclass MyHashSet {\n    \nprivate:\n    vector<int> s[MAX_LEN];\n    int getIndex(int key) {\n        return key % MAX_LEN;\n    }\n    int getPos(int key) {\n        int idx = getIndex(key);\n        auto itr = find(s[idx].begin(), s[idx].end(), key);\n        if (itr == s[idx].end()) {\n            return -1;\n        }\n        return *itr;\n    }\n    \npublic:\n    /** Initialize your data structure here. */\n    MyHashSet() {\n        \n    }\n    \n    void add(int key) {\n        int pos = getPos(key);\n        if (pos == -1) {\n            int idx = getIndex(key);\n            s[idx].push_back(key);\n        }\n    }\n    \n    void remove(int key) {\n        int pos = getPos(key);\n        if (pos != -1) {\n            s[idx].erase(s[idx].begin() + pos);\n        }\n    }\n    \n    /** Returns true if this set contains the specified element */\n    bool contains(int key) {\n        int pos = getPos(key);\n        bool ret = pos == -1 ? false : true;\n        return ret;\n    }\n};\n\n/**\n * Your MyHashSet object will be instantiated and called as such:\n * MyHashSet* obj = new MyHashSet();\n * obj->add(key);\n * obj->remove(key);\n * bool param_3 = obj->contains(key);\n */","compare_result":null,"title_slug":"design-hashset","has_notes":false,"flag_type":1}