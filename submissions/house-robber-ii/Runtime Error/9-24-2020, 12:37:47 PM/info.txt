{"id":400250225,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600976267,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/400250225/","is_pending":"Not Pending","title":"House Robber II","memory":"N/A","code":"class Solution:\n    def rob(self, nums: List[int]) -> int:\n        n = len(nums)\n        if len(nums) == 0:\n            return 0\n        elif len(nums) == 1:\n            return nums[0]\n        \n        # case 1: rob at index 0\n        dp1 = [0 for _ in range(n-1)]\n        dp1[0] = nums[0]\n        dp1[1] = nums[0]\n        \n        for i in range(2, n - 1):\n            dp1[i] = max(dp1[i-2] + nums[i], dp1[i-1])\n            \n        # case 2: don't rob at index 0\n        dp2 = [0 for _ in range(n)]\n        dp2[0] = 0\n        dp2[1] = nums[1]\n        \n        for i in range(2, n):\n            dp2[i] = max(dp2[i-2] + nums[i], dp2[i-1])\n                \n        return max(dp2[-1], dp1[-1])","compare_result":"11111100000000000000000000000000000000000000000000000000000000000000000000","title_slug":"house-robber-ii","has_notes":false,"flag_type":1}