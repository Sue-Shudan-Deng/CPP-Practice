{"id":402875986,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1601509585,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/402875986/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"15.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def minDepth(self, root: TreeNode) -> int:\n        if not root:\n            return 0\n        left = self.minDepth(root.left)\n        right = self.minDepth(root.right)\n        if not root.right:\n            return left + 1\n        elif not root.left:\n            return right + 1\n        else:\n            return min(left, right) + 1","compare_result":"11111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree","has_notes":false,"flag_type":1}