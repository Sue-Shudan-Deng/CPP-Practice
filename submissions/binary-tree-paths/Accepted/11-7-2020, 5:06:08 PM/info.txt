{"id":417892272,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604797568,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/417892272/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"14.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def binaryTreePaths(self, root: TreeNode) -> List[str]:\n        ans = [] \n        def dfs(root, cur, ans):\n            if not root:\n                return\n            if not root.left and not root.right:\n                ans.append(\"\".join([str(i) + \"->\" for i in cur[:]] + [str(root.val)]))\n                return\n            cur.append(root.val)\n            dfs(root.left, cur, ans)\n            dfs(root.right, cur, ans)\n            cur.pop()\n            \n        dfs(root, [], ans)\n        return ans","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths","has_notes":false,"flag_type":1}