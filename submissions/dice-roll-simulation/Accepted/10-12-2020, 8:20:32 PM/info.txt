{"id":408059344,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602559232,"status":10,"status_display":"Accepted","runtime":"1992 ms","url":"/submissions/detail/408059344/","is_pending":"Not Pending","title":"Dice Roll Simulation","memory":"30.2 MB","code":"class Solution:\n    def dieSimulator(self, n: int, rollMax: List[int]) -> int:\n        \"\"\"\n        method 1: https://www.youtube.com/watch?v=3JOZcD-BRLE\n        \"\"\"\n        mod = 10 ** 9 + 7\n        dp = [[[0 for _ in range(16)] for _ in range(6)] for _ in range(n + 1)]\n        # dp[i][j][k]: length i, k's consecutive j at the end\n        for j in range(6):\n            dp[1][j][1] = 1\n            \n        for i in range(2, n + 1):\n            for j in range(6):\n                for p in range(6): \n                    for k in range(1, rollMax[p] + 1):\n                        if p != j:\n                            dp[i][j][1] = (dp[i][j][1] + dp[i-1][p][k]) % mod\n                        else:\n                            if k < rollMax[p]:\n                                dp[i][j][k+1] = (dp[i][j][k+1] + dp[i-1][j][k]) % mod\n        return sum([sum(i) for i in dp[n]]) % mod","compare_result":"11111111111111111111111111111111","title_slug":"dice-roll-simulation","has_notes":false,"flag_type":1}