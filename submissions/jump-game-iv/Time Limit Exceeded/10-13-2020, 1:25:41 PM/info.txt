{"id":408357118,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602620741,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/408357118/","is_pending":"Not Pending","title":"Jump Game IV","memory":"N/A","code":"class Solution:\n    def minJumps(self, arr: List[int]) -> int:\n        n, graph = len(arr), collections.defaultdict(set)\n        for k, v in enumerate(arr):\n            graph[v].add(k)\n        dp = [0 for _ in range(n)]\n        \n        def dfs(i, step, visited):\n            if i == n - 1:\n                return step\n            tmp = float(\"inf\")\n            visited.add(i)\n            # add 1\n            if i + 1 < n and not i + 1 in visited:\n                tmp = min(tmp, dfs(i + 1, step + 1, visited))\n            # minus 1\n            if i - 1 >= 0 and not i - 1 in visited:\n                tmp = min(tmp, dfs(i - 1, step + 1, visited))\n            # go to graph\n            for j in graph[arr[i]]:\n                if j != i + 1 and j != i - 1 and not j in visited:\n                    tmp = min(tmp, dfs(j, step + 1, visited))\n            visited.remove(i)\n            return tmp\n        \n        return dfs(0, 0, set())","compare_result":"1111111111111100000000000000","title_slug":"jump-game-iv","has_notes":false,"flag_type":1}