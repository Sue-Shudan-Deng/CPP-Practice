{"id":399732851,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1600879175,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/399732851/","is_pending":"Not Pending","title":"Word Search","memory":"N/A","code":"class Solution {\n    \nprivate:\n    \n    int row;\n    int col;\n    vector<pair<int, int>> dirs;\n    bool dfs(vector<vector<char>>& board, int step, string& word, int r, int c) {\n        if (step == word.size() - 1) {\n            return true;\n        }\n        if (board[r][c] == '#') {\n            return false;\n        }\n        board[r][c] = '#';\n        for (auto ds : dirs) {\n            auto [dr, dc] = ds;\n            auto new_r = r + dr; \n            auto new_c = c + dc;\n            if (new_r >= 0 && new_r < row && new_c >= 0 && new_c < col) {\n                if (board[r][c] == word[step + 1] && dfs(board, step + 1, word, new_r, new_c)) {\n                    return true;\n                }\n            }\n        }\n        board[r][c] = word[step];\n        return false;\n    }\n    \npublic:\n    bool exist(vector<vector<char>>& board, string word) {\n        row = board.size();\n        col = board[0].size();\n        dirs = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\n        for (int r = 0; r < row; ++r) {\n            for (int c = 0; c < col; ++c) {\n                if (board[r][c] == word[0] && dfs(board, 0, word, r, c)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n};","compare_result":"00111110100110000000010000010001001111101111010000110000000011100000010000101111111111100","title_slug":"word-search","has_notes":false,"flag_type":1}