{"id":307300688,"lang":"python3","lang_name":"Python3","time":"3 years, 6 months","timestamp":1582780825,"status":10,"status_display":"Accepted","runtime":"376 ms","url":"/submissions/detail/307300688/","is_pending":"Not Pending","title":"Word Search","memory":"14.5 MB","code":"class Solution:\n    def exist(self, board: List[List[str]], word: str) -> bool:\n        start = word[0]\n        row = len(board)\n        col = len(board[0])\n        flag = False \n        pos = []\n        \n        def bt(r, c, suffix):\n            if suffix == \"\":\n                return True\n            if r < 0 or r > row - 1 or c < 0 or c > col - 1 or board[r][c] != suffix[0]:\n                return False\n            # 置位, 这样以前访问过的就不能再被访问了\n            board[r][c] = \"#\"\n            for new_r, new_c in [(r + 1, c), (r - 1, c), (r, c + 1), (r, c - 1)]:\n                if bt(new_r, new_c, suffix[1:]):\n                    return True\n            # 复位\n            board[r][c] = suffix[0]\n            return False\n        \n        for r in range(row):\n            for c in range(col):\n                if bt(r, c, word):\n                    return True\n        return False\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-search","has_notes":false,"flag_type":1}