{"id":403213335,"lang":"python","lang_name":"Python","time":"2 years, 11 months","timestamp":1601579565,"status":10,"status_display":"Accepted","runtime":"336 ms","url":"/submissions/detail/403213335/","is_pending":"Not Pending","title":"Word Search","memory":"18.3 MB","code":"class Solution(object):\n    def exist(self, board, word):\n        \"\"\"\n        :type board: List[List[str]]\n        :type word: str\n        :rtype: bool\n        \"\"\"\n        \n        row = len(board)\n        col = len(board[0])\n        def backtrack(r, c, rest):\n            if rest == \"\":\n                return True\n            if r < 0 or r >= row or c < 0 or c >= col or rest[0] != board[r][c]:\n                return False\n            board[r][c] = \"#\"\n            for new_r, new_c in [(r, c + 1), (r + 1, c), (r, c - 1), (r - 1, c)]:\n                if backtrack(new_r, new_c, rest[1:]):\n                    return True\n            board[r][c] = rest[0]\n            return False\n        \n        for r in range(row):\n            for c in range(col):\n                if backtrack(r, c, word):\n                    return True\n        return False\n            ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-search","has_notes":false,"flag_type":1}