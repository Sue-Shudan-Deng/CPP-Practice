{"id":407455130,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602443445,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/407455130/","is_pending":"Not Pending","title":"Interleaving String","memory":"14.2 MB","code":"class Solution:\n    def isInterleave(self, s1: str, s2: str, s3: str) -> bool:\n        # step 1: check if letters or counts match\n        if len(s1) + len(s2) != len(s3):\n            return False\n        s1_counter = collections.Counter(s1)\n        s2_counter = collections.Counter(s2)\n        s3_counter = collections.Counter(s3)\n        for k, v in s3_counter.items():\n            if s1_counter.get(k, 0) + s2_counter.get(k, 0) != v:\n                return False\n        \n        # step 2: dp\n        # dp[i][j], whether s3[:i+j] is the interleaving of s1[:i] and s2[:j]\n        n1, n2 = len(s1), len(s2)\n        dp = [[False for _ in range(n2 + 1)] for _ in range(n1 + 1)]\n        dp[0][0] = True\n        \n        for i in range(1, n1 + 1):\n            if s1[i-1] == s3[i-1]:\n                dp[i][0] = dp[i-1][0]\n        for j in range(1, n2 + 1):\n            if s2[j-1] == s3[j-1]:\n                dp[0][j] = dp[0][j-1]\n                \n        for i in range(1, n1 + 1):\n            for j in range(1, n2 + 1):\n                if s3[i+j-1] == s1[i-1]:\n                    dp[i][j] = dp[i][j] or dp[i-1][j]\n                if s3[i+j-1] == s2[j-1]:\n                    dp[i][j] = dp[i][j] or dp[i][j-1]\n        return dp[-1][-1]","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"interleaving-string","has_notes":false,"flag_type":1}