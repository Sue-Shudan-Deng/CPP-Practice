{"id":390705984,"lang":"python3","lang_name":"Python3","time":"3 years","timestamp":1599181765,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/390705984/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"14.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\n# Iterative:\nfrom collections import deque\nclass Solution:\n    def levelOrder(self, root: TreeNode) -> List[List[int]]:\n        if not root:\n            return []\n        level = 0\n        res = []\n        queue = deque([root])\n        while queue:\n            res.append([])\n            # 原则: 对于每一层，先把改层对应的queue的总长度作为\n            # queue的长度，然后清空queue\n            level_length = len(queue)\n            for i in range(level_length):\n                node = queue.popleft()\n                if node:\n                    res[level].append(node.val)\n                    if node.left:\n                        queue.append(node.left)\n                    if node.right:\n                        queue.append(node.right)\n            level += 1\n        return res        ","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}