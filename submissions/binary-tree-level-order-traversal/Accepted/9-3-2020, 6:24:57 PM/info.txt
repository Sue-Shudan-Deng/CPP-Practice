{"id":390710913,"lang":"python3","lang_name":"Python3","time":"3Â years","timestamp":1599182697,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/390710913/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"13.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\n# Iterative:\nfrom collections import deque\nclass Solution:\n    def levelOrder(self, root: TreeNode) -> List[List[int]]:\n        if not root: return []\n        ret, level = [], 0\n        queue = deque([root])\n        while queue:\n            ret.append([])\n            level_length = len(queue)\n            for i in range(level_length):\n                root = queue.popleft()\n                ret[level].append(root.val)\n                if root.left: queue.append(root.left)\n                if root.right: queue.append(root.right)\n            level += 1\n        return ret","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}