{"id":292513671,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1578534407,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/292513671/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"13.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def helper(self, node: TreeNode, level: int):\n        if node:\n            self.res[level-1].append(node.val)\n            if len(self.res) == level:\n                self.res.append([])\n            self.helper(node.left, level+1)\n            self.helper(node.right, level+1)\n    \n    def levelOrder(self, root: TreeNode) -> List[List[int]]:\n        self.res = [[]]\n        self.helper(root, 1)\n        return self.res[:-1]  # 去掉最后一个[]","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}