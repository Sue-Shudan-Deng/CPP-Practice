{"id":402798374,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1601493658,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/402798374/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>> ret;\n        if (!root) return ret;\n        queue<TreeNode*> q;\n        int level, size;\n        TreeNode* cur;\n        q.push(root);\n        while (!q.empty()) {\n            vector<int> tmp;\n            ret.push_back(tmp);\n            size = q.size();\n            for (int i = 0; i < size; ++i) {\n                cur = q.front();\n                q.pop();\n                ret[level].push_back(cur->val);\n                if (cur->left) q.push(cur->left);\n                if (cur->right) q.push(cur->right);\n            }\n            ++level;\n        }\n        return ret;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}