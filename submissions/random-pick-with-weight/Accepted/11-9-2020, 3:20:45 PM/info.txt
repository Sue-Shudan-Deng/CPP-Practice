{"id":418609152,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1604964045,"status":10,"status_display":"Accepted","runtime":"300 ms","url":"/submissions/detail/418609152/","is_pending":"Not Pending","title":"Random Pick with Weight","memory":"18.6 MB","code":"class Solution:\n    \"\"\"\n    https://www.youtube.com/watch?v=nlJ8XSIWLvo\n    cdf + bianry search  \n    \"\"\"\n    def __init__(self, w: List[int]):\n        self.n = len(w)\n        self.prefix = [0 for _ in range(self.n)]\n        self.prefix[0] = w[0]\n        for i in range(1, self.n):\n            self.prefix[i] = self.prefix[i-1] + w[i]\n\n    def pickIndex(self) -> int:\n        p = random.randint(1, self.prefix[-1])\n        l, r = 0, self.n - 1\n        while l < r:\n            m = l + (r - l) // 2\n            if self.prefix[m] >= p:\n                r = m\n            else:\n                l = m + 1\n        return l\n\n# Your Solution object will be instantiated and called as such:\n# obj = Solution(w)\n# param_1 = obj.pickIndex()","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"random-pick-with-weight","has_notes":false,"flag_type":1}