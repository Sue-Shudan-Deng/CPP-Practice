{"id":407891095,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602527638,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/407891095/","is_pending":"Not Pending","title":"Combination Sum IV","memory":"N/A","code":"class Solution:\n    def combinationSum4(self, nums: List[int], target: int) -> int:\n        \"\"\"\n        Unbounded knapsack + intentionally added combination duplicates\n        \"\"\"\n        if not nums or min(nums) > target:\n            return 0\n        dp = [[] for _ in range(target + 1)]\n        for num in nums:\n            for i in range(num, target + 1):\n                if i == num:\n                    dp[num].append([num])\n                else:\n                    for c in dp[i - num]:\n                        dp[i].append(c + [num])\n        res = [collections.Counter(i) for i in dp[target]]\n        def perturbation(x: dict) -> int:\n            p = math.factorial(sum(x.values()))\n            for i in x.values():\n                p /= math.factorial(i)\n            return p\n        return int(sum([perturbation(i) for i in res]))\n            ","compare_result":"11111111111100000","title_slug":"combination-sum-iv","has_notes":false,"flag_type":1}