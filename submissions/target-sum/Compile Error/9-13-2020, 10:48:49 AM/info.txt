{"id":395175004,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1600019329,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/395175004/","is_pending":"Not Pending","title":"Target Sum","memory":"N/A","code":"class Solution {\n    \nprivate:\n    vector<vector<int>> dp;\n    \npublic:\n    int findTargetSumWays(vector<int>& nums, int S) {\n        int summ = accumulate(nums.begin(), nums.end(), 0)\n        int target = S + summ;\n        if ((S > 0 && S > summ) || (S < 0 && S < summ) || (target % 2 == 1)) {\n            return 0;\n        }\n        target /= 2;\n        dp = vector<vector<int>>(nums.size()+1, vector<int>(target+1, 0));\n        \n        for (int i = 0; i <= nums.size(); ++i) {\n            dp[i][0] = 1;\n        }\n        for (int i = 1; i <= nums.size(); ++i) {\n            for (int j = nums[i-1]; j <= target; ++j) {\n                dp[i][j] += dp[i-1][j-nums[i-1]];\n            }\n        }\n        \n        int maxnum = 0;\n        for (int i = 0; i <= nums.size(); ++i) {\n            maxnum = max(maxnum, dp[i][target]);\n        }\n        return maxnum; \n    }\n};","compare_result":null,"title_slug":"target-sum","has_notes":false,"flag_type":1}