{"id":417241376,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604625173,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/417241376/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def verticalTraversal(self, root: TreeNode) -> List[List[int]]:\n        res = collections.defaultdict(list)\n        def preorder(root, x, y):\n            if not root:\n                return\n            res[x].append((root.val, y))\n            preorder(root.left, x - 1, y - 1)\n            preorder(root.right, x + 1, y - 1)\n        preorder(root, 0, 0)\n        res = [i[1] for i in sorted(res.items(), key=lambda x:x[0])]\n        return [[i[0] for i in sorted(j, key=lambda x:-x[1])] for j in res]","compare_result":"111111111111011010000000000000","title_slug":"vertical-order-traversal-of-a-binary-tree","has_notes":false,"flag_type":1}