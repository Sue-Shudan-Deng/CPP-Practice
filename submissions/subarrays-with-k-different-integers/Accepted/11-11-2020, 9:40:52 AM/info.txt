{"id":419246693,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605116452,"status":10,"status_display":"Accepted","runtime":"3992 ms","url":"/submissions/detail/419246693/","is_pending":"Not Pending","title":"Subarrays with K Different Integers","memory":"16.7 MB","code":"class Solution:\n    def subarraysWithKDistinct(self, A: List[int], K: int) -> int:\n        \"\"\"\n        340 Longest Substring with At Most K Distinct Characters\n        \"\"\"\n        \n        def lengthOfLongestSubstringKDistinct(s: str, k: int) -> int:\n            n, h = len(s), collections.defaultdict(int)\n            if n == 0 or k == 0:\n                return 0\n            i, j, ans = 0, 0, 0\n\n            while j < n:\n                h[s[j]] = j\n                if len(h) == k + 1:\n                    # remove the one with smallest index\n                    idx = min(h.values())\n                    del h[s[idx]]\n                    i = idx + 1\n                ans += (j - i + 1)\n                j += 1\n\n            return ans\n        \n        return lengthOfLongestSubstringKDistinct(A, K) - lengthOfLongestSubstringKDistinct(A, K - 1)","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"subarrays-with-k-different-integers","has_notes":false,"flag_type":1}