{"id":406262861,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1602184853,"status":10,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/406262861/","is_pending":"Not Pending","title":"Implement Trie (Prefix Tree)","memory":"50 MB","code":"class Trie {\n    \nprivate:\n    struct TrieNode {\n        TrieNode() : is_word(false), children(26, nullptr) {}\n        ~TrieNode() {\n            for (auto child : children) {\n                if (child) {\n                    delete child;\n                }\n            }\n            children.clear();\n        }\n        bool is_word;\n        vector<TrieNode*> children;\n    };\n    \n    TrieNode* find(string& prefix) {\n        TrieNode* p = root.get();\n        for (char c : prefix) {\n            p = p->children[c - 'a'];\n            if (!p) {\n                break;\n            }\n        }\n        return p;\n    }\n    \n    std::unique_ptr<TrieNode> root;\n    \npublic:\n    /** Initialize your data structure here. */\n    Trie() : root(new TrieNode()) {}\n    \n    /** Inserts a word into the trie. */\n    void insert(string word) {\n        TrieNode* p = root.get();\n        for (char c : word) {\n            if (!p->children[c - 'a']) {\n                p->children[c - 'a'] = new TrieNode();\n            }\n            p = p->children[c - 'a'];\n        }\n        p->is_word = true;\n    }\n    \n    /** Returns if the word is in the trie. */\n    bool search(string word) {\n        TrieNode* p = find(word);\n        return p && p->is_word;\n    }\n    \n    /** Returns if there is any word in the trie that starts with the given prefix. */\n    bool startsWith(string prefix) {\n        return find(prefix);\n    }\n};\n\n/**\n * Your Trie object will be instantiated and called as such:\n * Trie* obj = new Trie();\n * obj->insert(word);\n * bool param_2 = obj->search(word);\n * bool param_3 = obj->startsWith(prefix);\n */","compare_result":"111111111111111","title_slug":"implement-trie-prefix-tree","has_notes":false,"flag_type":1}