{"id":407505765,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602452363,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/407505765/","is_pending":"Not Pending","title":"Shortest Common Supersequence ","memory":"N/A","code":"class Solution:\n    def shortestCommonSupersequence(self, str1: str, str2: str) -> str:\n        n1, n2 = len(str1), len(str2)\n        dp = [[\"\" for _ in range(n2 + 1)] for _ in range(n1 + 1)]\n        dp[0][0] = \"\"\n        for i in range(1, n1 + 1):\n            dp[i][0] = str1[:i]\n        for j in range(1, n2 + 1):\n            dp[0][j] = str2[:j]\n        \n        # dp[i][j], the shortest string str1[:i] and str2[:j] can form\n        for i in range(1, n1 + 1):\n            for j in range(1, n2 + 1):\n                if str1[i-1] == str2[j-1]:\n                    dp[i][j] = min(dp[i-1][j-1], dp[i][j-1], dp[i-1][j], key = len) + str1[i-1]\n                else:\n                    dp[i][j] = min(dp[i-1][j-1] + str1[i-1] + str2[j-1], dp[i][j-1] + str2[j-1], dp[i-1][j] + str1[i-1], key=len)\n        return dp[-1][-1]","compare_result":"11111111111111111111111111111111111111111111110","title_slug":"shortest-common-supersequence","has_notes":false,"flag_type":1}