{"id":407506269,"lang":"cpp","lang_name":"C++","time":"2 years, 10 months","timestamp":1602452453,"status":10,"status_display":"Accepted","runtime":"380 ms","url":"/submissions/detail/407506269/","is_pending":"Not Pending","title":"Shortest Common Supersequence ","memory":"299.8 MB","code":"class Solution {\npublic:\n    string shortestCommonSupersequence(string& A, string& B) {\n        int i = 0, j = 0;\n        string res = \"\";\n        for (char c : lcs(A, B)) {\n            while (A[i] != c)\n                res += A[i++];\n            while (B[j] != c)\n                res += B[j++];\n            res += c, i++, j++;\n        }\n        return res + A.substr(i) + B.substr(j);\n    }\n\n    string lcs(string& A, string& B) {\n        int n = A.size(), m = B.size();\n        vector<vector<string>> dp(n + 1, vector<string>(m + 1, \"\"));\n        for (int i = 0; i < n; ++i)\n            for (int j = 0; j < m; ++j)\n                if (A[i] == B[j])\n                    dp[i + 1][j + 1] = dp[i][j] + A[i];\n                else\n                    dp[i + 1][j + 1] = dp[i + 1][j].size() > dp[i][j + 1].size() ?  dp[i + 1][j] : dp[i][j + 1];\n        return dp[n][m];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"shortest-common-supersequence","has_notes":false,"flag_type":1}