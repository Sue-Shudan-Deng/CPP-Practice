{"id":398003508,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600549583,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/398003508/","is_pending":"Not Pending","title":"Maximum Sum of Two Non-Overlapping Subarrays","memory":"N/A","code":"class Solution:\n    def maxSumTwoNoOverlap(self, A: List[int], L: int, M: int) -> int:\n        \"\"\"\n        这道题是2道题的结合：prefix_sum, best buy and sell III\n        \"\"\"\n        n, K = len(A), 2\n        prefix = [0 for _ in range(n+1)]\n        for i in range(1, len(A)+1):\n            prefix[i] = prefix[i-1] + A[i-1]\n        dp = [0 for _ in range(n+1)]\n        \n        for i in range(1, n+1):\n            dp[i] = max(dp[i], dp[i-1])\n            if i >= L:\n                dp[i] = max(dp[i], prefix[i] - prefix[i-L])\n        for i in range(1, n+1):\n            dp[i] = max(dp[i], dp[i-1])\n            if i > M:\n                dp[i] = max(dp[i], dp[i-M-1] + prefix[i] - prefix[i-M])\n        return dp[-1]","compare_result":"011100010100000000000000000000000100000001000000000","title_slug":"maximum-sum-of-two-non-overlapping-subarrays","has_notes":false,"flag_type":1}