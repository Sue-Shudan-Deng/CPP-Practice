{"id":398008848,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600550663,"status":10,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/398008848/","is_pending":"Not Pending","title":"Maximum Sum of Two Non-Overlapping Subarrays","memory":"13.9 MB","code":"class Solution:\n    def maxSumTwoNoOverlap(self, A: List[int], L: int, M: int) -> int:\n        \"\"\"\n        这道题是2道题的结合：prefix_sum, best buy and sell III\n        \"\"\"\n        n, K = len(A), 2\n        prefix = [0 for _ in range(n+1)]\n        for i in range(1, len(A)+1):\n            prefix[i] = prefix[i-1] + A[i-1]\n        dp = [[0 for _ in range(n+1)] for _ in range(K)]\n        # L is before M\n        for i in range(1, n+1):\n            dp[0][i] = dp[0][i-1]\n            if i >= L:\n                dp[0][i] = max(dp[0][i], prefix[i] - prefix[i-L])\n        for i in range(1, n+1):\n            dp[1][i] = dp[1][i-1]\n            if i > M:\n                dp[1][i] = max(dp[1][i], dp[0][i-M] + prefix[i] - prefix[i-M])\n        res1 = dp[1][-1]\n        # M is before L\n        dp = [[0 for _ in range(n+1)] for _ in range(K)]\n        for i in range(1, n+1):\n            dp[0][i] = dp[0][i-1]\n            if i >= M:\n                dp[0][i] = max(dp[0][i], prefix[i] - prefix[i-M])\n                \n        for i in range(1, n+1):\n            dp[1][i] = dp[1][i-1]\n            if i > L:\n                dp[1][i] = max(dp[1][i], dp[0][i-L] + prefix[i] - prefix[i-L])\n        res2 = dp[1][-1]\n        return max(res1, res2)","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-of-two-non-overlapping-subarrays","has_notes":false,"flag_type":1}