{"id":390695489,"lang":"python3","lang_name":"Python3","time":"3 years","timestamp":1599179662,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/390695489/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"13.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\n# class Solution:\n#     def preorderTraversal(self, root: TreeNode) -> List[int]:\n#         if root == None:\n#             return []\n#         else:\n#             rootnode = [root.val]\n#             leftnode = self.preorderTraversal(root.left)\n#             rightnode = self.preorderTraversal(root.right)\n#             return rootnode + leftnode + rightnode\n\nclass Solution:\n    def preorderTraversal(self, root: TreeNode) -> List[int]:\n        if root is None:\n            return []\n        else:\n            stack = [root]\n            res = []\n            while stack:\n                curr = stack.pop()\n                res.append(curr.val)\n                # 注意：对所有孩子结点均逆序入栈\n                if curr.right:\n                    stack.append(curr.right)\n                if curr.left:\n                    stack.append(curr.left)\n        return res","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false,"flag_type":1}