{"id":390679254,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1599176248,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/390679254/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"10.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\n// Recursion\n\nclass Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode* root) {\n        vector<int> ret;\n        if (root == nullptr) {\n            return ret;\n        } else if (root->left == nullptr && root->right == nullptr) {\n            ret.push_back(root->val);\n            return ret;\n        } else {\n            ret.push_back(root->val);\n            vector<int> v1 = preorderTraversal(root->left);\n            vector<int> v2 = preorderTraversal(root->right);\n            ret.insert(ret.end(), v1.begin(), v1.end());\n            ret.insert(ret.end(), v2.begin(), v2.end());\n            return ret;\n        }\n    }\n};\n\n// // Interation\n\n// class Solution {\n// public:\n//     vector<int> preorderTraversal(TreeNode* root) {\n//         if (root == nullptr) {\n//             vector<int> ret;\n//             return ret;\n//         } else {\n            \n//         }\n        \n        \n        \n\n//         return ret;\n//     }\n// };\n\n\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false,"flag_type":1}