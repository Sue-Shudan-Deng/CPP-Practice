{"id":292464381,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1578521861,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/292464381/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"12.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def preorderTraversal(self, root: TreeNode) -> List[int]:\n        if root == None:\n            return []\n        elif root.left == None and root.right == None:\n            return [root.val]\n        else:\n            rootnode = [root.val]\n            leftnode = self.preorderTraversal(root.left)\n            rightnode = self.preorderTraversal(root.right)\n            return rootnode + leftnode + rightnode ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false,"flag_type":1}