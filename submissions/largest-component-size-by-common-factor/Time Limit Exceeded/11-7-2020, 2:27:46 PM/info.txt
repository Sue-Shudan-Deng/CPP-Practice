{"id":417855359,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604788066,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/417855359/","is_pending":"Not Pending","title":"Largest Component Size by Common Factor","memory":"N/A","code":"class Solution:\n    def largestComponentSize(self, A: List[int]) -> int:\n        parent = {a:a for a in A}\n        size = {a: 1 for a in A}\n        def find(x):\n            if x != parent[x]:\n                parent[x] = find(parent[x])\n            return parent[x]\n        \n        def union(x, y):\n            px, py = find(x), find(y)\n            if px == py:\n                return\n            if size[px] < size[py]:\n                px, py = py, px\n            parent[py] = px\n            size[px] += size[py]\n            \n        def gcd(x, y):\n            if y == 0: \n                return x \n            else: \n                return gcd(y, x % y)\n            \n        n = len(A)\n        for i in range(n):\n            for j in range(i+1, n):\n                if gcd(A[i], A[j]) > 1:\n                    union(A[i], A[j])\n                    \n        return max(size.values())","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000","title_slug":"largest-component-size-by-common-factor","has_notes":false,"flag_type":1}