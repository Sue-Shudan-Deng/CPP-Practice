{"id":399560681,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600842370,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/399560681/","is_pending":"Not Pending","title":"Android Unlock Patterns","memory":"N/A","code":"class Solution:\n    def numberOfPatterns(self, m: int, n: int) -> int:\n        res, visited = 0, [False for _ in range(9)]\n        \n        def isValid(index, last_index):\n            if visited[index]:\n                return False\n            if last_index == -1:\n                return True     \n            if (index + last_index) % 2 == 1:\n                return True \n            mid = (index + last_index) // 2\n            if mid == 4:\n                return visited[mid]\n            if index % 3 != last % 3 and index // 3 != last // 3:\n                return True\n            return visited[mid]\n        \n        def dfs(length, last_index):\n            if length == 0:\n                return 1\n            summ = 0\n            for i in range(9):\n                if isValid(i, last_index):\n                    visited[i] = True\n                    summ += dfs(length - 1, i)\n                    visited[i] = False\n            return summ\n        \n        for i in range(m, n + 1):\n            res += dfs(i, -1)\n            visited = [False for _ in range(n)]\n        return res","compare_result":"100000000000000000000000","title_slug":"android-unlock-patterns","has_notes":false,"flag_type":1}