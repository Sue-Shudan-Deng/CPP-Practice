{"id":394725226,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1599939243,"status":10,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/394725226/","is_pending":"Not Pending","title":"Number of Islands","memory":"10.1 MB","code":"class Solution {\n    \nprivate:\n    int row;\n    int col;\n    set<pair<int, int>> visited;\n    vector<pair<int, int>> ds = vector<pair<int, int>>{{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\n    \n    void bfs(vector<vector<char>>& grid, int r, int c) {\n        deque<pair<int, int>> q;\n        grid[r][c] = '0';\n        q.emplace_back(r, c);\n        while (!q.empty()) {\n            int size = q.size();\n            for (int i = 0; i < size; ++i) {\n                auto [r, c] = q.front();\n                q.pop_front();\n                for (auto d : ds) {\n                    auto [d1, d2] = d;\n                    int nr = r + d1;\n                    int nc = c + d2;\n                    if (nr >= 0 && nr < row && nc >= 0 && nc < col && grid[nr][nc] == '1') {\n                        q.emplace_back(nr, nc);\n                        grid[nr][nc] = '0';\n                    }\n                }   \n            }\n        }\n    }\n    \n    void dfs(vector<vector<char>>& grid, int r, int c) {\n        stack<pair<int, int>> s;\n        grid[r][c] = '0';\n        s.emplace(r, c);\n        while (!s.empty()) {\n            auto [r, c] = s.top();\n            s.pop();\n            for (auto d : ds) {\n                auto [d1, d2] = d;\n                int nr = r + d1;\n                int nc = c + d2;\n                if (nr >= 0 && nr < row && nc >= 0 && nc < col && grid[nr][nc] == '1') {\n                    s.emplace(nr, nc);\n                    grid[nr][nc] = '0';\n                } \n            }\n        }\n    }\n    \n    \npublic:\n    int numIslands(vector<vector<char>>& grid) {\n        if (grid.empty()) return 0;\n        row = grid.size();\n        col = grid[0].size();\n        int cnt = 0;\n        \n        for (int r = 0; r < row; ++r) {\n            for (int c = 0; c < col; ++c) {\n                if (grid[r][c] == '1') {\n                    // bfs(grid, r, c);\n                    dfs(grid, r, c);\n                    cnt += 1;\n                }\n            }\n        }\n        return cnt;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false,"flag_type":1}