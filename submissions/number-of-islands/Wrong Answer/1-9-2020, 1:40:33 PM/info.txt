{"id":292762019,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1578606033,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/292762019/","is_pending":"Not Pending","title":"Number of Islands","memory":"N/A","code":"from collections import deque\nclass Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        if grid == []:\n            return 0\n        row = len(grid)\n        column = len(grid[0])\n        queue = deque()\n        directions = [(0,1), (0,-1), (1,0), (-1,0)]\n        count = 0\n        \n        for r in range(row):\n            for c in range(column):\n                if grid[r][c] == \"1\":\n                    grid[r][c] = \"0\"\n                    count += 1   \n                    queue = deque([(r,c)])\n                    while queue:\n                        new_r, new_c = queue.popleft()\n                        for d in range(len(directions)):\n                            new_r += directions[d][0]\n                            new_c += directions[d][1] \n                            if not (new_r < 0 or new_r >= row or new_c < 0 or new_c >= column \\\n                            or grid[new_r][new_c] == \"0\"):\n                                grid[new_r][new_c] = \"0\"\n                                queue.append((new_r, new_c))\n        return count","compare_result":"11111111111111111101101111111111010100000000101","title_slug":"number-of-islands","has_notes":false,"flag_type":1}