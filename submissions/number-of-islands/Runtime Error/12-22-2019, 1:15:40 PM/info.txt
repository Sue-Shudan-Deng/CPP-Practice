{"id":287818528,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1577049340,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/287818528/","is_pending":"Not Pending","title":"Number of Islands","memory":"N/A","code":"from typing import List\nclass Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        num_islands = 0\n        nr = len(grid)\n        nc = len(grid[0])\n        if nr == 0 or nc == 0:\n        \treturn 0\n        for r in range(nr):\n        \tfor c in range(nc):\n        \t\tif grid[r][c] == \"1\":\n        \t\t\tnum_islands += 1\n        \t\t\tself.dfs(grid, r, c)\n        return num_islands\n\n    def dfs(self, grid: List[List[str]], r: int, c: int):\n    \tnr = len(grid)\n    \tnc = len(grid[0])\n    \tgrid[r][c] = \"0\"\n    \tif r-1 >= 0 and grid[r-1][c] == \"1\":\n    \t\tself.dfs(grid, r-1, c)\n    \tif r+1 < nr and grid[r+1][c] == \"1\":\n    \t\tself.dfs(grid, r+1, c)\n    \tif c-1 >= 0 and grid[r][c-1] == \"1\":\n    \t\tself.dfs(grid, r, c-1)\n    \tif c+1 < nc and grid[r][c+1] == \"1\":\n    \t\tself.dfs(grid, r, c+1)","compare_result":"11000000000000000000000000000000000000000000000","title_slug":"number-of-islands","has_notes":false,"flag_type":1}