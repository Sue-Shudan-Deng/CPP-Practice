{"id":407070369,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602365941,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/407070369/","is_pending":"Not Pending","title":"Delete and Earn","memory":"N/A","code":"class Solution:\n    def deleteAndEarn(self, nums: List[int]) -> int:\n        counter = collections.Counter(nums)\n        dp = {}  # max value we can get with current number\n        last, prevlast = -1, -1\n        for k, num in enumerate(sorted(counter)):\n            if num == last + 1:\n                dp[num] = counter[num] * num + dp.get(prevlast, 0)\n            else:\n                dp[num] = counter[num] * num + dp.get(last, 0)\n            prevlast = last\n            last = num\n        return max(dp.values())","compare_result":"1100000000000000000000000000000000000000000000","title_slug":"delete-and-earn","has_notes":false,"flag_type":1}