{"id":418168232,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604861863,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/418168232/","is_pending":"Not Pending","title":"Delete and Earn","memory":"14.5 MB","code":"class Solution:\n    def deleteAndEarn(self, nums: List[int]) -> int:\n        if nums == []:\n            return 0\n        counter = collections.Counter(nums)\n        dp = collections.defaultdict(int)  # max value we can get with current number so far\n        last, prevlast = -1, -1\n        for k, num in enumerate(sorted(counter)):\n            if num == last + 1:\n                dp[num] = max(counter[num] * num + dp[prevlast], dp[last])\n            else:\n                dp[num] = counter[num] * num + dp[last]\n            prevlast = last\n            last = num\n        return max(dp.values())","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"delete-and-earn","has_notes":false,"flag_type":1}