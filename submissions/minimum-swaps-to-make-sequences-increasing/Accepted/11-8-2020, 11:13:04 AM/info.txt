{"id":418172833,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604862784,"status":10,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/418172833/","is_pending":"Not Pending","title":"Minimum Swaps To Make Sequences Increasing","memory":"14.5 MB","code":"class Solution:\n    def minSwap(self, A: List[int], B: List[int]) -> int:\n        n = len(A)\n        dp = [[float(\"inf\") for _ in range(2)] for _ in range(n)]\n        # dp[i][0] keep i\n        # dp[i-1][0] swap i-1\n        \n        dp[0][0] = 0 # 因为第一个无论是谁总是可以不换的 \n        dp[0][1] = 1 # 因为第一个无论是谁总是可以交换的\n        \n        for i in range(1, n):\n            if A[i] > A[i-1] and B[i] > B[i-1]:\n                dp[i][0] = dp[i-1][0]     # 保持\n                dp[i][1] = dp[i-1][1] + 1 # 换回来 \n                \n            if B[i] > A[i-1] and A[i] > B[i-1]:\n                dp[i][0] = min(dp[i][0], dp[i-1][1]) \n                dp[i][1] = min(dp[i][1], dp[i-1][0] + 1)\n                \n        return min(dp[-1])","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-swaps-to-make-sequences-increasing","has_notes":false,"flag_type":1}