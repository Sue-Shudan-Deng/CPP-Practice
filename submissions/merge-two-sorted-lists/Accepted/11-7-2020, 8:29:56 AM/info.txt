{"id":417765950,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604766596,"status":10,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/417765950/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.2 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n    \nclass Solution:\n    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:\n        \"\"\"\n        双指针\n        \"\"\"\n        prehead = ListNode(-1)  # dummy head\n        merged = prehead\n        \n        while l1 and l2:\n            if l1.val <= l2.val:\n                merged.next = ListNode(l1.val)\n                l1 = l1.next\n            else:\n                merged.next = ListNode(l2.val)\n                l2 = l2.next\n            merged = merged.next\n        \n        merged.next = l1 if l1 else l2\n        return prehead.next\n\nclass Solution:\n    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:\n        \"\"\"\n        Recursion，思维也太巧妙了\n        \"\"\"\n        if not l1:\n            return l2\n        if not l2:\n            return l1\n        if l1.val <= l2.val:\n            l1.next = self.mergeTwoLists(l1.next, l2)\n            return l1\n        else:\n            l2.next = self.mergeTwoLists(l1, l2.next)\n            return l2","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}