{"id":293119178,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1578716102,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/293119178/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"12.8 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:\n        \"\"\"\n        双指针, 最直接的版本\n        \"\"\"\n        first = l1\n        second = l2\n        tail = None\n        head = None\n        \n        while first and second:\n            if first.val <= second.val:\n                if tail:\n                    tail.next = ListNode(first.val)\n                    tail = tail.next\n                else:\n                    tail = ListNode(first.val)\n                    head = tail\n                first = first.next\n            else:\n                if tail:\n                    tail.next = ListNode(second.val)\n                    tail = tail.next\n                else:\n                    tail = ListNode(second.val)\n                    head = tail\n                second = second.next\n        \n        while not second and first:\n            if tail:\n                tail.next = ListNode(first.val)\n                tail = tail.next\n            else:\n                tail = ListNode(first.val)\n                head = tail\n            first = first.next\n        \n        while not first and second:\n            if tail:\n                tail.next = ListNode(second.val)\n                tail = tail.next\n            else:\n                tail = ListNode(second.val)\n                head = tail\n            second = second.next\n            \n        return head\n    \nclass Solution:\n    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:\n        \"\"\"\n        双指针，改进版本\n        \"\"\"\n        prehead = ListNode(-1)  # dummy head\n        tail = prehead\n        \n        while l1 and l2:\n            if l1.val <= l2.val:\n                tail.next = ListNode(l1.val)\n                l1 = l1.next\n            else:\n                tail.next = ListNode(l2.val)\n                l2 = l2.next\n            tail = tail.next\n        \n        tail.next = l1 if l1 else l2\n        return prehead.next","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}