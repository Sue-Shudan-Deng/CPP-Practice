{"id":400302168,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600986111,"status":10,"status_display":"Accepted","runtime":"2948 ms","url":"/submissions/detail/400302168/","is_pending":"Not Pending","title":"Strange Printer","memory":"13.9 MB","code":"class Solution:\n    def strangePrinter(self, s: str) -> int:\n        \"\"\"\n        https://leetcode.com/problems/strange-printer/discuss/106810/Java-O(n3)-DP-Solution-with-Explanation-and-Simple-Optimization\n        \"\"\"\n        if s == \"\":\n            return 0\n        n = len(s)\n        dp = [[0 for _ in range(n)] for _ in range(n)]\n        for i in range(n):\n            dp[i][i] = 1\n            if i < n - 1:\n                dp[i][i+1] = 1 if s[i] == s[i+1] else 2\n                \n        for left in range(n-2, -1, -1):\n            for right in range(left+2, n):\n                dp[left][right] = right-left+1  # maximum possible number\n                for k in range(left, right):\n                    if s[k] == s[right]:\n                        tmp = dp[left][k] + dp[k+1][right-1]\n                    else:\n                        tmp = dp[left][k] + dp[k+1][right]\n                    # 这里的意思是，如果s[k] == s[right]，那么k和right可以在同一次操作中被打印出\n                    # 因为dp[right][right] = 1\n                    dp[left][right] = min(dp[left][right], tmp)\n        return dp[0][-1]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"strange-printer","has_notes":false,"flag_type":1}