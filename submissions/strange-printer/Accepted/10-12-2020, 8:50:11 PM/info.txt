{"id":408070808,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602561011,"status":10,"status_display":"Accepted","runtime":"1984 ms","url":"/submissions/detail/408070808/","is_pending":"Not Pending","title":"Strange Printer","memory":"14.2 MB","code":"class Solution:\n    def strangePrinter(self, s: str) -> int:\n        \"\"\"\n        https://leetcode.com/problems/strange-printer/discuss/106810/Java-O(n3)-DP-Solution-with-Explanation-and-Simple-Optimization\n        \"\"\"\n        if s == \"\":\n            return 0\n        n = len(s)\n        dp = [[0 for _ in range(n)] for _ in range(n)]\n        for i in range(n):\n            dp[i][i] = 1\n            if i < n - 1:\n                dp[i][i+1] = 1 if s[i] == s[i+1] else 2\n                \n        for l in range(n-2, -1, -1):\n            for r in range(l+2, n):\n                dp[l][r] = r - l + 1  # maximum possible number\n                for k in range(l, r):\n                    if s[k] == s[r]:\n                        tmp = dp[l][k] + dp[k+1][r-1]  # dp[r][r-1] = 0\n                    else:\n                        tmp = dp[l][k] + dp[k+1][r]\n                    # 这里的意思是，如果s[k] == s[r]，那么k和right可以在同一次操作中被                         打印出, 因为dp[r][r] = 1\n                    dp[l][r] = min(dp[l][r], tmp)\n        return dp[0][-1]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"strange-printer","has_notes":false,"flag_type":1}