{"id":417603154,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604720182,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/417603154/","is_pending":"Not Pending","title":"Subsets","memory":"14.2 MB","code":"class Solution:\n    def subsets(self, nums: List[int]) -> List[List[int]]:\n        ans, n = [], len(nums)\n        def backtrack(first, length, cur):\n            if len(cur) == length:\n                ans.append(cur[:])\n                return\n            for i in range(first, n):\n                backtrack(i + 1, length, cur + [nums[i]])\n        \n        for k in range(n + 1):\n            backtrack(0, k, [])\n        return ans","compare_result":"1111111111","title_slug":"subsets","has_notes":false,"flag_type":1}