{"id":403196028,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1601576544,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/403196028/","is_pending":"Not Pending","title":"Subsets","memory":"14.2 MB","code":"class Solution:\n    def subsets(self, nums: List[int]) -> List[List[int]]:\n        n = len(nums)\n        def backtrack(first, length, cur, ans):\n            if len(cur) == length:\n                ans.append(cur[:])\n                return\n            for i in range(first, n):\n                cur.append(nums[i])\n                backtrack(i + 1, length, cur, ans)\n                cur.pop()\n            \n        ans = []\n        for k in range(n + 1):\n            backtrack(0, k, [], ans)\n        return ans","compare_result":"1111111111","title_slug":"subsets","has_notes":false,"flag_type":1}