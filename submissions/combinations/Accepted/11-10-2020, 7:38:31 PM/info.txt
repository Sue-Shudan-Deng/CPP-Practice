{"id":419040565,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605065911,"status":10,"status_display":"Accepted","runtime":"516 ms","url":"/submissions/detail/419040565/","is_pending":"Not Pending","title":"Combinations","memory":"15.6 MB","code":"class Solution:\n    def combine(self, n: int, k: int) -> List[List[int]]:\n        res = []\n        def backtrack(start: int, ans: List[int]):\n            if len(ans) == k:\n                res.append(ans[:])\n                return\n            for i in range(start, n + 1):\n                backtrack(i+1, ans + [i]) # 回溯\n        backtrack(1, [])\n        return res\n","compare_result":"111111111111111111111111111","title_slug":"combinations","has_notes":false,"flag_type":1}