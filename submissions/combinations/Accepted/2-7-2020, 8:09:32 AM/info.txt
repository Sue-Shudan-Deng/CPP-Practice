{"id":301087410,"lang":"python","lang_name":"Python","time":"3 years, 7 months","timestamp":1581091772,"status":10,"status_display":"Accepted","runtime":"580 ms","url":"/submissions/detail/301087410/","is_pending":"Not Pending","title":"Combinations","memory":"13.4 MB","code":"class Solution(object):\n    def combine(self, n, k):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :rtype: List[List[int]]\n        \"\"\"\n        res = []\n        def bt(fst = 1, curr = []):\n            if len(curr) == k:\n                res.append(curr[:])\n                return \n            for i in range(fst, n + 1):\n                curr.append(i)\n                bt(i + 1, curr)\n                curr.pop()\n        \n        bt()\n        return res\n        ","compare_result":"111111111111111111111111111","title_slug":"combinations","has_notes":false,"flag_type":1}