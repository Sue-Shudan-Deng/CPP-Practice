{"id":307172282,"lang":"python3","lang_name":"Python3","time":"3 years, 6 months","timestamp":1582750041,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/307172282/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"20.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def maxPathSum(self, root: TreeNode) -> int:\n        \"\"\"\n        这道题不太好想，需要反复练习\n        \"\"\"\n        def maxGain(node):\n            nonlocal res\n            if not node:\n                return 0\n            # 0 here means if some path < 0, there is no need to add it on\n            left = max(0, maxGain(node.left))\n            right = max(0, maxGain(node.right))\n            ################\n            res = max(res, node.val + left + right)\n            ################\n            \n            return node.val + max(left, right)\n        res = root.val\n        maxGain(root)\n        return res","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false,"flag_type":1}