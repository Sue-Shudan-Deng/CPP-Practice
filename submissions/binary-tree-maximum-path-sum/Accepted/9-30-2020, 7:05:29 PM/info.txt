{"id":402913669,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1601517929,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/402913669/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"29 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    \nprivate:\n    int ans = INT_MIN;\n    int dfs(TreeNode* root) {\n        // return only one child\n        if (!root) {\n            return 0;\n        }\n        if (!root->left && !root->right) {\n            ans = max(ans, root->val);\n            return root->val;\n        }\n        int l = max(0, dfs(root->left));\n        int r = max(0, dfs(root->right));\n        ans = max(ans, l + r + root->val);\n        return root->val + max(l, r);\n    }\n    \npublic:\n    int maxPathSum(TreeNode* root) {\n        int res = dfs(root);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false,"flag_type":1}