{"id":391125385,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1599266737,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/391125385/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\n// recursion\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        if (!head || !head->next) return head;\n        ListNode* newhead = reverseList(head->next);\n        head->next->next = head;\n        head->next = nullptr;\n        return newhead;\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}