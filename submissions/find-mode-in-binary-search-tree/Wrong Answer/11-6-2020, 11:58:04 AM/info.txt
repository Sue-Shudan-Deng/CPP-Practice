{"id":417508283,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604692684,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/417508283/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def findMode(self, root: TreeNode) -> List[int]:\n        h = collections.defaultdict(int)\n        stack = []\n        while stack or root:\n            while root:\n                stack.append(root)\n                root = root.right\n            root = stack.pop()\n            h[root.val] += 1\n            root = root.right\n        maxfreq = max([v for k, v in h.items()])\n        return [k for k, v in h.items() if v == maxfreq]\n        ","compare_result":"1111000000000000000000000","title_slug":"find-mode-in-binary-search-tree","has_notes":false,"flag_type":1}