{"id":394653059,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1599927277,"status":10,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/394653059/","is_pending":"Not Pending","title":"Walls and Gates","memory":"14.3 MB","code":"class Solution {\n    \n// 模板是什么？能不能用visited? 能不能提前退出？\n// template 2, not, no\n    \npublic:\n    void wallsAndGates(vector<vector<int>>& rooms) {\n        if (rooms.empty()) return;\n        int row = rooms.size();\n        int col = rooms[0].size();\n        deque<pair<int, int>> q;\n        vector<pair<int, int>> ds = vector<pair<int, int>>{{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\n        int cur = 0;\n        \n        for (int r = 0; r < row; ++r) {\n            for (int c = 0; c < col; ++c) {\n                if (rooms[r][c] == 0) {\n                    q.emplace_back(r, c);\n                }\n            }\n        }\n        \n        while (!q.empty()) {\n            ++cur;\n            int size = q.size();\n            for (int i = 0; i < size; ++i) {\n                auto [r, c] = q.front();\n                q.pop_front();\n                for (auto j : ds) {\n                    auto [d1, d2] = j;\n                    int nr = r + d1;\n                    int nc = c + d2;\n                    if (nr >= 0 && nr < row && nc >= 0 && nc < col && rooms[nr][nc] == INT_MAX) {\n                        rooms[nr][nc] = cur;\n                        q.emplace_back(nr, nc);\n                    }\n                }\n            }   \n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"walls-and-gates","has_notes":false,"flag_type":1}