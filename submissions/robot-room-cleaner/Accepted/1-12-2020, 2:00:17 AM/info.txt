{"id":293492532,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1578823217,"status":10,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/293492532/","is_pending":"Not Pending","title":"Robot Room Cleaner","memory":"14.3 MB","code":"# \"\"\"\n# This is the robot's control interface.\n# You should not implement it, or speculate about its implementation\n# \"\"\"\n#class Robot:\n#    def move(self):\n#        \"\"\"\n#        Returns true if the cell in front is open and robot moves into the cell.\n#        Returns false if the cell in front is blocked and robot stays in the current cell.\n#        :rtype bool\n#        \"\"\"\n#\n#    def turnLeft(self):\n#        \"\"\"\n#        Robot will stay in the same cell after calling turnLeft/turnRight.\n#        Each turn will be 90 degrees.\n#        :rtype void\n#        \"\"\"\n#\n#    def turnRight(self):\n#        \"\"\"\n#        Robot will stay in the same cell after calling turnLeft/turnRight.\n#        Each turn will be 90 degrees.\n#        :rtype void\n#        \"\"\"\n#\n#    def clean(self):\n#        \"\"\"\n#        Clean the current cell.\n#        :rtype void\n#        \"\"\"\n\nclass Solution:\n    def cleanRoom(self, robot):\n        \"\"\"\n        :type robot: Robot\n        :rtype: None\n        \"\"\"\n        def go_back():\n            robot.turnRight()\n            robot.turnRight()\n            robot.move()\n            robot.turnRight()\n            robot.turnRight()\n        \n        # 注意：这里的cell是相对坐标系的坐标原点\n        def backtrack(cell = (0, 0), d = 0):\n            visited.add(cell)\n            robot.clean()  # 置位。注意这里置位必须放前面否则最开始原点处cell不会被clean\n            for i in range(4):\n                new_d = (d + i) % 4\n                new_cell = (cell[0] + directions[new_d][0], \\\n                            cell[1] + directions[new_d][1])\n                if not new_cell in visited and robot.move():\n                    backtrack(new_cell, new_d)\n                    go_back()  # 清0\n                robot.turnRight()\n                \n        # 这里应该是有讲究的，必须是顺时针\n        directions = [(0, 1), (1, 0), (0, -1), (-1, 0)]  \n        visited = set()\n        backtrack()\n        \n            \n        \n        ","compare_result":"11111111111111111111111111111","title_slug":"robot-room-cleaner","has_notes":false,"flag_type":1}