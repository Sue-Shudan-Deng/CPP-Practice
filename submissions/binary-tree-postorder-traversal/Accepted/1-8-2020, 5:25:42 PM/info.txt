{"id":292508275,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1578533142,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/292508275/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"12.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\n# 后序遍历是前序遍历交换左右子树之后的倒序\n# class Solution:\n#     def postorderTraversal(self, root: TreeNode) -> List[int]:\n#         if root is None:\n#             return []\n#         else:\n#             stack = [root]\n#             res = []\n#             while stack:\n#                 rootnode = stack.pop()\n#                 res.append(rootnode.val)\n#                 if rootnode.left is not None:\n#                     stack.append(rootnode.left)\n#                 if rootnode.right is not None:\n#                     stack.append(rootnode.right)\n#         return res[::-1]\n    \nclass Solution:\n    def postorderTraversal(self, root: TreeNode) -> List[int]:\n        if root is None:\n            return []\n        else:\n            stack = []\n            res = []\n            curr = root\n            while stack or curr:\n                if curr:\n                    res.append(curr.val)\n                    stack.append(curr.left)\n                    curr = curr.right\n                else:\n                    curr = stack.pop()\n        return res[::-1]","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false,"flag_type":1}