{"id":397931073,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1600536791,"status":10,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/397931073/","is_pending":"Not Pending","title":"Two Sum BSTs","memory":"30.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    \nprivate:\n    set<int> inorder(TreeNode* root, int target) {\n        set<int> res;\n        if (!root) {\n            return res;\n        }\n        stack<TreeNode*> s;\n        while (root || !s.empty()) {\n            while (root) {\n                s.push(root);\n                root = root->left;\n            }\n            root = s.top();\n            s.pop();\n            res.insert(target - root->val);\n            root = root->right;\n        }\n        return res;\n    }\n    \npublic:\n    bool twoSumBSTs(TreeNode* root1, TreeNode* root2, int target) {\n        set<int> inorderTree1 = inorder(root1, target);\n        if (inorderTree1.empty() || !root2) {\n            return false;\n        }\n        stack<TreeNode*> s;\n        while (root2 || !s.empty()) {\n            while (root2) {\n                s.push(root2);\n                root2 = root2->left;\n            }\n            root2 = s.top();\n            s.pop();\n            if (inorderTree1.count(root2->val)) {\n                return true;\n            } \n            root2 = root2->right;\n        }\n        return false;\n    }\n};","compare_result":"111111111111111111","title_slug":"two-sum-bsts","has_notes":false,"flag_type":1}