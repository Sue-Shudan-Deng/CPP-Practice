{"id":311895921,"lang":"python","lang_name":"Python","time":"3 years, 5 months","timestamp":1584048349,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/311895921/","is_pending":"Not Pending","title":"Sort an Array","memory":"N/A","code":"class Solution(object):\n    def sortArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[int]\n        方法一：bottom-up merge sort \n        \"\"\"\n        def merge(nums1, nums2):\n            res = []\n            l, r = 0, 0\n            while l < len(nums1) and r < len(nums2):\n                if nums1[l] < nums2[r]:\n                    res.append(nums1[l])\n                    l += 1\n                else:\n                    res.append(nums2[r])\n                    r += 1\n            res.extend(nums1[l:])\n            res.extend(nums2[r:])\n            return res\n        \n        size = 1\n        while size < len(nums):\n            size *= 2\n            for pos in range(0, len(nums), size):\n                start = pos \n                mid = pos + size // 2\n                end = pos + size\n                nums[start:end] = merge(nums[start:mid], nums[mid:end])\n        return nums\n    \nclass Solution(object):\n    def sortArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[int]\n        方法二：quick sort \n        \"\"\"\n        self.qsort(nums, 0, len(nums) - 1)\n        return nums\n    \n    def qsort(self, nums, lo, hi):\n        if lo < hi:\n            q = self.partition(nums, lo, hi)\n            self.qsort(nums, lo, q)\n            self.qsort(nums, q + 1, hi)\n            \n    def partition(self, nums, lo, hi):\n        pivot = lo\n        lo += 1\n        while True:\n            while lo <= hi and nums[lo] <= nums[pivot]:\n                lo += 1\n            while lo <= hi and nums[hi] >= nums[pivot]:\n                hi -= 1\n            if lo <= hi:\n                nums[lo], nums[hi] = nums[hi], nums[lo]\n            else:\n                break\n        # 返回high点\n        nums[hi], nums[pivot] = nums[pivot], nums[hi]\n        return hi","compare_result":"1000000000","title_slug":"sort-an-array","has_notes":false,"flag_type":1}