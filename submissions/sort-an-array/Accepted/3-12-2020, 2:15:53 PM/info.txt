{"id":311893919,"lang":"python","lang_name":"Python","time":"3 years, 5 months","timestamp":1584047753,"status":10,"status_display":"Accepted","runtime":"336 ms","url":"/submissions/detail/311893919/","is_pending":"Not Pending","title":"Sort an Array","memory":"18.1 MB","code":"class Solution(object):\n    def sortArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[int]\n        方法一：bottom-up merge sort \n        \"\"\"\n        def merge(nums1, nums2):\n            res = []\n            l, r = 0, 0\n            while l < len(nums1) and r < len(nums2):\n                if nums1[l] < nums2[r]:\n                    res.append(nums1[l])\n                    l += 1\n                else:\n                    res.append(nums2[r])\n                    r += 1\n            res.extend(nums1[l:])\n            res.extend(nums2[r:])\n            return res\n        \n        size = 1\n        while size < len(nums):\n            size *= 2\n            for pos in range(0, len(nums), size):\n                start = pos \n                mid = pos + size // 2\n                end = pos + size\n                nums[start:end] = merge(nums[start:mid], nums[mid:end])\n        return nums","compare_result":"1111111111","title_slug":"sort-an-array","has_notes":false,"flag_type":1}