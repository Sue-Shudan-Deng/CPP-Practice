{"id":402986775,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1601530597,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/402986775/","is_pending":"Not Pending","title":"Find the Duplicate Number","memory":"16.4 MB","code":"class Solution:\n    def findDuplicate(self, nums: List[int]) -> int:\n        l, r = 1, len(nums) - 1\n        # [3,1,3,4,2]\n        while l < r:\n            m = l + (r - l) // 2\n            cnt = 0\n            for i in nums:\n                if i <= m:\n                    cnt += 1\n            # 注：其实跟TemplateII里面的find bad version的做法是一样的  \n            # 比如[1,2,3,3,3,4,5,6] => True, True, False, False,....,False\n            if m < cnt:\n                # (i.e. cnt >= m + 1):\n                r = m\n            else:\n                l = m + 1\n        return l","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"find-the-duplicate-number","has_notes":false,"flag_type":1}