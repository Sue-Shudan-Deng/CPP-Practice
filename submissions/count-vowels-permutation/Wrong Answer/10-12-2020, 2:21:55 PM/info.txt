{"id":407948172,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602537715,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/407948172/","is_pending":"Not Pending","title":"Count Vowels Permutation","memory":"N/A","code":"class Solution:\n    def countVowelPermutation(self, n: int) -> int:\n        \"\"\"\n        没看出和knight dialer 935有啥区别\n        \"\"\"\n        mapping = {\"a\": [\"e\"], \"e\": [\"a\", \"i\"], \"i\": [\"a\", \"e\", \"o\", \"u\"], \n                  \"o\": [\"i\", \"u\"], \"u\": [\"a\"]}\n        vowels = {\"a\":0, \"e\":1, \"i\":2, \"o\":3, \"u\":4}\n        dp = [[0 for _ in range(5)] for _ in range(n + 1)]\n        # dp[i][j]: 长度为i以vowels[j]结尾的有多少个\n        for i in range(1, n + 1):\n            for k, v in mapping.items():\n                if i == 1:\n                    dp[1][vowels[k]] += 1\n                else:\n                    for nei in v:\n                        dp[i][vowels[nei]] += dp[i-1][vowels[k]]\n        return sum(dp[n])","compare_result":"1111101001000000000000000000000000000000000","title_slug":"count-vowels-permutation","has_notes":false,"flag_type":1}