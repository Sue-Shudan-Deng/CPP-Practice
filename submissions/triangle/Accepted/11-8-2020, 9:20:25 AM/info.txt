{"id":418141705,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604856025,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/418141705/","is_pending":"Not Pending","title":"Triangle","memory":"15.4 MB","code":"class Solution:\n    def minimumTotal(self, triangle: List[List[int]]) -> int:\n        \"\"\"\n        dp[k][i] = triangle[k][i] + min(dp[k+1][i], dp[k+1][i+1])\n        \"\"\"\n        n = len(triangle)\n        dp = [[0 for _ in range(n)] for _ in range(n)]\n        dp[-1] = triangle[-1]\n        for k in range(n - 2, -1, -1):\n            for i in range(k + 1):\n                dp[k][i] = triangle[k][i] + min(dp[k+1][i], dp[k+1][i+1])\n        return dp[0][0]","compare_result":"1111111111111111111111111111111111111111111","title_slug":"triangle","has_notes":false,"flag_type":1}