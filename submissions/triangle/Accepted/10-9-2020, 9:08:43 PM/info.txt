{"id":406784553,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1602302923,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/406784553/","is_pending":"Not Pending","title":"Triangle","memory":"8.6 MB","code":"class Solution {\npublic:\n    int minimumTotal(vector<vector<int> > &triangle) {\n        int n = triangle.size();\n        vector<int> minlen(triangle.back());\n        for (int layer = n-2; layer >= 0; layer--) // For each layer\n        {\n            for (int i = 0; i <= layer; i++) // Check its every 'node'\n            {\n                // Find the lesser of its two children, and sum the current value in the triangle with it.\n                minlen[i] = min(minlen[i], minlen[i+1]) + triangle[layer][i]; \n            }\n        }\n        return minlen[0];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111","title_slug":"triangle","has_notes":false,"flag_type":1}