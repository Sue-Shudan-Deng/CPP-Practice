{"id":418603797,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1604962681,"status":10,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/418603797/","is_pending":"Not Pending","title":"Median of Two Sorted Arrays","memory":"14.4 MB","code":"class Solution:\n    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:\n        \"\"\"\n        https://www.youtube.com/watch?v=ScCg9v921ns\n        \"\"\"\n        len1 = len(nums1)\n        len2 = len(nums2)\n        if len1 > len2:\n            # always search in the smaller size array\n            return self.findMedianSortedArrays(nums2, nums1)\n        l, r = 0, len1\n        \n        \"\"\"\n        这道题的难点在于 r = len1 - 1 而不是 r = len1，如果写成后者是错的\n        原因是，这道分界线其实可以划在最后一个元素的后面和最前面一个元素的前面，\n        跟最常规的不能数组越界是不一样的\n        \"\"\"\n        \n        while l <= r:\n            m1 = l + (r - l) // 2            # 该nums1分界线左边的元素有多少个\n            m2 = (len1 + len2 + 1) // 2 - m1 # 该nums2分界线左边的元素有多少个\n            nums1_1 = nums1[m1-1] if m1 > 0 else float(\"-inf\")\n            nums1_2 = nums1[m1] if m1 < len1 else float(\"inf\")\n            nums2_1 = nums2[m2-1] if m2 > 0 else float(\"-inf\")\n            nums2_2 = nums2[m2] if m2 < len2 else float(\"inf\")\n            if nums1_1 > nums2_2:\n                r = m1 - 1\n            elif nums2_1 > nums1_2:\n                l = m1 + 1\n            else:\n                if (len1 + len2) % 2 == 0:\n                    return (max(nums1_1, nums2_1) + min(nums1_2, nums2_2)) / 2\n                else:\n                    return max(nums1_1, nums2_1)","compare_resulttitle_slug":"median-of-two-sorted-arrays","has_notes":false,"flag_type":1}