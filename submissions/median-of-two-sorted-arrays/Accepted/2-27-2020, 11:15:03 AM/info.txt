{"id":307461163,"lang":"python3","lang_name":"Python3","time":"3Â years, 6Â months","timestamp":1582830903,"status":10,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/307461163/","is_pending":"Not Pending","title":"Median of Two Sorted Arrays","memory":"12.8 MB","code":"class Solution:\n    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:\n        \"\"\"\n        http://bit.ly/2YUmy9F\n        \"\"\"\n        n1 = len(nums1)\n        n2 = len(nums2)\n        left = (n1 + n2 + 1) // 2\n        right = (n1 + n2 + 2) // 2\n        \n        def getKthsmallest(nums1, start1, end1, nums2, start2, end2, k):\n            len1 = end1 - start1 + 1\n            len2 = end2 - start2 + 1\n            if len1 > len2:\n                return getKthsmallest(nums2, start2, end2, nums1, start1, end1, k)\n            if len1 == 0:\n                return nums2[start2 + k - 1]\n            if k == 1:\n                return min(nums1[start1], nums2[start2])\n            i = start1 + min(len1, k // 2) - 1\n            j = start2 + min(len2, k // 2) - 1\n            if nums1[i] > nums2[j]:\n                return getKthsmallest(nums1, start1, end1, nums2, j + 1, end2, k  - (j + 1 - start2))\n            else:\n                return getKthsmallest(nums1, i + 1, end1, nums2, start2, end2, k  - (i + 1 - start1))\n        \n        return (getKthsmallest(nums1, 0, n1 - 1, nums2, 0, n2 - 1, left) + getKthsmallest(nums1, 0, n1 - 1, nums2, 0, n2 - 1, right)) / 2\n        ","compare_resulttitle_slug":"median-of-two-sorted-arrays","has_notes":false,"flag_type":1}