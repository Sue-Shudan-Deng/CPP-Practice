{"id":311350329,"lang":"python3","lang_name":"Python3","time":"3 years, 5 months","timestamp":1583888139,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/311350329/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isSubtree(self, s: TreeNode, t: TreeNode) -> bool:\n        \"\"\"\n        方法一：判断是否equal\n        \"\"\"\n        return self.traverse(s, t)\n    \n    def equals(self, s: TreeNode, t: TreeNode) -> bool:\n        \"\"\"\n        一定要记住标准写法！！！！\n        \"\"\"\n        if s == None and t == None:\n            return True\n        if s == None or t == None:\n            return False\n        return s.val == t.val and self.equals(s.left, t.left) \\\n            and self.equals(s.right, t.right)\n    \n    def traverse(self, s: TreeNode, t: TreeNode) -> bool:\n        return s != None and (self.equals(s, t) or self.traverse(s.left, t) or self.traverse(s.right, t))\n    \n    \nclass Solution:\n    def isSubtree(self, s: TreeNode, t: TreeNode) -> bool:\n        \"\"\"\n        方法二：先序遍历\n        \"\"\"\n        s1 = self.preorder(s)\n        s2 = self.preorder(t)\n        return s2 in s1\n        \n    def preorder(self, t: TreeNode) -> str:\n        res = \"\"\n        if not t:\n            return res\n        stack = [t]\n        while stack:\n            t = stack.pop()\n            res += str(t.val) + \" \"\n            if t.right:\n                stack.append(t.right)\n            else:\n                res += \"RNone \"\n            if t.left:\n                stack.append(t.left)\n            else:\n                res += \"LNone \"\n        return res        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101","title_slug":"subtree-of-another-tree","has_notes":false,"flag_type":1}