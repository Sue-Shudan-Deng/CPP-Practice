{"id":311346676,"lang":"python3","lang_name":"Python3","time":"3 years, 5 months","timestamp":1583887140,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/311346676/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isSubtree(self, s: TreeNode, t: TreeNode) -> bool:\n        \"\"\"\n        方法一：判断是否equal\n        \"\"\"\n        return self.traverse(s, t)\n    \n    def equals(self, s: TreeNode, t: TreeNode) -> bool:\n        \"\"\"\n        一定要记住标准写法！！！！\n        \"\"\"\n        if s.val == None and t.val == None:\n            return True\n        if s.val == None or t.val == None:\n            return False\n        return s.val == t.val and self.equals(s.left, t.left) \\\n            and self.equals(s.right, t.right)\n    \n    def traverse(self, s: TreeNode, t: TreeNode) -> bool:\n        return s != None and (self.equals(s, t) or self.traverse(s.left, t) or self.traverse(s.right, t))","compare_result":"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"subtree-of-another-tree","has_notes":false,"flag_type":1}