{"id":417247115,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604626633,"status":10,"status_display":"Accepted","runtime":"256 ms","url":"/submissions/detail/417247115/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"14.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isSubtree(self, s: TreeNode, t: TreeNode) -> bool:\n        \"\"\"\n        方法一：判断是否equal\n        \"\"\"\n        return s and (self.equals(s, t) or self.isSubtree(s.left, t) or self.isSubtree(s.right, t))\n    \n    def equals(self, s: TreeNode, t: TreeNode) -> bool:\n        \"\"\"\n        一定要记住标准写法！！！！\n        \"\"\"\n        if s == None and t == None:\n            return True\n        if s == None or t == None:\n            return False\n        return s.val == t.val and self.equals(s.left, t.left) \\\n            and self.equals(s.right, t.right)","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree","has_notes":false,"flag_type":1}