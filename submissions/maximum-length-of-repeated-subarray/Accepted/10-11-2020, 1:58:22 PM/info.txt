{"id":407492198,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602449902,"status":10,"status_display":"Accepted","runtime":"3628 ms","url":"/submissions/detail/407492198/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"40 MB","code":"class Solution:\n    def findLength(self, A: List[int], B: List[int]) -> int:\n        nA, nB = len(A), len(B)\n        dp = [[0 for _ in range(nB + 1)] for _ in range(nA + 1)]\n        for i in range(1, nA + 1):\n            for j in range(1, nB + 1):\n                if A[i-1] == B[j-1]:\n                    dp[i][j] = dp[i-1][j-1] + 1\n        return max([max(i) for i in dp])","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray","has_notes":false,"flag_type":1}