{"id":419286973,"lang":"python","lang_name":"Python","time":"2 years, 9 months","timestamp":1605124947,"status":10,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/419286973/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"14.2 MB","code":"class Solution(object):\n    def partition(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: List[List[str]]\n        \"\"\"\n        n = len(s)\n        dp = [[False for _ in range(n)] for _ in range(n)]\n        ans = []\n        def dfs(start, cur):\n            if start == n:\n                ans.append(cur[:])\n                return\n            for idx in range(start, n):\n                if s[start] == s[idx] and (idx-start <= 2 or dp[start+1][idx-1]):\n                    dp[start][idx] = True\n                    dfs(idx + 1, cur + [s[start:idx+1]])\n                    \n        dfs(0, [])\n        return ans","compare_result":"1111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false,"flag_type":1}