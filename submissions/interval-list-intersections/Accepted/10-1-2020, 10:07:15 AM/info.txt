{"id":403169946,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1601572035,"status":10,"status_display":"Accepted","runtime":"144 ms","url":"/submissions/detail/403169946/","is_pending":"Not Pending","title":"Interval List Intersections","memory":"14.6 MB","code":"class Solution:\n    def intervalIntersection(self, A: List[List[int]], B: List[List[int]]) -> List[List[int]]:\n        i, j = 0, 0\n        nA, nB = len(A), len(B)\n        ans = []\n        while i < nA and j < nB:\n            l = max(A[i][0], B[j][0])\n            r = min(A[i][1], B[j][1])\n            if l <= r:\n                ans.append([l, r])\n            if A[i][1] < B[j][1]:\n                i += 1\n            else:\n                j += 1\n                \n        return ans","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"interval-list-intersections","has_notes":false,"flag_type":1}