{"id":419620924,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605205551,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/419620924/","is_pending":"Not Pending","title":"Shortest Path Visiting All Nodes","memory":"N/A","code":"class Solution:\n    def shortestPathLength(self, graph: List[List[int]]) -> int:\n        n, queue = len(graph), collections.deque()\n        ans, steps = 1 << n - 1, 0\n        visited = [[0 for _ in range(1 << n)] for _ in range(n)]\n        \n        for i in range(n):\n            queue.append((i, 1 << i))\n            \n        while queue:\n            cur, state = queue.popleft()\n            if state == ans:\n                return steps + 1\n            if visited[cur][state]:\n                continue\n            visited[cur][state] = 1\n            for nei in graph[cur]:\n                queue.append((nei, state | (1 << nei)))\n            steps += 1\n            \n        return -1","compare_result":"1000000100000001000110000000100000000000000000","title_slug":"shortest-path-visiting-all-nodes","has_notes":false,"flag_type":1}