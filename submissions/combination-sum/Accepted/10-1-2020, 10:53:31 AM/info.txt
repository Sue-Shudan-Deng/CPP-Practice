{"id":403185974,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1601574811,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/403185974/","is_pending":"Not Pending","title":"Combination Sum","memory":"14.2 MB","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n        dp = [[] for _ in range(target + 1)]\n        for can in candidates:\n            for i in range(can, target + 1):\n                if i == can:\n                    dp[i].append([can])\n                else:\n                    for comb in dp[i - can]:\n                        dp[i].append(comb + [can])\n        return dp[target]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}