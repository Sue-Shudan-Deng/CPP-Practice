{"id":406699757,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1602280182,"status":10,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/406699757/","is_pending":"Not Pending","title":"Best Time to Buy and Sell Stock IV","memory":"15.1 MB","code":"class Solution:\n    def maxProfit(self, K: int, prices: List[int]) -> int:\n        n = len(prices)\n        # solve special cases\n        if not prices or K == 0:\n            return 0\n        if 2*K > n:\n            res = 0\n            for i, j in zip(prices[1:], prices[:-1]):\n                res += max(0, i - j)\n            return res\n        dp = [[0 for _ in range(n + 1)] for _ in range(K + 1)]\n        \"\"\"\n        dp[k][i] = max(dp[k][i-1], max(dp[k-1][j] + prices[i] - prices[j] for j in range(0, i-1))\n        \"\"\"\n        for k in range(1, K+1):\n            tmp = float(\"-inf\")\n            for i in range(1, n+1):\n                dp[k][i] = max(dp[k][i-1], prices[i-1] + tmp)\n                tmp = max(tmp, dp[k-1][i] - prices[i-1])\n        return dp[-1][-1]","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"best-time-to-buy-and-sell-stock-iv","has_notes":false,"flag_type":1}