{"id":394766672,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1599945899,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/394766672/","is_pending":"Not Pending","title":"Unique Paths","memory":"6.6 MB","code":"class Solution {\n    \nprivate:\n    map<pair<int, int>, int> mem;\npublic:\n    // recursion with mem\n    // int uniquePaths(int m, int n) {\n    //     if (m == 0 || n == 0) {\n    //         return 0;\n    //     }\n    //     if (m == 1 && n == 1) {\n    //         return 1;\n    //     }\n    //     if (mem.find(pair<int, int>{m, n}) == mem.end()) {\n    //         mem[pair<int, int>{m, n}] = uniquePaths(m-1, n) + uniquePaths(m, n-1);\n    //     }\n    //     return mem[pair<int, int>{m, n}];\n    // }\n    \n    // DP\n    int uniquePaths(int m, int n) {\n        vector<vector<int>> DP(m+1, vector<int>(n+1, 0));\n        DP[1][1] = 1;\n        for (int i = 1; i <= m; ++i) {\n            for (int j = 1; j <= n; ++j) {\n                if (!(i == 1 && j == 1)) {\n                    DP[i][j] = DP[i-1][j] + DP[i][j-1];    \n                }\n            }\n        }\n        return DP[m][n];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-paths","has_notes":false,"flag_type":1}