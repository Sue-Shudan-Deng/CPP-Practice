{"id":307486768,"lang":"python3","lang_name":"Python3","time":"3Â years, 6Â months","timestamp":1582837783,"status":10,"status_display":"Accepted","runtime":"1060 ms","url":"/submissions/detail/307486768/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"12.7 MB","code":"class Solution:\n    def longestPalindrome(self, s: str) -> str:\n        \"\"\"\n        expand from center\n        \"\"\"\n        def getlen(l, r):\n            while l >= 0 and r <= len(s) - 1 and s[l] == s[r]:\n                l -= 1\n                r += 1\n            return r - l + 1, l + 1, r - 1 \n        \n        start, end, oldmax = 0, 0, 0\n        for i in range(len(s)):\n            len1, l1, r1 = getlen(i, i)\n            len2, l2, r2 = getlen(i, i + 1)\n            newmax = max(len1, len2)\n            if newmax > oldmax:\n                if len1 > len2:\n                    start, end = l1, r1\n                else:\n                    start, end = l2, r2\n                oldmax = newmax\n        return s[start: end + 1]","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}