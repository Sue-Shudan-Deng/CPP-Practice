{"id":287807438,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1577045604,"status":10,"status_display":"Accepted","runtime":"920 ms","url":"/submissions/detail/287807438/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"12.7 MB","code":"class Solution:\n    def longestPalindrome(self, s: str) -> str:\n        if s == \"\":\n            return s\n        start = 0\n        end = 0\n        max_strlength = 1 \n        for i in range(len(s)):\n            len1 = self.expandAroundCenter(s, i, i)\n            len2 = self.expandAroundCenter(s, i, i+1)\n            max_len = max(len1, len2)\n            if max_len > max_strlength:\n                max_strlength = max_len\n                start = i - (max_len-1) // 2\n                end = i + max_len // 2\n        return s[start:end+1]\n\n    def expandAroundCenter(self, s: str, left: int, right: int) -> int:\n        while left >= 0 and right < len(s) and s[left] == s[right]:\n            left  -= 1\n            right += 1\n        return right - left - 1;\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}