{"id":287802535,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1577044023,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/287802535/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution:\n    def P(self, s: str) -> str:\n        if self.P_store.get(s) == None:\n            if len(s) <= 2:\n                self.P_store[s] = s[0] == s[-1]\n            else:\n                self.P_store[s] = self.P(s[1:-1]) and s[0] == s[-1]\n        return self.P_store[s]\n\n    def longestPalindrome(self, s: str) -> str:\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        if s == \"\":\n            return s\n        self.P_store = dict()\n        length = 0\n        ans = s[0]\n        for i in range(len(s)):\n            for j in range(len(s)-1, i, -1):\n                s_bar = s[i:j+1]\n                if self.P(s_bar) and j - i > length:\n                    length = j - i\n                    ans = s_bar\n        return ans\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}