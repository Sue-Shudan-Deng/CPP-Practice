{"id":398505079,"lang":"cpp","lang_name":"C++","time":"2Â years, 11Â months","timestamp":1600645121,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/398505079/","is_pending":"Not Pending","title":"Missing Ranges","memory":"7 MB","code":"class Solution {\n    \nprivate:\n    string generate_range(int lower, int upper) {\n        if (lower == upper) {\n            return to_string(lower);\n        } else {\n            return to_string(lower) + \"->\" + to_string(upper);\n        }\n    }\n    \npublic:\n    vector<string> findMissingRanges(vector<int>& nums, int lower, int upper) {\n        vector<string> res;\n        int n = nums.size();\n        if (n == 0) {\n            res.push_back(generate_range(lower, upper));\n            return res;\n        }\n        char cur;\n        if (lower < nums[0]) {\n            res.push_back(generate_range(lower, nums[0]-1));\n        }\n        for (int i = 1; i < n; ++i) {\n            if (nums[i] > lower && nums[i] > nums[i-1]+1) {\n                res.push_back(generate_range(nums[i-1]+1, nums[i]-1));\n            }\n        }\n        if (upper > nums.back()) {\n            res.push_back(generate_range(nums.back()+1, upper));\n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111","title_slug":"missing-ranges","has_notes":false,"flag_type":1}