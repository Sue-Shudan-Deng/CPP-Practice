{"id":293213540,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1578753977,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/293213540/","is_pending":"Not Pending","title":"Search a 2D Matrix II","memory":"N/A","code":"class Solution:\n    def searchMatrix(self, matrix, target):\n        \"\"\"\n        :type matrix: List[List[int]]\n        :type target: int\n        :rtype: bool\n        首先是最显然的做法: 把整个矩阵看作势能场，那么就从山腰处开始搜索\n        之所以从山腰是因为两个方向分别是上下，不像山顶或山底一定是下/上\n        答案选用的是左下，那么这里选择右上的点实现\n        \"\"\"\n        row = len(matrix)\n        col = len(matrix[0])\n        r, c = 0, col - 1\n        \n        while r < row and c >= 0: \n            if matrix[r][c] < target:\n                r += 1\n            elif matrix[r][c] > target:\n                c -= 1\n            else:\n                return True\n        return False\n        \n        \n        \n        ","compare_result":"110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-a-2d-matrix-ii","has_notes":false,"flag_type":1}