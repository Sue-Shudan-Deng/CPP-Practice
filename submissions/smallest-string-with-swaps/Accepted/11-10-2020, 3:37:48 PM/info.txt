{"id":418977612,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605051468,"status":10,"status_display":"Accepted","runtime":"1268 ms","url":"/submissions/detail/418977612/","is_pending":"Not Pending","title":"Smallest String With Swaps","memory":"50.9 MB","code":"class Solution:\n    def smallestStringWithSwaps(self, s: str, pairs: List[List[int]]) -> str:\n        \"\"\"\n        method 1: BFS, TLE\n        \"\"\"\n        # pairs = [[i[1], i[0]] if i[0] > i[1] else i for i in pairs]\n        # pairs = list(set(map(tuple, pairs)))\n        # queue = collections.deque([s])\n        # ans = s\n        # visited = set()\n        # while queue:\n        #     cur = queue.popleft()\n        #     if cur in visited:\n        #         continue\n        #     visited.add(cur)\n        #     ans = min(ans, cur) \n        #     for i, j in pairs:\n        #         queue.append(cur[:i] + cur[j] + cur[i+1:j] + cur[i] + cur[j+1:])\n        # return ans\n        \n        \"\"\"\n        method 2: Union Find\n        \"\"\"\n        n = len(s)\n        parent = [i for i in range(n)]\n        def find(x):\n            if x != parent[x]:\n                parent[x] = find(parent[x])\n            return parent[x]\n        \n        def Union(x, y):\n            px = find(x)\n            py = find(y)\n            if px == py:\n                return\n            parent[px] = py\n            \n        for u, v in pairs:\n            Union(u, v)\n            \n        clique = collections.defaultdict(list)\n        for i in range(n):\n            clique[find(i)].append(s[i])\n        \n        for k in clique:\n            clique[k].sort()\n        res = \"\"\n        for i in range(n):\n            res += clique[find(i)].pop(0)\n        return res\n        \n            \n        \n\n            \n            \n            ","compare_result":"111111111111111111111111111111111111","title_slug":"smallest-string-with-swaps","has_notes":false,"flag_type":1}