{"id":407855438,"lang":"python","lang_name":"Python","time":"2 years, 10 months","timestamp":1602521874,"status":10,"status_display":"Accepted","runtime":"164 ms","url":"/submissions/detail/407855438/","is_pending":"Not Pending","title":"Partition to K Equal Sum Subsets","memory":"25.3 MB","code":"class Solution(object):\n    def canPartitionKSubsets(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: bool\n        \"\"\"\n        target, rem = divmod(sum(nums), k)\n        if rem or max(nums) > target: return False\n\n        memo = [None] * (1 << len(nums))\n        memo[-1] = True\n        def search(used, todo):\n            if memo[used] is None:\n                targ = (todo - 1) % target + 1\n                memo[used] = any(search(used | (1<<i), todo - num)\n                                 for i, num in enumerate(nums)\n                                 if (used >> i) & 1 == 0 and num <= targ)\n            return memo[used]\n\n        return search(0, target * k)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-to-k-equal-sum-subsets","has_notes":false,"flag_type":1}