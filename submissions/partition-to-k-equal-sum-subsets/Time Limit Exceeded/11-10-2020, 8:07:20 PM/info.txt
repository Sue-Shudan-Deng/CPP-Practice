{"id":419049492,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605067640,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/419049492/","is_pending":"Not Pending","title":"Partition to K Equal Sum Subsets","memory":"N/A","code":"class Solution:\n    def canPartitionKSubsets(self, nums: List[int], k: int) -> bool:\n        n = len(nums)\n        def dfs(idx, groupid, cursum, visited):\n            if groupid == k:\n                return True\n            if cursum == avg:\n                return dfs(0, groupid + 1, 0, visited)\n            if cursum > avg:\n                return False\n            for i in range(idx, n):\n                if visited[i]:\n                    continue\n                visited[i] = True\n                if dfs(i, groupid, cursum + nums[i], visited):\n                    return True\n                visited[i] = False\n            return False\n        \n        if not nums:\n            return False\n        nums = sorted(nums)\n        summ = sum(nums)\n        avg = summ // k\n        if summ != avg * k:\n            return False\n        visited = [False for _ in range(len(nums))]\n        return dfs(0, 1, 0, visited)","compare_result":"11111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"partition-to-k-equal-sum-subsets","has_notes":false,"flag_type":1}