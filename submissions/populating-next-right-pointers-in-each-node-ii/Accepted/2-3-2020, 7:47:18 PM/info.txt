{"id":300055148,"lang":"java","lang_name":"Java","time":"3 years, 7 months","timestamp":1580788038,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/300055148/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node II","memory":"41.1 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node left;\n    public Node right;\n    public Node next;\n\n    public Node() {}\n    \n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, Node _left, Node _right, Node _next) {\n        val = _val;\n        left = _left;\n        right = _right;\n        next = _next;\n    }\n};\n*/\nclass Solution {\n    public Node connect(Node root) {\n        Node orig = root;\n        while (root != null) {\n            Node sentinel = new Node(0), cur = sentinel;\n            while (root != null) {\n                if (root.left != null) {\n                    cur.next = root.left;\n                    cur = cur.next;\n                }\n                if (root.right != null) {\n                    cur.next = root.right;\n                    cur = cur.next;\n                }\n                root = root.next;\n            }\n            root = sentinel.next;\n        }\n        return orig;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"populating-next-right-pointers-in-each-node-ii","has_notes":false,"flag_type":1}