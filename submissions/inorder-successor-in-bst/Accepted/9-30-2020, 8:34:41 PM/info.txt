{"id":402942433,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1601523281,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/402942433/","is_pending":"Not Pending","title":"Inorder Successor in BST","memory":"23.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    // 下面的解法适用于任何二叉树\n    // BST有更简单的做法\n    // TreeNode* inorderSuccessor(TreeNode* root, TreeNode* p) {\n    //     TreeNode* last(nullptr);\n    //     stack<TreeNode*> s;\n    //     while (root || !s.empty()) {\n    //         while (root) {\n    //             s.push(root);\n    //             root = root->left;\n    //         }\n    //         root = s.top();\n    //         s.pop();\n    //         if (last == p) {\n    //             return root;\n    //         }\n    //         last = root;\n    //         root = root->right;\n    //     }\n    //     return nullptr;\n    // }\n    TreeNode* inorderSuccessor(TreeNode* root, TreeNode* p) {\n        TreeNode* hot_ = nullptr;\n        while (root) {\n            if (p->val < root->val) {\n                hot_ = root;\n                root = root->left;\n            } else {\n                // 这里有点意思\n                root = root->right;\n            }\n        }\n        return hot_;\n    }\n};","compare_result":"111111111111111111111111","title_slug":"inorder-successor-in-bst","has_notes":false,"flag_type":1}