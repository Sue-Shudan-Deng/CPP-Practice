{"id":395811149,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1600126997,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/395811149/","is_pending":"Not Pending","title":"Inorder Successor in BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    // 下面的解法适用于任何二叉树\n    // BST有更简单的做法\n    // TreeNode* inorderSuccessor(TreeNode* root, TreeNode* p) {\n    //     TreeNode* last(nullptr);\n    //     stack<TreeNode*> s;\n    //     while (root || !s.empty()) {\n    //         while (root) {\n    //             s.push(root);\n    //             root = root->left;\n    //         }\n    //         root = s.top();\n    //         s.pop();\n    //         if (last == p) {\n    //             return root;\n    //         }\n    //         last = root;\n    //         root = root->right;\n    //     }\n    //     return nullptr;\n    // }\n    TreeNode* inorderSuccessor(TreeNode* root, TreeNode* p) {\n        p = p->right;\n        while (p->left) {\n            p = p->left;\n        }\n        return p;\n    }\n};","compare_result":"000000000000000000000000","title_slug":"inorder-successor-in-bst","has_notes":false,"flag_type":1}