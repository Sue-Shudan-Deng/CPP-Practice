{"id":417245788,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604626311,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/417245788/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"18.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isBalanced(self, root: TreeNode) -> bool:\n        if not root:\n            return True\n        \n        def height(root):\n            if not root:\n                return 0\n            l = height(root.left)\n            r = height(root.right)\n            return max(l, r) + 1\n        \n        return abs(height(root.left) - height(root.right)) <= 1 and \\\n               self.isBalanced(root.left) and self.isBalanced(root.right)","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}