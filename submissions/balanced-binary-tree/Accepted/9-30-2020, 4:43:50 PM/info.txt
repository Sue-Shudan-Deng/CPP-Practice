{"id":402875314,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1601509430,"status":10,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/402875314/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"18.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isBalanced(self, root: TreeNode) -> bool:\n        if not root:\n            return True\n        \n        def height(root):\n            if not root:\n                return 0\n            left = height(root.left)\n            right = height(root.right)\n            return 1 + max(left, right)\n        \n        return abs(height(root.left) - height(root.right)) <= 1 and \\\n               self.isBalanced(root.left) and self.isBalanced(root.right)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}