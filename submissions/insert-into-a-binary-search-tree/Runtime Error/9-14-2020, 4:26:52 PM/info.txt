{"id":395806416,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1600126012,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/395806416/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    \npublic:\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        TreeNode* oldroot(root);\n        TreeNode* hot(root);\n        while (root && root->val != val) {\n            hot = root;\n            root = (val < root->val ? root->left : root->right);\n        }\n        if (val < hot->val) {\n            hot->left = new TreeNode(val);\n        } else {\n            hot->right = new TreeNode(val);\n        }\n        return oldroot;\n    }\n};","compare_result":"11111111000000000000000000000000000","title_slug":"insert-into-a-binary-search-tree","has_notes":false,"flag_type":1}