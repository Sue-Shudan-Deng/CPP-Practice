{"id":417845427,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604785567,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/417845427/","is_pending":"Not Pending","title":"Satisfiability of Equality Equations","memory":"14.4 MB","code":"class Solution:\n    def equationsPossible(self, equations: List[str]) -> bool:\n        char_set = set()\n        for s in equations:\n            char_set.add(s[0])\n            char_set.add(s[-1])\n        parent = {c:c for c in char_set}\n        size = {c:1 for c in char_set}\n        \n        def find(x):\n            if x != parent[x]:\n                parent[x] = find(parent[x])\n            return parent[x]\n        \n        def union(x, y):\n            px, py = find(x), find(y)\n            if px == py:\n                return\n            if size[px] > size[py]:\n                px, py = py, px\n            parent[px] = py\n            size[py] += size[px]\n        \n        for e in equations:\n            c1, c2 = e[0], e[-1]\n            op = e[1:3]\n            if op == \"==\":\n                union(c1, c2)\n                \n        for e in equations:\n            c1, c2 = e[0], e[-1]\n            op = e[1:3]\n            if op == \"!=\":\n                p1, p2 = find(c1), find(c2)\n                if p1 == p2:\n                    return False\n                \n        return True","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"satisfiability-of-equality-equations","has_notes":false,"flag_type":1}