{"id":419049238,"lang":"python3","lang_name":"Python3","time":"2Â years, 9Â months","timestamp":1605067590,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/419049238/","is_pending":"Not Pending","title":"Letter Case Permutation","memory":"15.1 MB","code":"class Solution:\n    def letterCasePermutation(self, S: str) -> List[str]:\n        ans, visited = [], set()\n        def dfs(start, cur):\n            n = len(S)\n\n            while start < n and S[start].isnumeric():\n                cur += S[start]\n                start += 1\n                \n            if start < n:\n                dfs(start + 1, cur + S[start].upper())\n                dfs(start + 1, cur + S[start].lower())\n            else:\n                ans.append(cur)\n                \n        dfs(0, \"\")\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"letter-case-permutation","has_notes":false,"flag_type":1}