{"id":293196711,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1578746697,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/293196711/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"15.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isValidBST(self, root: TreeNode) -> bool:\n        \"\"\"\n        1. 分别判断左右子树是否valid\n        2. 分别求出左右子树的最大和最小值，和根结点比较\n        \"\"\"\n        # Edge case\n        if not root or (not root.left and not root.right):\n            return True\n        \n        def minBST(root):\n            while root.left:\n                root = root.left\n            return root\n        \n        def maxBST(root):\n            while root.right:\n                root = root.right\n            return root\n        \n        left_max_valid = maxBST(root.left).val < root.val if root.left else True\n        right_min_valid = root.val < minBST(root.right).val if root.right else True\n        \n        return self.isValidBST(root.left) and self.isValidBST(root.right) and left_max_valid and right_min_valid\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}