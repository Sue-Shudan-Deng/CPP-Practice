{"id":391506820,"lang":"cpp","lang_name":"C++","time":"2 years, 12 months","timestamp":1599340046,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/391506820/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\n// // Iteration, 中序遍历\n// class Solution {\n// public:\n//     bool isValidBST(TreeNode* root) {\n//         stack<TreeNode*> s;\n//         int last = INT_MIN;\n//         int counter = 0;\n//         while (root || !s.empty()) {\n//             while (root) {\n//                 s.push(root);\n//                 root = root->left;\n//             }\n//             root = s.top();\n//             s.pop();\n//             if (root->val <= last && counter != 0) return false;\n//             if (counter == 0) counter++;\n//             last = root->val;\n//             root = root->right;\n//         }\n//         return true;\n//     }\n// };\n\n// Iteration, 先序遍历\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        if (!root) return false;\n        int lower = INT_MIN, upper = INT_MAX;\n        stack<tuple<TreeNode*, int, int>> s;\n        s.emplace(root, lower, upper);\n        while (!s.empty()) {\n            auto [root, lower, upper] = s.top();\n            s.pop();\n            if (root->val != INT_MIN \n             && root->val != INT_MAX \n             && (root->val <= lower || root->val >= upper)) return false;\n            if (root->right) s.emplace(root->right, root->val, upper);\n            if (root->left) s.emplace(root->left, lower, root->val);\n        }\n        return true;\n    }\n};","compare_result":"110111111111111111111111111111111111111111111111111111111110000101010001100","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}