{"id":391500968,"lang":"cpp","lang_name":"C++","time":"2 years, 12 months","timestamp":1599339018,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/391500968/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\n// Iteration, 中序遍历\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        stack<TreeNode*> stack;\n        int last = INT_MIN;\n        while (root || !stack.empty()) {\n            while (root) {\n                stack.push(root);\n                root = root->left;\n            }\n            root = stack.top();\n            stack.pop();\n            if (root->val <= last) return false;\n            root = root->right;\n        }\n        return true;\n    }\n};","compare_result":"101110010010010011111111111111111111001001000000110010001100101010101110011","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}