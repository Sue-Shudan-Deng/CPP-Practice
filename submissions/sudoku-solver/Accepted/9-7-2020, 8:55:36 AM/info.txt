{"id":392345468,"lang":"python3","lang_name":"Python3","time":"2 years, 12 months","timestamp":1599494136,"status":10,"status_display":"Accepted","runtime":"120 ms","url":"/submissions/detail/392345468/","is_pending":"Not Pending","title":"Sudoku Solver","memory":"14.1 MB","code":"class Solution:\n    def solveSudoku(self, board: List[List[str]]) -> None:\n        \"\"\"\n        Do not return anything, modify board in-place instead.\n        \"\"\"\n        row = [[0 for _ in range(10)] for _ in range(9)]\n        col = [[0 for _ in range(10)] for _ in range(9)]\n        box = [[0 for _ in range(10)] for _ in range(9)]\n        \n        for i in range(9):\n            for j in range(9):\n                if board[i][j] != '.':\n                    n = (j // 3) * 3 + (i // 3)\n                    char = int(board[i][j])\n                    row[i][char] = 1\n                    col[j][char] = 1\n                    box[n][char] = 1\n        \n        def update(i, j, char, board, isSet):\n            n = (j // 3) * 3 + (i // 3)\n            row[i][char] = isSet\n            col[j][char] = isSet\n            box[n][char] = isSet\n            board[i][j] = str(char) if isSet else '.'\n        \n        def bt(x = 0, y = 0, board=board):\n            if y == 9:\n                return True\n            \n            nx = (x + 1) % 9\n            ny = y + 1 if nx == 0 else y\n            \n            if board[x][y] != '.':\n                return bt(nx, ny, board)\n            \n            for n in range(1, 10):\n                if not row[x][n] and not col[y][n] and not box[(y//3)*3+(x//3)][n]:\n                    update(x, y, n, board, isSet=1)\n                    if bt(nx, ny):\n                        return True\n                    update(x, y, n, board, isSet=0)\n            return False\n        \n        bt()","compare_result":"111111","title_slug":"sudoku-solver","has_notes":false,"flag_type":1}