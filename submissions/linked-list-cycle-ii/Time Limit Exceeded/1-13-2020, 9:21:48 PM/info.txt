{"id":294036706,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1578979308,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/294036706/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def detectCycle(self, head: ListNode) -> ListNode:\n        \"\"\"\n        龟兔双指针\n        \"\"\"\n        # phase one: intersection\n        slow, fast = head, head.next\n        while slow != fast:\n            if not fast or not fast.next:\n                return None\n            slow = slow.next\n            fast = fast.next.next\n        # phase two: entrance\n        first, second = head, slow\n        while first != second:\n            first = first.next\n            second = second.next\n        return first","compare_result":"0000000000000000","title_slug":"linked-list-cycle-ii","has_notes":false,"flag_type":1}