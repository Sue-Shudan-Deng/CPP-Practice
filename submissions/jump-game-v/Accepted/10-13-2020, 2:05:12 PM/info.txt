{"id":408368396,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602623112,"status":10,"status_display":"Accepted","runtime":"764 ms","url":"/submissions/detail/408368396/","is_pending":"Not Pending","title":"Jump Game V","memory":"14.3 MB","code":"class Solution:\n    def maxJumps(self, arr: List[int], d: int) -> int:\n        \"\"\"\n        难点：1.sort  2.取max\n        \"\"\"\n        arr_index, n = [], len(arr)\n        for k, v in enumerate(arr):\n            arr_index.append((k, v))\n        arr_index.sort(key=lambda x:x[1])\n        dp = [1 for _ in range(n)]\n        \n        for i, h in arr_index:\n            j = i + 1\n            while j <= min(n - 1, i + d) and arr[j] < arr[i]:\n                dp[i] = max(dp[i], dp[j] + 1)\n                j += 1\n            j = i - 1\n            while j >= max(0, i - d) and arr[j] < arr[i]:\n                dp[i] = max(dp[i], dp[j] + 1)\n                j -= 1\n            \n        return max(dp)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"jump-game-v","has_notes":false,"flag_type":1}