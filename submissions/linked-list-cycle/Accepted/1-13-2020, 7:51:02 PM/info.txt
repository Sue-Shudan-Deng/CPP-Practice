{"id":294010868,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1578973862,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/294010868/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"16.4 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: ListNode) -> bool:\n        \"\"\"\n        方法一:用hash table\n        \"\"\"\n        nodes = set()\n        while head:\n            if not head in nodes:\n                nodes.add(head)\n            else:\n                return True\n            head = head.next\n        return False","compare_result":"11111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}