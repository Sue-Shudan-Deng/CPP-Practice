{"id":398787881,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1600703546,"status":10,"status_display":"Accepted","runtime":"144 ms","url":"/submissions/detail/398787881/","is_pending":"Not Pending","title":"Trapping Rain Water II","memory":"10.5 MB","code":"class Solution {\npublic:\n    int trapRainWater(vector<vector<int>>& heightMap) {\n        priority_queue<tuple<int, int, int>, vector<tuple<int, int, int>>, greater<tuple<int, int, int>>> pq;\n        int row = heightMap.size(), col = heightMap[0].size();\n        vector<vector<int>> visited(row, vector<int>(col, 0));\n        vector<pair<int, int>> dirs{{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\n        int ans = 0;\n        \n        for (int i = 0; i < row; ++i) {\n            for (int j = 0; j < col; ++j) {\n                if (i == 0 || i == row-1 || j == 0 || j == col-1) {\n                    visited[i][j] = 1;\n                    pq.emplace(heightMap[i][j], i, j);\n                }\n            }\n        }\n        \n        while (!pq.empty()) {\n            auto [val, r, c] = pq.top();\n            pq.pop();\n            for (auto ds : dirs) {\n                auto [dr, dc] = ds;\n                int new_r = r + dr;\n                int new_c = c + dc;\n                if (0 <= new_r && new_r < row && 0 <= new_c && new_c < col && !visited[new_r][new_c]) {\n                    visited[new_r][new_c] = 1;\n                    ans += max(0, heightMap[r][c] - heightMap[new_r][new_c]);\n                    heightMap[new_r][new_c] = max(heightMap[r][c], heightMap[new_r][new_c]);\n                    pq.emplace(heightMap[new_r][new_c], new_r, new_c);\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"trapping-rain-water-ii","has_notes":false,"flag_type":1}