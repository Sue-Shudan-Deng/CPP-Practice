{"id":402981049,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1601529654,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/402981049/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"14.4 MB","code":"class Solution:\n    def search(self, nums: List[int], target: int) -> int:\n        \"\"\"\n        https://www.youtube.com/watch?v=QdVrY3stDD4&t=1s\n        \"\"\"\n        # step1: search through the smallest element\n        l, r = 0, len(nums) - 1\n        while l < r:\n            m = l + (r - l) // 2\n            if nums[m] <= nums[r]:\n                r = m\n            else:\n                l = m + 1\n                \n        smallest_idx = l\n        l, r = 0, len(nums) - 1\n        # step2: bianry search on target\n        if target <= nums[r]:\n            l = smallest_idx\n        else:\n            r = smallest_idx - 1\n        print(l, r)\n        while l < r:\n            m = l + (r - l) // 2\n            if nums[m] >= target:\n                r = m\n            else:\n                l = m + 1\n        return l if nums[l] == target else -1","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array","has_notes":false,"flag_type":1}