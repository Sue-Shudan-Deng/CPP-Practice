{"id":409135478,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602784953,"status":10,"status_display":"Accepted","runtime":"188 ms","url":"/submissions/detail/409135478/","is_pending":"Not Pending","title":"Minimum Cost Tree From Leaf Values","memory":"14.3 MB","code":"class Solution:\n    def mctFromLeafValues(self, arr: List[int]) -> int:\n        n = len(arr)\n        dp = [[0 for _ in range(n)] for _ in range(n)]\n        maxarray = [[0 for _ in range(n)] for _ in range(n)]\n        for i in range(n):\n            for j in range(i, n):\n                maxarray[i][j] = max(arr[i:j+1])\n        def dfs(i, j):\n            if i == j:\n                dp[i][j] = 0\n                return 0\n            if dp[i][j]:\n                return dp[i][j]\n            tmp = float(\"inf\")\n            for k in range(i, j):\n                tmp = min(tmp, dfs(i, k) + dfs(k+1, j) + maxarray[i][k] * maxarray[k+1][j])\n            dp[i][j] = tmp\n            return tmp\n                \n        return dfs(0, len(arr) - 1)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-tree-from-leaf-values","has_notes":false,"flag_type":1}