{"id":311931947,"lang":"python","lang_name":"Python","time":"3 years, 5 months","timestamp":1584059677,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/311931947/","is_pending":"Not Pending","title":"Clone Graph","memory":"12.2 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node(object):\n    def __init__(self, val = 0, neighbors = []):\n        self.val = val\n        self.neighbors = neighbors\n\"\"\"\nclass Solution(object):\n    def __init__(self):\n        self.seen = dict()\n        \n    def cloneGraph(self, node):\n        \"\"\"\n        :type node: Node\n        :rtype: Node\n        \"\"\"\n        if not node:\n            return node\n        if node in self.seen:\n            return self.seen[node]\n        root = Node(node.val)\n        self.seen[node] = root\n        for n in node.neighbors:\n            root.neighbors.append(self.cloneGraph(n))\n        return root","compare_result":"111111111111111111111","title_slug":"clone-graph","has_notes":false,"flag_type":1}