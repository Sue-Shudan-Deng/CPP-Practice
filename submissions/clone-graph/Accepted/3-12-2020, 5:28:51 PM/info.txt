{"id":311930840,"lang":"python3","lang_name":"Python3","time":"3 years, 5 months","timestamp":1584059331,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/311930840/","is_pending":"Not Pending","title":"Clone Graph","memory":"12.8 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val = 0, neighbors = []):\n        self.val = val\n        self.neighbors = neighbors\n\"\"\"\nclass Solution:\n    def __init__(self):\n        self.visited = {}\n        \n    def cloneGraph(self, node: 'Node') -> 'Node':\n        if not node:\n            return node\n        # 注意:这里用node做key而不是value有效地避免了key的唯一性\n        if node in self.visited:\n            return self.visited[node]\n        root = Node(node.val)\n        self.visited[node] = root\n        for n in node.neighbors:\n            root.neighbors.append(self.cloneGraph(n))\n        return root\n        ","compare_result":"111111111111111111111","title_slug":"clone-graph","has_notes":false,"flag_type":1}