{"id":292850787,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1578628471,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/292850787/","is_pending":"Not Pending","title":"Clone Graph","memory":"13.4 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val, neighbors):\n        self.val = val\n        self.neighbors = neighbors\n\"\"\"\n# DFS\nclass Solution:\n    def __init__(self):\n        self.visited = dict()\n        \n    def cloneGraph(self, node: 'Node') -> 'Node':\n        \"\"\"\n        1. 找到图中所有点\n        2. 复制图中所有点，一一对应\n        3. 复制点对应的边\n        \"\"\"\n        # edge case\n        if not node:\n            return node\n        # 1.已经找到过这个点\n        if self.visited.get(node):\n            return self.visited[node]\n        # 2.先复制结点，再复制neighbors\n        else:\n            new_node = Node(node.val, [])\n            self.visited[node] = new_node\n            if node.neighbors:\n                new_node.neighbors = [self.cloneGraph(nei) for nei in node.neighbors]\n        return new_node","compare_result":"11111111111111111111","title_slug":"clone-graph","has_notes":false,"flag_type":1}