{"id":300832937,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1581014933,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/300832937/","is_pending":"Not Pending","title":"Clone Graph","memory":"12.9 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val = 0, neighbors = []):\n        self.val = val\n        self.neighbors = neighbors\n\"\"\"\nvisited = {}\nclass Solution:\n    def cloneGraph(self, node: 'Node') -> 'Node':\n        def dfs(node: 'Node') -> 'Node':\n            if not node:\n                return node\n            # 注意:这里用node做key而不是value有效地避免了key的唯一性\n            if node in visited:\n                return visited[node]\n            root = Node(node.val)\n            visited[node] = root\n            for n in node.neighbors:\n                root.neighbors.append(dfs(n))\n            return root\n        return dfs(node)           \n        ","compare_result":"111111111111111111111","title_slug":"clone-graph","has_notes":false,"flag_type":1}