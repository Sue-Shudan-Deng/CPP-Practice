{"id":410109500,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602996163,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/410109500/","is_pending":"Not Pending","title":"Best Team With No Conflicts","memory":"N/A","code":"class Solution:\n    def bestTeamScore(self, scores: List[int], ages: List[int]) -> int:\n        \"\"\"\n        这里的dp真的有点巧妙\n        union-find是不成立的：比如0,2是互斥的，但0,3和2,3可能都不是互斥的\n        \"\"\"\n        n = len(scores)\n        dp, res = [0 for _ in range(n + 1)], 0\n        scores.sort()\n        scores_ages = sorted(list(zip(scores, ages)), key=lambda x: x[1])\n        print(scores_ages)\n        for i in range(1, n + 1):\n            si, ai = scores_ages[i-1]\n            dp[i] = 0\n            for j in range(1, i):\n                sj, aj = scores_ages[j-1]\n                if sj <= si:\n                    dp[i] = max(dp[i], dp[j])\n            dp[i] += si\n            res = max(res, dp[i])\n        return res","compare_result":"101111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"best-team-with-no-conflicts","has_notes":false,"flag_type":1}