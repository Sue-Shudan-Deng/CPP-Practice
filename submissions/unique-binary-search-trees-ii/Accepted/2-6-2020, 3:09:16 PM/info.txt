{"id":300887607,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1581030556,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/300887607/","is_pending":"Not Pending","title":"Unique Binary Search Trees II","memory":"13.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def generateTrees(self, n: int) -> List[TreeNode]:\n        def generate_trees(start, end):\n            \"\"\"\n            先生成左右子树，然后把左右子树集合中的每一棵树\n            与根结点合并，更新树集合\n            \"\"\"\n            if start > end:\n                return [None]\n            \n            alltrees = []\n            for i in range(start, end+1):\n                left_trees = generate_trees(start, i-1)\n                right_trees = generate_trees(i+1, end)\n                \n                for l in left_trees:\n                    for r in right_trees:\n                        root = TreeNode(i)\n                        root.left = l\n                        root.right = r\n                        alltrees.append(root)\n                        \n            return alltrees\n        \n        return generate_trees(1, n) if n else []","compare_result":"111111111","title_slug":"unique-binary-search-trees-ii","has_notes":false,"flag_type":1}