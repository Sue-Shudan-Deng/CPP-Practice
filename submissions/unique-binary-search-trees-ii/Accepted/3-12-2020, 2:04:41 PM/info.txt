{"id":311891650,"lang":"python","lang_name":"Python","time":"3 years, 5 months","timestamp":1584047081,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/311891650/","is_pending":"Not Pending","title":"Unique Binary Search Trees II","memory":"15 MB","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution(object):\n    def generateTrees(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: List[TreeNode]\n        \"\"\"\n        def combine(left_idx, right_idx):\n            if left_idx > right_idx:\n                return [None]\n            \n            res = []\n            for idx in range(left_idx, right_idx + 1):\n                left = combine(left_idx, idx - 1)\n                right = combine(idx + 1, right_idx)\n                for l in left:\n                    for r in right:\n                        root = TreeNode(idx)\n                        root.left = l\n                        root.right = r\n                        res.append(root)\n            return res\n        \n        return combine(1, n) if n else []","compare_result":"111111111","title_slug":"unique-binary-search-trees-ii","has_notes":false,"flag_type":1}