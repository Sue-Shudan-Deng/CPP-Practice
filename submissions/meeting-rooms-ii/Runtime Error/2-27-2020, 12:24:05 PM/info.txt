{"id":307476853,"lang":"python3","lang_name":"Python3","time":"3 years, 6 months","timestamp":1582835045,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/307476853/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"N/A","code":"class Solution:\n    def minMeetingRooms(self, intervals: List[List[int]]) -> int:\n        intervals = sorted(intervals, key = lambda x: x[0])\n        free_rooms = []\n        heapq.heappush(free_rooms, intervals[0][1])\n        for i in intervals[1:]:\n            if free_rooms[0] < i[0]:\n                heapq.heappop(free_rooms)\n            heapq.heappush(free_rooms, i[1])\n        return len(free_rooms)","compare_result":"110000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"meeting-rooms-ii","has_notes":false,"flag_type":1}