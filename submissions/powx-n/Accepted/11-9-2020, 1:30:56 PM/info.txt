{"id":418582527,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1604957456,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/418582527/","is_pending":"Not Pending","title":"Pow(x, n)","memory":"14 MB","code":"class Solution:\n    def myPow(self, x: float, n: int) -> float:\n        \"\"\"\n        recursion\n        这里python没办法像c++那样直接用n//2，因为-1//2 = -1\n        \"\"\"\n        def fastPow(x: float, n: int):\n            if n == 0:\n                return 1\n            half = fastPow(x, n//2)\n            if n % 2:\n                return half * half * x\n            else:\n                return half * half\n    \n        if n < 0:\n            x, n = 1 / x, -n\n        return fastPow(x, n)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"powx-n","has_notes":false,"flag_type":1}