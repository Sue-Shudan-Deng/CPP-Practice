{"id":402881722,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1601510876,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/402881722/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"10.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isUnivalTree(TreeNode* root) {\n        if (!root) {\n            return false;\n        }\n        if (!root->left && !root->right) {\n            return true;\n        }\n        bool l = isUnivalTree(root->left);\n        bool r = isUnivalTree(root->right);\n        if (!root->left) {\n            return r && root->right->val == root->val;\n        } else if (!root->right) {\n            return l && root->left->val == root->val;\n        } else {\n            return l && r && root->left->val == root->val && root->right->val == root->val;\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree","has_notes":false,"flag_type":1}