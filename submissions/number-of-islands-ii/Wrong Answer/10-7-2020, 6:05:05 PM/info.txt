{"id":405924113,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1602119105,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/405924113/","is_pending":"Not Pending","title":"Number of Islands II","memory":"N/A","code":"class Solution:\n    def numIslands2(self, m: int, n: int, positions: List[List[int]]) -> List[int]:\n        \n        parent = [-1 for _ in range(m * n)]\n        size = [0 for _ in range(m * n)]\n        cnt = 0\n        ans = []\n        \n        def find(x):\n            while x != parent[x]:\n                parent[x] = parent[parent[x]]\n                x = parent[x]\n            return parent[x]\n        \n        def union(x, y):\n            nonlocal cnt\n            px, py = find(x), find(y)\n            if px == py:\n                return\n            if size[px] > size[py]:\n                px, py = py, px\n            parent[px] = py\n            size[py] += size[px]\n            cnt -= 1\n            \n        for r, c in positions:\n            if r - 1 >= 0 and parent[(r - 1) * n + c] >= 0:\n                union(r * n + c, (r - 1) * n + c)\n            if c - 1 >= 0 and parent[r * n + (c - 1)] >= 0:\n                union(r * n + c, r * n + (c - 1))\n            if r + 1 < m and parent[(r + 1) * n + c] >= 0:\n                union(r * n + c, (r + 1) * n + c)\n            if c + 1 < n and parent[r * n + (c + 1)] >= 0:\n                union(r * n + c, r * n + (c + 1))\n            \n            parent[r * n + c] = r * n + c\n            cnt += 1\n            ans.append(cnt)\n            \n        return ans\n            \n                \n            ","compare_result":"110001111111111100011111111111111111011101111111101011111110100010100000010100000000001011001010000001000000000000100000010100100000001000010011000110000000000000","title_slug":"number-of-islands-ii","has_notes":false,"flag_type":1}