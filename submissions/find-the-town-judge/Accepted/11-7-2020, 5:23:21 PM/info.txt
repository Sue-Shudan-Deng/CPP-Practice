{"id":417896217,"lang":"python3","lang_name":"Python3","time":"2Â years, 10Â months","timestamp":1604798601,"status":10,"status_display":"Accepted","runtime":"708 ms","url":"/submissions/detail/417896217/","is_pending":"Not Pending","title":"Find the Town Judge","memory":"18.5 MB","code":"class Solution:\n    def findJudge(self, N: int, trust: List[List[int]]) -> int:\n\n        if len(trust) < N - 1:\n            return -1\n\n        indegree = [0] * (N + 1)\n        outdegree = [0] * (N + 1)\n\n        for a, b in trust:\n            outdegree[a] += 1\n            indegree[b] += 1\n\n        for i in range(1, N + 1):\n            if indegree[i] == N - 1 and outdegree[i] == 0:\n                return i\n        return -1\n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-town-judge","has_notes":false,"flag_type":1}