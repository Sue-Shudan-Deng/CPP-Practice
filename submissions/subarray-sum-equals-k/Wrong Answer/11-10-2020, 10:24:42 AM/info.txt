{"id":418895716,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605032682,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/418895716/","is_pending":"Not Pending","title":"Subarray Sum Equals K","memory":"N/A","code":"class Solution:\n    def subarraySum(self, nums: List[int], k: int) -> int:\n#         \"\"\"\n#         method 1: 标准解法，非常tricky\n#         \"\"\"\n#         prefix_sum = collections.defaultdict(int)\n#         cursum, cnt = 0, 0\n#         for num in nums:\n#             cursum += num\n#             if cursum == k:\n#                 cnt += 1 # forward\n#             cnt += prefix_sum[cursum - k] # backward\n#             prefix_sum[cursum] += 1\n            \n#         return cnt\n    \n        \"\"\"\n        method 2: bianry search\n        \"\"\"\n        n = len(nums)\n        if n == 0:\n            return 0\n        prefix = [0 for _ in range(n + 1)]\n        prefix[1] = nums[0]\n        for i in range(2, n + 1):\n            prefix[i] = prefix[i-1] + nums[i-1]\n            \n        cur, cnt = [[0, 0]], 0\n        for j in range(1, n + 1):\n            bisect.insort(cur, [prefix[j], j])\n            l = bisect.bisect_left(cur, [prefix[j] - k])\n            r = bisect.bisect_right(cur, [prefix[j] - k, float(\"inf\")])\n            cnt += (r - l)\n            \n        return cnt","compare_result":"11110011010111101111111111111111111110111111111111111111111111111111111111111111111111110","title_slug":"subarray-sum-equals-k","has_notes":false,"flag_type":1}