{"id":418899489,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1605033538,"status":10,"status_display":"Accepted","runtime":"248 ms","url":"/submissions/detail/418899489/","is_pending":"Not Pending","title":"Subarray Sum Equals K","memory":"18.2 MB","code":"class Solution:\n    def subarraySum(self, nums: List[int], k: int) -> int:\n        \"\"\"\n        method 1: 标准解法，非常tricky\n        \"\"\"\n        prefix = collections.defaultdict(int)\n        prefix[0] = 1\n        cursum, cnt = 0, 0\n        for num in nums:\n            cursum += num\n            cnt += prefix[cursum - k] # backward\n            prefix[cursum] += 1\n            \n        return cnt\n    \n#         \"\"\"\n#         method 2: bianry search\n#         \"\"\"\n#         n = len(nums)\n#         if n == 0:\n#             return 0\n#         prefix = [0 for _ in range(n + 1)]\n#         prefix[1] = nums[0]\n#         for i in range(2, n + 1):\n#             prefix[i] = prefix[i-1] + nums[i-1]\n            \n#         cur, cnt = [[0, 0]], 0\n#         for j in range(1, n + 1):\n#             l = bisect.bisect_left(cur, [prefix[j] - k])\n#             r = bisect.bisect_right(cur, [prefix[j] - k, float(\"inf\")])\n#             cnt += (r - l)\n#             bisect.insort(cur, [prefix[j], j])\n            \n#         return cnt","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subarray-sum-equals-k","has_notes":false,"flag_type":1}