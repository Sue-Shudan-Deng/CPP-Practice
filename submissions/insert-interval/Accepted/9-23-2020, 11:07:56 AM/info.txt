{"id":399763440,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600884476,"status":10,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/399763440/","is_pending":"Not Pending","title":"Insert Interval","memory":"17.3 MB","code":"class Solution:\n    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:\n        # step 1, binary search, insert the new interval to the original intervals\n        l, r = 0, len(intervals)\n        while l < r:\n            m = l + (r - l) // 2\n            if intervals[m][0] >= newInterval[0]:\n                r = m\n            else:\n                l = m + 1\n        # insertion point: l\n        intervals = intervals[:l] + [newInterval] + intervals[l:]\n        \n        # step 2, merge intervals\n        merged = []\n        for i in intervals:\n            if not merged or merged[-1][1] < i[0]:\n                merged.append(i)\n            else:\n                merged[-1][1] = max(merged[-1][1], i[1])\n        return merged","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"insert-interval","has_notes":false,"flag_type":1}