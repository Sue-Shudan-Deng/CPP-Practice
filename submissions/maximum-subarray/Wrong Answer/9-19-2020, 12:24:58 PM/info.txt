{"id":397970212,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600543498,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/397970212/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"N/A","code":"class Solution:\n    def maxSubArray(self, nums: List[int]) -> int:\n        \"\"\"\n        DP\n        \"\"\"\n        n = len(nums)\n        if n == 1:\n            return nums[0]\n        dp = [0 for _ in range(n+1)]\n        for i in range(1, n+1):\n            # 用不用之前的数组？用，第一个; 不用，第二个\n            dp[i] = max(dp[i-1] + nums[i-1], nums[i-1])\n        return max(dp)","compare_result":"1111110011101111110101111111111101111111110111101111111110111111111111101111111111111111111111110111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111101111","title_slug":"maximum-subarray","has_notes":false,"flag_type":1}