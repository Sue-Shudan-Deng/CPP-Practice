{"id":292563240,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1578545121,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/292563240/","is_pending":"Not Pending","title":"Path Sum","memory":"14.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\n# Recursion:\n# class Solution:\n#     def hasPathSum(self, root: TreeNode, sum: int) -> bool:\n#         if not root: \n#             return False\n#         sum -= root.val\n#         if not root.left and not root.right:\n#             return sum == 0\n#         else:\n#             return self.hasPathSum(root.left, sum) or self.hasPathSum(root.right, sum)\n        \n# Iteration:\nfrom collections import deque\nclass Solution:\n    def hasPathSum(self, root: TreeNode, sum: int) -> bool:\n        if not root:\n            return False\n        queue = deque([(root, sum)])\n        while queue:\n            curr, sum = queue.popleft()\n            sum -= curr.val\n            if not curr.left and not curr.right and sum == 0:\n                return True\n            if curr.left:\n                queue.append((curr.left, sum))\n            if curr.right:\n                queue.append((curr.right, sum))\n        return False","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum","has_notes":false,"flag_type":1}