{"id":394823381,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1599955854,"status":10,"status_display":"Accepted","runtime":"496 ms","url":"/submissions/detail/394823381/","is_pending":"Not Pending","title":"Race Car","memory":"14.1 MB","code":"class Solution(object):\n    def racecar(self, target):\n        dp = [0, 1, 4] + [float('inf')] * target\n        for t in range(3, target + 1):\n            k = t.bit_length()\n            if t == 2**k - 1:\n                dp[t] = k\n                continue\n            for j in range(k - 1):\n                dp[t] = min(dp[t], dp[t - 2**(k - 1) + 2**j] + k - 1 + j + 2)\n            if 2**k - 1 - t < t:\n                dp[t] = min(dp[t], dp[2**k - 1 - t] + k + 1)\n        return dp[target]","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"race-car","has_notes":false,"flag_type":1}