{"id":391130421,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1599268077,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/391130421/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        if (!root || root->val == val) return root;\n        return root->val < val ? searchBST(root->left, val) : searchBST(root->right, val);\n    }\n};","compare_result":"010100100000000000000000000000000011","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}