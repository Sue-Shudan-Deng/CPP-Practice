{"id":391130899,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1599268212,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/391130899/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"35 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        if (!root || root->val == val) return root;\n        return val < root->val ? searchBST(root->left, val) : searchBST(root->right, val);\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}