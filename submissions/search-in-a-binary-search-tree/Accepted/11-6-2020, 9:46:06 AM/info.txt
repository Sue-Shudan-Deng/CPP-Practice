{"id":417474539,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604684766,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/417474539/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"15.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def searchBST(self, root: TreeNode, val: int) -> TreeNode:\n        \"\"\"\n        Recursion\n        \"\"\"\n        if not root:\n            return root\n        \n        if val < root.val:\n            return self.searchBST(root.left, val)\n        elif val > root.val:\n            return self.searchBST(root.right, val)\n        else:\n            return root\n    \n# class Solution:\n#     def searchBST(self, root: TreeNode, val: int) -> TreeNode:\n#         \"\"\"\n#         Iteration\n#         \"\"\"\n#         while root and root.val != val:\n#             root = root.left if val < root.val else root.right\n#         return root","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}