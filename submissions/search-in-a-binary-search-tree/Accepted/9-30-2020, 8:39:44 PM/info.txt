{"id":402944172,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1601523584,"status":10,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/402944172/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"16.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def searchBST(self, root: TreeNode, val: int) -> TreeNode:\n        \"\"\"\n        Recursion\n        \"\"\"\n        if not root or val == root.val:\n            return root\n        \n        return self.searchBST(root.left, val) if val < root.val \\\n            else self.searchBST(root.right, val)\n    \nclass Solution:\n    def searchBST(self, root: TreeNode, val: int) -> TreeNode:\n        \"\"\"\n        Iteration\n        \"\"\"\n        while root and root.val != val:\n            root = root.left if val < root.val else root.right\n        return root","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}