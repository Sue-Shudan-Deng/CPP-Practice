{"id":408103386,"lang":"python3","lang_name":"Python3","time":"2Â years, 10Â months","timestamp":1602566040,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/408103386/","is_pending":"Not Pending","title":"Stone Game II","memory":"N/A","code":"class Solution:\n    def stoneGameII(self, piles: List[int]) -> int:\n        \"\"\"\n        https://www.youtube.com/watch?v=e_FrC5xavwI\n        Recursion with mem\n        \"\"\"\n        n = len(piles)\n        dp = [[0 for _ in range(n + 1)] for _ in range(n)]\n        def dfs(i, M):\n            if i >= n:\n                return 0\n            M = min(M, n)\n            if i + 2 * M >= n:\n                dp[i][M] = sum(piles[i:])\n                return dp[i][M]\n            # make sure i + 2 * M < n\n            tmp, curr = float(\"-inf\"), 0\n            for x in range(1, 2 * M + 1):\n                curr += piles[i + x - 1]\n                tmp = max(tmp, curr - dfs(i+x, max(M, x)))\n            dp[i][M] = tmp\n            return tmp\n        return (sum(piles) + dfs(0, 1)) // 2","compare_result":"111111111110000000000","title_slug":"stone-game-ii","has_notes":false,"flag_type":1}