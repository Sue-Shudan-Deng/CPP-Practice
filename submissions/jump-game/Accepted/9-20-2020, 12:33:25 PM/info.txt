{"id":398426445,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600630405,"status":10,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/398426445/","is_pending":"Not Pending","title":"Jump Game","memory":"15.9 MB","code":"class Solution:\n    \"\"\"\n    Solution 1: DP, TLE, O(n^2)\n    \"\"\"\n    # def canJump(self, nums: List[int]) -> bool:\n    #     n = len(nums)\n    #     dp = [False for _ in range(n)]\n    #     dp[-1] = True\n    #     for i in range(n-2, -1, -1):\n    #         for j in range(i+1, i+nums[i]+1):\n    #             if j >= n or dp[j]:\n    #                 dp[i] = True\n    #                 break\n    #     return dp[0]\n    \"\"\"\n    Solution 2: Greedy, O(n)\n    we only need to keep track of the furthest achievable element\n    \"\"\"\n    def canJump(self, nums: List[int]) -> bool:\n        n = len(nums)\n        lastpoint = n-1\n        for i in range(n-2, -1, -1):\n            if i + nums[i] >= lastpoint:\n                lastpoint = i\n        return lastpoint == 0","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"jump-game","has_notes":false,"flag_type":1}