{"id":407095348,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602371039,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/407095348/","is_pending":"Not Pending","title":"Longest String Chain","memory":"N/A","code":"class Solution:\n    def longestStrChain(self, words: List[str]) -> int:\n        def ispredecessor(word1, word2):\n            i, j, n1, n2, cnt = 0, 0, len(word1), len(word2), 0\n            while i < n1 and j < n2:\n                if word1[i] != word2[j]:\n                    j += 1\n                    cnt += 1\n                    continue\n                i += 1\n                j += 1\n            if cnt == 0 and j == n2 - 1:\n                cnt += 1\n                j += 1\n            return False if cnt > 1 or i != n1 or j != n2 else True\n        \n        words.sort(key=lambda x: len(x))\n        n = len(words)\n        dp = [1 for _ in range(n)]\n        \n        for i in range(n):\n            for j in range(i):\n                if ispredecessor(words[j], words[i]):\n                    dp[i] = max(dp[i], dp[j] + 1)\n        return max(dp)","compare_result":"11111111111111111111111111101110111110111101111111110011101111111100000","title_slug":"longest-string-chain","has_notes":false,"flag_type":1}