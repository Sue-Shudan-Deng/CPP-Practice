{"id":311420460,"lang":"python3","lang_name":"Python3","time":"3 years, 5 months","timestamp":1583903639,"status":10,"status_display":"Accepted","runtime":"188 ms","url":"/submissions/detail/311420460/","is_pending":"Not Pending","title":"Prime Palindrome","memory":"12.8 MB","code":"class Solution:\n    def primePalindrome(self, N: int) -> int:\n        \"\"\"\n        这道题非常重要！！！\n        \"\"\"\n        def is_prime(n):\n            return n > 1 and all(n%d for d in range(2, int(n**.5) + 1))\n\n        for length in range(1, 6):\n            #Check for odd-length palindromes\n            for root in range(10**(length - 1), 10**length):\n                s = str(root)\n                x = int(s + s[-2::-1]) #eg. s = '123' to x = int('12321')\n                if x >= N and is_prime(x):\n                    return x\n                    #If we didn't check for even-length palindromes:\n                    #return min(x, 11) if N <= 11 else x\n\n            #Check for even-length palindromes\n            for root in range(10**(length - 1), 10**length):\n                s = str(root)\n                x = int(s + s[-1::-1]) #eg. s = '123' to x = int('123321')\n                if x >= N and is_prime(x):\n                    return x","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"prime-palindrome","has_notes":false,"flag_type":1}