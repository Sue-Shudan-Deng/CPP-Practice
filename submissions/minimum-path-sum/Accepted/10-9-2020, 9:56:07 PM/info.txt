{"id":406796632,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1602305767,"status":10,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/406796632/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"15.6 MB","code":"class Solution:\n    def minPathSum(self, grid: List[List[int]]) -> int:\n        if grid == []:\n            return 0\n        row = len(grid)\n        col = len(grid[0])\n        dp = [[float(\"inf\") for _ in range(col + 1)] for _ in range(row + 1)]\n        dp[0][1], dp[1][0] = 0, 0\n        for i in range(1, row + 1):\n            for j in range(1, col + 1):\n                dp[i][j] = grid[i-1][j-1] + min(dp[i-1][j], dp[i][j-1])\n        return dp[-1][-1]","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false,"flag_type":1}