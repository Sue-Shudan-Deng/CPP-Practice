{"id":400303361,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600986383,"status":10,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/400303361/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"15.5 MB","code":"class Solution:\n    def minPathSum(self, grid: List[List[int]]) -> int:\n        if grid == []:\n            return 0\n        row = len(grid)\n        col = len(grid[0])\n        dp = [[0 for _ in range(col)] for _ in range(row)]\n        \n        for i in range(0, row):\n            for j in range(0, col):\n                if i == 0 and j == 0:\n                    tmp = 0\n                elif i-1 < 0:\n                    tmp = dp[i][j-1]\n                elif j-1 < 0:\n                    tmp = dp[i-1][j]\n                else:\n                    tmp = min(dp[i-1][j], dp[i][j-1])\n                dp[i][j] = grid[i][j] + tmp\n        return dp[-1][-1]","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false,"flag_type":1}