{"id":417790474,"lang":"python3","lang_name":"Python3","time":"2 years, 10 months","timestamp":1604772672,"status":10,"status_display":"Accepted","runtime":"1516 ms","url":"/submissions/detail/417790474/","is_pending":"Not Pending","title":"Insertion Sort List","memory":"15.9 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def insertionSortList(self, head: ListNode) -> ListNode:\n        pseudo_head = ListNode()\n\n        curr = head\n        while curr:\n            # At each iteration, we insert an element into the resulting list.\n            prev_node = pseudo_head\n            next_node = prev_node.next\n            # find the position to insert the current node\n            while next_node:\n                if curr.val < next_node.val:\n                    break\n                prev_node = next_node\n                next_node = next_node.next\n\n            next_iter = curr.next\n            # insert the current node to the new list\n            curr.next = next_node\n            prev_node.next = curr\n\n            # moving on to the next iteration\n            curr = next_iter\n\n        return pseudo_head.next","compare_result":"1111111111111111111111","title_slug":"insertion-sort-list","has_notes":false,"flag_type":1}