{"id":287654106,"lang":"python","lang_name":"Python","time":"3 years, 8 months","timestamp":1576984183,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/287654106/","is_pending":"Not Pending","title":"Divide Array in Sets of K Consecutive Numbers","memory":"N/A","code":"import copy\nclass Solution(object):\n    def isconsect(self, nums):\n        x = sorted(nums)\n        return x == sorted(list(set(x))) and x[-1] - x[0] == len(x) - 1\n\n    def isPossibleDivide(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: bool\n        \"\"\"\n        if nums == []:\n            return True\n        new_nums = copy.deepcopy(nums)\n        if len(nums) % k != 0:\n            return False\n        else:\n            x = list(set(sorted(new_nums)))\n            if len(x) < k:\n                return False\n            else:\n                for v in x[:k]:\n                    del new_nums[new_nums.index(v)]\n                return self.isconsect(x[:k]) and self.isPossibleDivide(new_nums, k)        ","compare_result":"111111110111111111111110011111011001000","title_slug":"divide-array-in-sets-of-k-consecutive-numbers","has_notes":false,"flag_type":1}