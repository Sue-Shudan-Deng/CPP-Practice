{"id":287665964,"lang":"python","lang_name":"Python","time":"3 years, 8 months","timestamp":1576986647,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/287665964/","is_pending":"Not Pending","title":"Divide Array in Sets of K Consecutive Numbers","memory":"N/A","code":"class Solution(object):\n    def isconsect(self, nums):\n        return len(nums) == len(set(nums)) and max(nums) - min(nums) == len(nums) - 1\n\n    def isPossibleDivide(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: bool\n        \"\"\"\n        if nums == []:\n            return True\n        if len(nums) % k != 0:\n            return False\n        else:\n            x = list(sorted(set(nums)))\n            if len(x) < k:\n                return False\n            else:\n                while (len(list(filter(lambda t: t in nums, x[:k]))) == k):\n                    for v in x[:k]:\n                        del nums[nums.index(v)]\n                return self.isconsect(x[:k]) and self.isPossibleDivide(nums, k)","compare_result":"111111111111111111111111111111111110000","title_slug":"divide-array-in-sets-of-k-consecutive-numbers","has_notes":false,"flag_type":1}