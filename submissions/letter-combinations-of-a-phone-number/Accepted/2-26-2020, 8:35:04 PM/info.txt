{"id":307287528,"lang":"python","lang_name":"Python","time":"3 years, 6 months","timestamp":1582778104,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/307287528/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"11.9 MB","code":"class Solution(object):\n    def letterCombinations(self, digits):\n        \"\"\"\n        :type digits: str\n        :rtype: List[str]\n        \"\"\"\n        ans = []\n        phone = {'2': ['a', 'b', 'c'],\n         '3': ['d', 'e', 'f'],\n         '4': ['g', 'h', 'i'],\n         '5': ['j', 'k', 'l'],\n         '6': ['m', 'n', 'o'],\n         '7': ['p', 'q', 'r', 's'],\n         '8': ['t', 'u', 'v'],\n         '9': ['w', 'x', 'y', 'z']}\n        \n        def bt(curr = \"\", nxt = digits):\n            if nxt == \"\":\n                ans.append(curr)\n                return\n            else:\n                for i in phone[nxt[0]]:\n                    bt(curr + i, nxt[1:])\n        bt()\n        return ans if digits != \"\" else [] ","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false,"flag_type":1}