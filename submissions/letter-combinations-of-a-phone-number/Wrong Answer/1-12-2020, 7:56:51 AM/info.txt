{"id":293541126,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1578844611,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/293541126/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"N/A","code":"class Solution:\n    def letterCombinations(self, digits: str) -> List[str]:\n        \n        phone = {'2': ['a', 'b', 'c'],\n         '3': ['d', 'e', 'f'],\n         '4': ['g', 'h', 'i'],\n         '5': ['j', 'k', 'l'],\n         '6': ['m', 'n', 'o'],\n         '7': ['p', 'q', 'r', 's'],\n         '8': ['t', 'u', 'v'],\n         '9': ['w', 'x', 'y', 'z']}\n        \n        ans = []\n        def backtrace(res = \"\", next_digit = digits):\n            if next_digit == \"\":\n                ans.append(res[:])\n                return\n            \n            for i in phone[next_digit[0]]:\n                backtrace(res + i, next_digit[1:])\n                \n        backtrace(\"\", digits)\n        return ans","compare_result":"1011111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false,"flag_type":1}