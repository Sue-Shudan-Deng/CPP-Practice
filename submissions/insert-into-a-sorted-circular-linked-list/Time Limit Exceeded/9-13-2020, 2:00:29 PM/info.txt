{"id":395253415,"lang":"python3","lang_name":"Python3","time":"2 years, 11 months","timestamp":1600030829,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/395253415/","is_pending":"Not Pending","title":"Insert into a Sorted Circular Linked List","memory":"N/A","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val=None, next=None):\n        self.val = val\n        self.next = next\n\"\"\"\n\nclass Solution:\n    def insert(self, head: 'Node', insertVal: int) -> 'Node':\n        \n        def toInsert(pre: 'Node', cur: 'Node', insertVal: int) -> bool:\n            # case 1\n            flag1 = pre.val < insertVal and insertVal < cur.val\n            flag2 = pre.val > cur.val and (insertVal > pre.val or insertVal < cur.val)\n            flag3 = pre.val == cur.val\n            return flag1 or flag2 or flag3\n\n        if not head:\n            newNode = Node(insertVal, None)\n            newNode.next = newNode\n            return newNode\n        \n        pre, cur = head, head.next\n        while True:\n            if toInsert(pre, cur, insertVal):\n                newNode = Node(insertVal, None)\n                newNode.next = cur\n                pre.next = newNode\n                return head\n            pre = cur\n            cur = cur.next\n        ","compare_result":"1111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"insert-into-a-sorted-circular-linked-list","has_notes":false,"flag_type":1}